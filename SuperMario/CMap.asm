; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Administrator\Documents\Visual Studio 2010\Projects\SuperMario__\SuperMario_\SuperMario\CMap.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4?$codecvt@DDH@std@@6B@			; std::codecvt<char,char,int>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$codecvt@DDH@std@@8			; std::codecvt<char,char,int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$codecvt@DDH@std@@8			; std::codecvt<char,char,int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$codecvt@DDH@std@@8		; std::codecvt<char,char,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$codecvt@DDH@std@@@8			; std::codecvt<char,char,int> `RTTI Type Descriptor'
PUBLIC	??_R4CMap@@6B@					; CMap::`RTTI Complete Object Locator'
PUBLIC	??_R3CMap@@8					; CMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMap@@8					; CMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMap@@8				; CMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCMap@@@8				; CMap `RTTI Type Descriptor'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R4codecvt_base@std@@6B@			; std::codecvt_base::`RTTI Complete Object Locator'
PUBLIC	??_R3codecvt_base@std@@8			; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2codecvt_base@std@@8			; std::codecvt_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@codecvt_base@std@@8		; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVcodecvt_base@std@@@8			; std::codecvt_base `RTTI Type Descriptor'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_istream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4ios_base@std@@6B@				; std::ios_base::`RTTI Complete Object Locator'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_GCMap@@UAEPAXI@Z				; CMap::`scalar deleting destructor'
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of
PUBLIC	?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of
PUBLIC	?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_not_of
PUBLIC	?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_not_of
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z	; std::char_traits<char>::find
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	??7ios_base@std@@QBE_NXZ			; std::ios_base::operator!
PUBLIC	?eof@ios_base@std@@QBE_NXZ			; std::ios_base::eof
PUBLIC	?is@?$ctype@D@std@@QBE_NFD@Z			; std::ctype<char>::is
PUBLIC	?good@ios_base@std@@QBE_NXZ			; std::ios_base::good
PUBLIC	?flags@ios_base@std@@QBEHXZ			; std::ios_base::flags
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	?fail@ios_base@std@@QBE_NXZ			; std::ios_base::fail
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc
PUBLIC	?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sgetc
PUBLIC	?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc
PUBLIC	?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::snextc
PUBLIC	?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z ; std::basic_istream<char,std::char_traits<char> >::getline
PUBLIC	?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_J@Z ; std::basic_istream<char,std::char_traits<char> >::getline
PUBLIC	?clear@ios_base@std@@QAEXH@Z			; std::ios_base::clear
PUBLIC	?_Init@ios_base@std@@IAEXXZ			; std::ios_base::_Init
PUBLIC	?rdstate@ios_base@std@@QBEHXZ			; std::ios_base::rdstate
PUBLIC	??0error_code@std@@QAE@HABVerror_category@1@@Z	; std::error_code::error_code
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ; std::make_error_code
PUBLIC	?_Makestr@system_error@std@@AAEXXZ		; std::system_error::_Makestr
PUBLIC	??0system_error@std@@QAE@Verror_code@1@PBD@Z	; std::system_error::system_error
PUBLIC	??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UAE@XZ			; std::ios_base::failure::~failure
PUBLIC	??_Gfailure@ios_base@std@@UAEPAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	??0failure@ios_base@std@@QAE@ABV012@@Z		; std::ios_base::failure::failure
PUBLIC	??1system_error@std@@UAE@XZ			; std::system_error::~system_error
PUBLIC	??_Gsystem_error@std@@UAEPAXI@Z			; std::system_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QAE@ABV01@@Z		; std::system_error::system_error
PUBLIC	?clear@ios_base@std@@QAEXH_N@Z			; std::ios_base::clear
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?widen@?$ctype@D@std@@QBEDD@Z			; std::ctype<char>::widen
PUBLIC	??0ctype_base@std@@QAE@I@Z			; std::ctype_base::ctype_base
PUBLIC	?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z	; std::ctype<char>::_Init
PUBLIC	?do_tolower@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_toupper@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_widen@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z	; std::ctype<char>::do_widen
PUBLIC	?do_narrow@?$ctype@D@std@@MBEDDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z	; std::ctype<char>::do_narrow
PUBLIC	??_Gctype_base@std@@UAEPAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	??1ctype_base@std@@UAE@XZ			; std::ctype_base::~ctype_base
PUBLIC	?_Tidy@?$ctype@D@std@@IAEXXZ			; std::ctype<char>::_Tidy
PUBLIC	??1?$ctype@D@std@@MAE@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	??_G?$ctype@D@std@@MAEPAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z		; std::ctype<char>::ctype<char>
PUBLIC	?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	?getloc@ios_base@std@@QBE?AVlocale@2@XZ		; std::ios_base::getloc
PUBLIC	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
PUBLIC	?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ; std::basic_ios<char,std::char_traits<char> >::init
PUBLIC	??0ios_base@std@@IAE@XZ				; std::ios_base::ios_base
PUBLIC	??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >
PUBLIC	??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::basic_istream<char,std::char_traits<char> >::basic_istream<char,std::char_traits<char> >
PUBLIC	??0locale@std@@QAE@XZ				; std::locale::locale
PUBLIC	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??0locale@std@@QAE@ABV01@@Z			; std::locale::locale
PUBLIC	?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ; std::basic_streambuf<char,std::char_traits<char> >::getloc
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??_Gios_base@std@@UAEPAXI@Z			; std::ios_base::`scalar deleting destructor'
PUBLIC	??1ios_base@std@@UAE@XZ				; std::ios_base::~ios_base
PUBLIC	??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
PUBLIC	??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_istream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_istream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
PUBLIC	?_Decref@facet@locale@std@@QAEPAV123@XZ		; std::locale::facet::_Decref
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	??_Glocale@std@@QAEPAXI@Z			; std::locale::`scalar deleting destructor'
PUBLIC	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::uflow
PUBLIC	?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_streambuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_streambuf<char,std::char_traits<char> >::imbue
PUBLIC	??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
PUBLIC	?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ; std::basic_streambuf<char,std::char_traits<char> >::gbump
PUBLIC	?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
PUBLIC	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
PUBLIC	?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ; std::basic_streambuf<char,std::char_traits<char> >::pbump
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
PUBLIC	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::pptr
PUBLIC	?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::epptr
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::out
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec
PUBLIC	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z		; std::_Ungetc<char>
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::egptr
PUBLIC	?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc
PUBLIC	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::in
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::gptr
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
PUBLIC	??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
PUBLIC	?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z	; std::codecvt<char,char,int>::unshift
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::eback
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	??0?$fpos@H@std@@QAE@H_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	?state@?$fpos@H@std@@QBEHXZ			; std::fpos<int>::state
PUBLIC	?seekpos@?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::seekpos
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z ; std::basic_streambuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?always_noconv@codecvt_base@std@@QBE_NXZ	; std::codecvt_base::always_noconv
PUBLIC	?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ; std::basic_streambuf<char,std::char_traits<char> >::setg
PUBLIC	?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z ; std::basic_streambuf<char,std::char_traits<char> >::setp
PUBLIC	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	??Bid@locale@std@@QAEIXZ			; std::locale::id::operator unsigned int
PUBLIC	?_Incref@facet@locale@std@@QAEXXZ		; std::locale::facet::_Incref
PUBLIC	?_Register@facet@locale@std@@QAEXXZ		; std::locale::facet::_Register
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??0?$_Yarn@D@std@@QAE@XZ			; std::_Yarn<char>::_Yarn<char>
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??0_Locinfo@std@@QAE@PBD@Z			; std::_Locinfo::_Locinfo
PUBLIC	?_Tidy@?$_Yarn@D@std@@AAEXXZ			; std::_Yarn<char>::_Tidy
PUBLIC	??1?$_Yarn@D@std@@QAE@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	??1_Locinfo@std@@QAE@XZ				; std::_Locinfo::~_Locinfo
PUBLIC	?c_str@?$_Yarn@D@std@@QBEPBDXZ			; std::_Yarn<char>::c_str
PUBLIC	?c_str@locale@std@@QBEPBDXZ			; std::locale::c_str
PUBLIC	??0facet@locale@std@@IAE@I@Z			; std::locale::facet::facet
PUBLIC	??0codecvt_base@std@@QAE@I@Z			; std::codecvt_base::codecvt_base
PUBLIC	?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z	; std::codecvt<char,char,int>::_Init
PUBLIC	?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::do_in
PUBLIC	?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::do_out
PUBLIC	?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z ; std::codecvt<char,char,int>::do_unshift
PUBLIC	?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z	; std::codecvt<char,char,int>::do_length
PUBLIC	??_Gfacet@locale@std@@UAEPAXI@Z			; std::locale::facet::`scalar deleting destructor'
PUBLIC	??1facet@locale@std@@UAE@XZ			; std::locale::facet::~facet
PUBLIC	?do_always_noconv@codecvt_base@std@@MBE_NXZ	; std::codecvt_base::do_always_noconv
PUBLIC	?do_max_length@codecvt_base@std@@MBEHXZ		; std::codecvt_base::do_max_length
PUBLIC	?do_encoding@codecvt_base@std@@MBEHXZ		; std::codecvt_base::do_encoding
PUBLIC	??_Gcodecvt_base@std@@UAEPAXI@Z			; std::codecvt_base::`scalar deleting destructor'
PUBLIC	??1codecvt_base@std@@UAE@XZ			; std::codecvt_base::~codecvt_base
PUBLIC	??1?$codecvt@DDH@std@@MAE@XZ			; std::codecvt<char,char,int>::~codecvt<char,char,int>
PUBLIC	??_G?$codecvt@DDH@std@@MAEPAXI@Z		; std::codecvt<char,char,int>::`scalar deleting destructor'
PUBLIC	??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z	; std::codecvt<char,char,int>::codecvt<char,char,int>
PUBLIC	?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::codecvt<char,char,int>::_Getcat
PUBLIC	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?GetBitmap@CGdiBmp@@QAEPAUHBITMAP__@@XZ		; CGdiBmp::GetBitmap
PUBLIC	?getBmpWidth@CGdiBmp@@QAEHXZ			; CGdiBmp::getBmpWidth
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@	; `string'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ ; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@	; `string'
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
PUBLIC	__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
PUBLIC	__CTA4?AVfailure@ios_base@std@@
PUBLIC	__TI4?AVfailure@ios_base@std@@
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_01NEMOKFLO@?$DN?$AA@			; `string'
PUBLIC	??_C@_0P@CAEJGILI@para?3?$CFd?5?$CFd?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@GMILBNBM@init?5matrix?5ok?$CB?6?$AA@	; `string'
PUBLIC	??_C@_0BB@PFNFOMEA@?$LO?X?U?s?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@ ; `string'
PUBLIC	??_C@_0BB@LODPGGLF@?M?$LM?$LP?i?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@ ; `string'
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_R0PAX@8					; void * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAD@84
PUBLIC	__CT??_R0PAX@84
PUBLIC	__CTA2PAD
PUBLIC	__TI2PAD
PUBLIC	??_C@_1BC@IOCOMCJD@w?i?$JG5?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@ ; `string'
PUBLIC	??_R0PA_W@8					; wchar_t * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PA_W@84
PUBLIC	__CTA2PA_W
PUBLIC	__TI2PA_W
PUBLIC	??_C@_1BC@GLMAJFJM@V?$POWW?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BL@LPBPKMDE@?6?$CK?$CKOpen?5Map?5File?5Error?$CB?$CK?$CK?6?$AA@ ; `string'
PUBLIC	??_C@_09MCCEOMFC@map_width?$AA@			; `string'
PUBLIC	??_C@_0L@JCJMLIFK@map_height?$AA@		; `string'
PUBLIC	??_C@_0L@MICNGMNL@tile_width?$AA@		; `string'
PUBLIC	??_C@_0M@GPCIKFO@tile_height?$AA@		; `string'
PUBLIC	??_C@_0L@KKAMNNMB@image_path?$AA@		; `string'
PUBLIC	??_C@_04JFCNHLLM@back?$AA@			; `string'
PUBLIC	??_C@_07PFBBHFFC@barrier?$AA@			; `string'
PUBLIC	??_C@_08CBKMNFCB@Rows?3?$CFd?6?$AA@		; `string'
PUBLIC	??_C@_08PPMOELCH@Cols?3?$CFd?6?$AA@		; `string'
PUBLIC	??_C@_0O@IHGHJAGB@Tile?3?$FL?$CFd?0?$CFd?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_03JDANDILB@?$CFd?5?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0CF@LEEGIBIK@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	?_Stz@?$fpos@H@std@@0HB				; std::fpos<int>::_Stz
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7ios_base@std@@6B@				; std::ios_base::`vftable'
PUBLIC	??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_istream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_istream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_7codecvt_base@std@@6B@			; std::codecvt_base::`vftable'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	??_7CMap@@6B@					; CMap::`vftable'
PUBLIC	??_7?$codecvt@DDH@std@@6B@			; std::codecvt<char,char,int>::`vftable'
EXTRN	??_ECMap@@UAEPAXI@Z:PROC			; CMap::`vector deleting destructor'
EXTRN	_atoi:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	_memchr:PROC
EXTRN	?_Addstd@ios_base@std@@SAXPAV12@@Z:PROC		; std::ios_base::_Addstd
EXTRN	?iostream_category@std@@YAABVerror_category@1@XZ:PROC ; std::iostream_category
EXTRN	??_Efailure@ios_base@std@@UAEPAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UAEPAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:DWORD		; std::ctype<char>::id
EXTRN	__Getctype:PROC
EXTRN	__Tolower:PROC
EXTRN	__Toupper:PROC
EXTRN	??_Ectype_base@std@@UAEPAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_E?$ctype@D@std@@MAEPAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	??0_Mutex@std@@QAE@XZ:PROC			; std::_Mutex::_Mutex
EXTRN	?_Init@locale@std@@CAPAV_Locimp@12@XZ:PROC	; std::locale::_Init
EXTRN	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z:PROC		; std::_Fiopen
EXTRN	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z:PROC	; std::ios_base::_Ios_base_dtor
EXTRN	??_Eios_base@std@@UAEPAXI@Z:PROC		; std::ios_base::`vector deleting destructor'
EXTRN	??_E?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ios<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_istream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??1_Mutex@std@@QAE@XZ:PROC			; std::_Mutex::~_Mutex
EXTRN	?_Lock@_Mutex@std@@QAEXXZ:PROC			; std::_Mutex::_Lock
EXTRN	?_Unlock@_Mutex@std@@QAEXXZ:PROC		; std::_Mutex::_Unlock
EXTRN	??_E?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	_fclose:PROC
EXTRN	__lock_file:PROC
EXTRN	__unlock_file:PROC
EXTRN	_fputc:PROC
EXTRN	_memcpy_s:PROC
EXTRN	_ungetc:PROC
EXTRN	_fgetc:PROC
EXTRN	_fgetpos:PROC
EXTRN	_fsetpos:PROC
EXTRN	__fseeki64:PROC
EXTRN	?_BADOFF@std@@3_JB:QWORD			; std::_BADOFF
EXTRN	_fwrite:PROC
EXTRN	_setvbuf:PROC
EXTRN	_fflush:PROC
EXTRN	??0bad_cast@std@@QAE@PBD@Z:PROC			; std::bad_cast::bad_cast
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z:PROC ; std::locale::facet::_Facet_Register
EXTRN	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	_free:PROC
EXTRN	??_Efacet@locale@std@@UAEPAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	??_Ecodecvt_base@std@@UAEPAXI@Z:PROC		; std::codecvt_base::`vector deleting destructor'
EXTRN	??_E?$codecvt@DDH@std@@MAEPAXI@Z:PROC		; std::codecvt<char,char,int>::`vector deleting destructor'
EXTRN	??1bad_cast@std@@UAE@XZ:PROC			; std::bad_cast::~bad_cast
EXTRN	??0bad_cast@std@@QAE@ABV01@@Z:PROC		; std::bad_cast::bad_cast
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	_memmove:PROC
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	_sprintf:PROC
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
;	COMDAT ??_7?$codecvt@DDH@std@@6B@
CONST	SEGMENT
??_7?$codecvt@DDH@std@@6B@ DD FLAT:??_R4?$codecvt@DDH@std@@6B@ ; std::codecvt<char,char,int>::`vftable'
	DD	FLAT:??_E?$codecvt@DDH@std@@MAEPAXI@Z
	DD	FLAT:?do_always_noconv@codecvt_base@std@@MBE_NXZ
	DD	FLAT:?do_max_length@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_encoding@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
	DD	FLAT:?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
	DD	FLAT:?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z
	DD	FLAT:?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z
CONST	ENDS
;	COMDAT ??_R4?$codecvt@DDH@std@@6B@
rdata$r	SEGMENT
??_R4?$codecvt@DDH@std@@6B@ DD 00H			; std::codecvt<char,char,int>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$codecvt@DDH@std@@@8
	DD	FLAT:??_R3?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R3?$codecvt@DDH@std@@8 DD 00H			; std::codecvt<char,char,int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R2?$codecvt@DDH@std@@8 DD FLAT:??_R1A@?0A@EA@?$codecvt@DDH@std@@8 ; std::codecvt<char,char,int>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@codecvt_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$codecvt@DDH@std@@8 DD FLAT:??_R0?AV?$codecvt@DDH@std@@@8 ; std::codecvt<char,char,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$codecvt@DDH@std@@@8
_DATA	SEGMENT
??_R0?AV?$codecvt@DDH@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::codecvt<char,char,int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$codecvt@DDH@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7CMap@@6B@
CONST	SEGMENT
??_7CMap@@6B@ DD FLAT:??_R4CMap@@6B@			; CMap::`vftable'
	DD	FLAT:??_ECMap@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CMap@@6B@
rdata$r	SEGMENT
??_R4CMap@@6B@ DD 00H					; CMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMap@@@8
	DD	FLAT:??_R3CMap@@8
rdata$r	ENDS
;	COMDAT ??_R3CMap@@8
rdata$r	SEGMENT
??_R3CMap@@8 DD	00H					; CMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMap@@8
rdata$r	ENDS
;	COMDAT ??_R2CMap@@8
rdata$r	SEGMENT
??_R2CMap@@8 DD	FLAT:??_R1A@?0A@EA@CMap@@8		; CMap::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMap@@8 DD FLAT:??_R0?AVCMap@@@8		; CMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMap@@@8
_DATA	SEGMENT
??_R0?AVCMap@@@8 DD FLAT:??_7type_info@@6B@		; CMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMap@@', 00H
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DD FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DD	FLAT:??_Efailure@ios_base@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 00H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVfailure@ios_base@std@@@8
	DD	FLAT:??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@system_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD FLAT:??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DD FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DD	FLAT:??_Esystem_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 00H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD FLAT:??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD FLAT:??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DD FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DD	FLAT:??_E?$ctype@D@std@@MAEPAXI@Z
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEDDD@Z
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 00H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ctype@D@std@@@8
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD FLAT:??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ctype_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD FLAT:??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ctype@D@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DD FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DD	FLAT:??_Ectype_base@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 00H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUctype_base@std@@@8
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD FLAT:??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD FLAT:??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT
??_R0?AUctype_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUctype_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7codecvt_base@std@@6B@
CONST	SEGMENT
??_7codecvt_base@std@@6B@ DD FLAT:??_R4codecvt_base@std@@6B@ ; std::codecvt_base::`vftable'
	DD	FLAT:??_Ecodecvt_base@std@@UAEPAXI@Z
	DD	FLAT:?do_always_noconv@codecvt_base@std@@MBE_NXZ
	DD	FLAT:?do_max_length@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_encoding@codecvt_base@std@@MBEHXZ
CONST	ENDS
;	COMDAT ??_R4codecvt_base@std@@6B@
rdata$r	SEGMENT
??_R4codecvt_base@std@@6B@ DD 00H			; std::codecvt_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVcodecvt_base@std@@@8
	DD	FLAT:??_R3codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3codecvt_base@std@@8
rdata$r	SEGMENT
??_R3codecvt_base@std@@8 DD 00H				; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2codecvt_base@std@@8
rdata$r	SEGMENT
??_R2codecvt_base@std@@8 DD FLAT:??_R1A@?0A@EA@codecvt_base@std@@8 ; std::codecvt_base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@codecvt_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@codecvt_base@std@@8 DD FLAT:??_R0?AVcodecvt_base@std@@@8 ; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVcodecvt_base@std@@@8
_DATA	SEGMENT
??_R0?AVcodecvt_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::codecvt_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVcodecvt_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DD FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DD	FLAT:??_Efacet@locale@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 00H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVfacet@locale@std@@@8
	DD	FLAT:??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD FLAT:??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD FLAT:??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
_DATA	SEGMENT
??_R0?AVfacet@locale@std@@@8 DD FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVfacet@locale@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
	DD	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_istream<char,std::char_traits<char> >::`vbtable'
	DD	010H
CONST	ENDS
;	COMDAT ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_istream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ios<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7ios_base@std@@6B@
CONST	SEGMENT
??_7ios_base@std@@6B@ DD FLAT:??_R4ios_base@std@@6B@	; std::ios_base::`vftable'
	DD	FLAT:??_Eios_base@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4ios_base@std@@6B@
rdata$r	SEGMENT
??_R4ios_base@std@@6B@ DD 00H				; std::ios_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVios_base@std@@@8
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ?_Stz@?$fpos@H@std@@0HB
CONST	SEGMENT
?_Stz@?$fpos@H@std@@0HB DD 00H				; std::fpos<int>::_Stz
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LEEGIBIK@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK@
CONST	SEGMENT
??_C@_0CF@LEEGIBIK@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK@ DB '*'
	DB	'**********************************', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JDANDILB@?$CFd?5?$AA@
CONST	SEGMENT
??_C@_03JDANDILB@?$CFd?5?$AA@ DB '%d ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IHGHJAGB@Tile?3?$FL?$CFd?0?$CFd?$FN?6?$AA@
CONST	SEGMENT
??_C@_0O@IHGHJAGB@Tile?3?$FL?$CFd?0?$CFd?$FN?6?$AA@ DB 'Tile:[%d,%d]', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPMOELCH@Cols?3?$CFd?6?$AA@
CONST	SEGMENT
??_C@_08PPMOELCH@Cols?3?$CFd?6?$AA@ DB 'Cols:%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CBKMNFCB@Rows?3?$CFd?6?$AA@
CONST	SEGMENT
??_C@_08CBKMNFCB@Rows?3?$CFd?6?$AA@ DB 'Rows:%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PFBBHFFC@barrier?$AA@
CONST	SEGMENT
??_C@_07PFBBHFFC@barrier?$AA@ DB 'barrier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFCNHLLM@back?$AA@
CONST	SEGMENT
??_C@_04JFCNHLLM@back?$AA@ DB 'back', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KKAMNNMB@image_path?$AA@
CONST	SEGMENT
??_C@_0L@KKAMNNMB@image_path?$AA@ DB 'image_path', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GPCIKFO@tile_height?$AA@
CONST	SEGMENT
??_C@_0M@GPCIKFO@tile_height?$AA@ DB 'tile_height', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MICNGMNL@tile_width?$AA@
CONST	SEGMENT
??_C@_0L@MICNGMNL@tile_width?$AA@ DB 'tile_width', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JCJMLIFK@map_height?$AA@
CONST	SEGMENT
??_C@_0L@JCJMLIFK@map_height?$AA@ DB 'map_height', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MCCEOMFC@map_width?$AA@
CONST	SEGMENT
??_C@_09MCCEOMFC@map_width?$AA@ DB 'map_width', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LPBPKMDE@?6?$CK?$CKOpen?5Map?5File?5Error?$CB?$CK?$CK?6?$AA@
CONST	SEGMENT
??_C@_0BL@LPBPKMDE@?6?$CK?$CKOpen?5Map?5File?5Error?$CB?$CK?$CK?6?$AA@ DB 0aH
	DB	'**Open Map File Error!**', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@GLMAJFJM@V?$POWW?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@GLMAJFJM@V?$POWW?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@ DB 0feH
	DB	'VWW"}', 015H, '_<P', 0e0H, 'eHe', 01H, 0ffH, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __TI2PA_W
xdata$x	SEGMENT
__TI2PA_W DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PA_W
xdata$x	ENDS
;	COMDAT __CTA2PA_W
xdata$x	SEGMENT
__CTA2PA_W DD	02H
	DD	FLAT:__CT??_R0PA_W@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __CT??_R0PA_W@84
xdata$x	SEGMENT
__CT??_R0PA_W@84 DD 01H
	DD	FLAT:??_R0PA_W@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PA_W@8
_DATA	SEGMENT
??_R0PA_W@8 DD	FLAT:??_7type_info@@6B@			; wchar_t * `RTTI Type Descriptor'
	DD	00H
	DB	'.PA_W', 00H
_DATA	ENDS
;	COMDAT ??_C@_1BC@IOCOMCJD@w?i?$JG5?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@IOCOMCJD@w?i?$JG5?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@ DB 0e9H
	DB	'w5', 096H, '"}', 015H, '_<P', 0e0H, 'eHe', 01H, 0ffH, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __TI2PAD
xdata$x	SEGMENT
__TI2PAD DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
xdata$x	ENDS
;	COMDAT __CTA2PAD
xdata$x	SEGMENT
__CTA2PAD DD	02H
	DD	FLAT:__CT??_R0PAD@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __CT??_R0PAX@84
xdata$x	SEGMENT
__CT??_R0PAX@84 DD 01H
	DD	FLAT:??_R0PAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CT??_R0PAD@84
xdata$x	SEGMENT
__CT??_R0PAD@84 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAX@8
_DATA	SEGMENT
??_R0PAX@8 DD	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAX', 00H
_DATA	ENDS
;	COMDAT ??_R0PAD@8
_DATA	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BB@LODPGGLF@?M?$LM?$LP?i?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@
CONST	SEGMENT
??_C@_0BB@LODPGGLF@?M?$LM?$LP?i?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@ DB 0cdH
	DB	0bcH, 0bfH, 0e9H, 0cbH, 0f7H, 0d2H, 0fdH, 0d6H, 0b5H, 0ceH, 0deH
	DB	0d0H, 0a7H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFNFOMEA@?$LO?X?U?s?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@
CONST	SEGMENT
??_C@_0BB@PFNFOMEA@?$LO?X?U?s?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@ DB 0beH
	DB	0d8H, 0d5H, 0f3H, 0cbH, 0f7H, 0d2H, 0fdH, 0d6H, 0b5H, 0ceH, 0deH
	DB	0d0H, 0a7H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GMILBNBM@init?5matrix?5ok?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BB@GMILBNBM@init?5matrix?5ok?$CB?6?$AA@ DB 'init matrix ok!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CAEJGILI@para?3?$CFd?5?$CFd?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0P@CAEJGILI@para?3?$CFd?5?$CFd?5?$CFd?6?$AA@ DB 'para:%d %d %d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01NEMOKFLO@?$DN?$AA@
CONST	SEGMENT
??_C@_01NEMOKFLO@?$DN?$AA@ DB '=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT __TI4?AVfailure@ios_base@std@@
xdata$x	SEGMENT
__TI4?AVfailure@ios_base@std@@ DD 00H
	DD	FLAT:??1failure@ios_base@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT __CTA4?AVfailure@ios_base@std@@
xdata$x	SEGMENT
__CTA4?AVfailure@ios_base@std@@ DD 04H
	DD	FLAT:__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
	DD	FLAT:__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20
xdata$x	SEGMENT
__CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QAE@ABV01@@Z20 DD 00H
	DD	FLAT:??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0system_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20
xdata$x	SEGMENT
__CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z20 DD 00H
	DD	FLAT:??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	014H
	DD	FLAT:??0failure@ios_base@std@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
_DATA	SEGMENT
??_R0?AVsystem_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsystem_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVfailure@ios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ DB 'ios_base::failbit se'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@ DB 'bad locale name', 00H ; `string'
; Function compile flags: /Ogtp
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\xmemory
; Line 263
	mov	al, 1
; Line 264
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; __Arg$ = eax
; File d:\microsoft visual studio 10.0\vc\include\utility
; Line 88
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z PROC	; std::codecvt<char,char,int>::_Init, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 863
	ret	0
?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z ENDP	; std::codecvt<char,char,int>::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\xmemory
; Line 271
	xor	al, al
; Line 272
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; __Arg$ = eax
; File d:\microsoft visual studio 10.0\vc\include\utility
; Line 80
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; __Arg$ = eax
; Line 80
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xmemory
; Line 219
	or	eax, -1
; Line 220
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
_TEXT	SEGMENT
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setp, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 290
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], 0
; Line 291
	mov	edx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx], 0
; Line 292
	mov	eax, DWORD PTR [eax+52]
	mov	DWORD PTR [eax], 0
; Line 293
	ret	0
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setp
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1518
	mov	eax, -2					; fffffffeH
; Line 1519
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First2$ = 12						; size = 4
__Last2$ = 16						; size = 4
?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z PROC	; std::codecvt<char,char,int>::unshift, COMDAT
; _this$ = ecx
; __Mid2$ = edx
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 823
	push	ebp
	mov	ebp, esp
; Line 824
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	mov	edx, DWORD PTR __Last2$[ebp]
	push	edx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	edx, DWORD PTR __State$[ebp]
	push	edx
	call	eax
; Line 825
	pop	ebp
	ret	12					; 0000000cH
?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z ENDP	; std::codecvt<char,char,int>::unshift
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ
_TEXT	SEGMENT
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 92
	mov	eax, DWORD PTR [eax]
; Line 93
	ret	0
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z
_TEXT	SEGMENT
__Gn$ = 8						; size = 4
__Gc$ = 12						; size = 4
__Pn$ = 16						; size = 4
__Pc$ = 20						; size = 4
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = eax
; __Gf$ = ecx
; __Pf$ = edx
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 327
	push	ebp
	mov	ebp, esp
; Line 328
	mov	DWORD PTR [eax+16], ecx
; Line 330
	mov	ecx, DWORD PTR __Gn$[ebp]
	mov	DWORD PTR [eax+20], edx
; Line 331
	mov	edx, DWORD PTR __Pn$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 332
	mov	ecx, DWORD PTR __Gc$[ebp]
	mov	DWORD PTR [eax+36], edx
; Line 333
	mov	edx, DWORD PTR __Pc$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx
; Line 334
	pop	ebp
	ret	16					; 00000010H
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
_TEXT	SEGMENT
?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setg, COMDAT
; _this$ = ecx
; __First$ = edi
; __Next$ = edx
; __Last$ = eax
; Line 248
	push	esi
; Line 249
	mov	esi, DWORD PTR [ecx+16]
	mov	DWORD PTR [esi], edi
; Line 250
	mov	esi, DWORD PTR [ecx+32]
	mov	DWORD PTR [esi], edx
; Line 251
	mov	ecx, DWORD PTR [ecx+48]
	sub	eax, edx
	mov	DWORD PTR [ecx], eax
	pop	esi
; Line 252
	ret	0
?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setg
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\ios
; Line 74
	mov	eax, DWORD PTR [eax+60]
; Line 75
	ret	0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 2016
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Count$ = 20						; size = 4
?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z PROC	; std::codecvt<char,char,int>::do_length, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 890
	push	ebp
	mov	ebp, esp
; Line 892
	mov	eax, DWORD PTR __Last1$[ebp]
	sub	eax, DWORD PTR __First1$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, eax
	jae	SHORT $LN4@do_length
	mov	eax, ecx
$LN4@do_length:
; Line 893
	pop	ebp
	ret	16					; 00000010H
?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z ENDP	; std::codecvt<char,char,int>::do_length
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First2$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid2$ = 20						; size = 4
?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z PROC	; std::codecvt<char,char,int>::do_unshift, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
; Line 884
	mov	eax, DWORD PTR __Mid2$[ebp]
	mov	ecx, DWORD PTR __First2$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 885
	mov	eax, 3
; Line 886
	pop	ebp
	ret	16					; 00000010H
?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z ENDP	; std::codecvt<char,char,int>::do_unshift
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
___formal$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::do_out, COMDAT
; _this$ = ecx
; Line 876
	push	ebp
	mov	ebp, esp
; Line 877
	mov	eax, DWORD PTR __Mid1$[ebp]
	mov	ecx, DWORD PTR __First1$[ebp]
	mov	edx, DWORD PTR __Mid2$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR [edx], eax
; Line 878
	mov	eax, 3
; Line 879
	pop	ebp
	ret	28					; 0000001cH
?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::do_out
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
___formal$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::do_in, COMDAT
; _this$ = ecx
; Line 868
	push	ebp
	mov	ebp, esp
; Line 869
	mov	eax, DWORD PTR __Mid1$[ebp]
	mov	ecx, DWORD PTR __First1$[ebp]
	mov	edx, DWORD PTR __Mid2$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR __First2$[ebp]
	mov	DWORD PTR [edx], eax
; Line 870
	mov	eax, 3
; Line 871
	pop	ebp
	ret	28					; 0000001cH
?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::do_in
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::out, COMDAT
; _this$ = ecx
; __Mid2$ = edx
; Line 816
	push	ebp
	mov	ebp, esp
; Line 818
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	push	edx
	mov	edx, DWORD PTR __Last2$[ebp]
	push	edx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	edx, DWORD PTR __Mid1$[ebp]
	push	edx
	mov	edx, DWORD PTR __Last1$[ebp]
	push	edx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	mov	edx, DWORD PTR __State$[ebp]
	push	edx
	call	eax
; Line 819
	pop	ebp
	ret	24					; 00000018H
?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::out
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC	; std::codecvt<char,char,int>::in, COMDAT
; _this$ = ecx
; __Mid2$ = edx
; Line 808
	push	ebp
	mov	ebp, esp
; Line 810
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	push	edx
	mov	edx, DWORD PTR __Last2$[ebp]
	push	edx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	edx, DWORD PTR __Mid1$[ebp]
	push	edx
	mov	edx, DWORD PTR __Last1$[ebp]
	push	edx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	mov	edx, DWORD PTR __State$[ebp]
	push	edx
	call	eax
; Line 811
	pop	ebp
	ret	24					; 00000018H
?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP	; std::codecvt<char,char,int>::in
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\iosfwd
; Line 65
	mov	eax, DWORD PTR [ecx+8]
	cdq
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
; Line 66
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekpos@?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
?seekpos@?$fpos@H@std@@QBE_JXZ PROC			; std::fpos<int>::seekpos, COMDAT
; _this$ = ecx
; Line 60
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
; Line 61
	ret	0
?seekpos@?$fpos@H@std@@QBE_JXZ ENDP			; std::fpos<int>::seekpos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?state@?$fpos@H@std@@QBEHXZ
_TEXT	SEGMENT
?state@?$fpos@H@std@@QBEHXZ PROC			; std::fpos<int>::state, COMDAT
; _this$ = eax
; Line 50
	mov	eax, DWORD PTR [eax+16]
; Line 51
	ret	0
?state@?$fpos@H@std@@QBEHXZ ENDP			; std::fpos<int>::state
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@H_J@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Fileposition$ = 12					; size = 8
??0?$fpos@H@std@@QAE@H_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = eax
; Line 45
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	mov	edx, DWORD PTR __Fileposition$[ebp+4]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
; Line 46
	pop	ebp
	ret	12					; 0000000cH
??0?$fpos@H@std@@QAE@H_J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = eax
; Line 40
	mov	ecx, DWORD PTR ?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB+4
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 41
	ret	0
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ
_TEXT	SEGMENT
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 343
	mov	eax, DWORD PTR [eax]
; Line 344
	ret	0
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ
_TEXT	SEGMENT
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 310
	mov	ecx, DWORD PTR [eax+36]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Pnavail
	mov	edx, DWORD PTR [eax+52]
	mov	eax, DWORD PTR [edx]
	cdq
; Line 311
	ret	0
$LN3@Pnavail:
; Line 310
	xor	eax, eax
	cdq
; Line 311
	ret	0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT
; _this$ = ecx
; Line 304
	mov	eax, DWORD PTR [ecx+52]
	dec	DWORD PTR [eax]
; Line 305
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
; Line 306
	ret	0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT
?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pbump, COMDAT
; _this$ = edx
; __Off$ = ecx
; Line 284
	mov	eax, DWORD PTR [edx+52]
	sub	DWORD PTR [eax], ecx
; Line 285
	mov	eax, DWORD PTR [edx+36]
	add	DWORD PTR [eax], ecx
; Line 286
	ret	0
?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pbump
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ
_TEXT	SEGMENT
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail, COMDAT
; _this$ = eax
; Line 279
	mov	ecx, DWORD PTR [eax+32]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Gnavail
	mov	edx, DWORD PTR [eax+48]
	mov	eax, DWORD PTR [edx]
	cdq
; Line 280
	ret	0
$LN3@Gnavail:
; Line 279
	xor	eax, eax
	cdq
; Line 280
	ret	0
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc, COMDAT
; _this$ = ecx
; Line 273
	mov	eax, DWORD PTR [ecx+48]
	dec	DWORD PTR [eax]
; Line 274
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	inc	eax
	mov	DWORD PTR [ecx], eax
; Line 275
	ret	0
?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc, COMDAT
; _this$ = ecx
; Line 267
	mov	eax, DWORD PTR [ecx+48]
	dec	DWORD PTR [eax]
; Line 268
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
; Line 269
	ret	0
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec, COMDAT
; _this$ = ecx
; Line 261
	mov	eax, DWORD PTR [ecx+48]
	inc	DWORD PTR [eax]
; Line 262
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	dec	eax
	mov	DWORD PTR [ecx], eax
; Line 263
	ret	0
?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::epptr, COMDAT
; _this$ = eax
; Line 256
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR [eax+36]
	mov	eax, DWORD PTR [ecx]
	add	eax, DWORD PTR [edx]
; Line 257
	ret	0
?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::epptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT
?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::gbump, COMDAT
; _this$ = edx
; __Off$ = ecx
; Line 243
	mov	eax, DWORD PTR [edx+48]
	sub	DWORD PTR [eax], ecx
; Line 244
	mov	eax, DWORD PTR [edx+32]
	add	DWORD PTR [eax], ecx
; Line 245
	ret	0
?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::gbump
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::egptr, COMDAT
; _this$ = eax
; Line 238
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [ecx]
	add	eax, DWORD PTR [edx]
; Line 239
	ret	0
?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::egptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pptr, COMDAT
; _this$ = eax
; Line 233
	mov	ecx, DWORD PTR [eax+36]
	mov	eax, DWORD PTR [ecx]
; Line 234
	ret	0
?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::gptr, COMDAT
; _this$ = eax
; Line 223
	mov	ecx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [ecx]
; Line 224
	ret	0
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::gptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::eback, COMDAT
; _this$ = eax
; Line 218
	mov	ecx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [ecx]
; Line 219
	ret	0
?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::eback
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT
; _this$ = ecx
; Line 141
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+52]
	jmp	edx
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Yarn@D@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$_Yarn@D@std@@AAEXXZ PROC			; std::_Yarn<char>::_Tidy, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xutility
; Line 3391
	push	esi
	mov	esi, ecx
; Line 3392
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@Tidy
; Line 3398
	push	eax
	call	_free
	add	esp, 4
$LN4@Tidy:
; Line 3401
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 3402
	ret	0
?_Tidy@?$_Yarn@D@std@@AAEXXZ ENDP			; std::_Yarn<char>::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 459
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 454
	mov	eax, ecx
; Line 455
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2021
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2009
	mov	eax, ecx
; Line 2011
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr
	mov	eax, DWORD PTR [eax]
$LN4@Myptr:
; Line 2012
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2003
	mov	eax, ecx
; Line 2005
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr@2
	mov	eax, DWORD PTR [eax]
$LN4@Myptr@2:
; Line 2006
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax
; Line 1908
	ret	0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 315
	mov	eax, DWORD PTR [ecx+84]
	test	eax, eax
	je	SHORT $LN1@Unlock
; Line 316
	push	eax
	call	__unlock_file
	pop	ecx
$LN1@Unlock:
; Line 317
	ret	0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx
; Line 309
	mov	eax, DWORD PTR [ecx+84]
	test	eax, eax
	je	SHORT $LN1@Lock
; Line 310
	push	eax
	call	__lock_file
	pop	ecx
$LN1@Lock:
; Line 311
	ret	0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 445
	ret	4
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::imbue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx
; Line 440
	xor	eax, eax
; Line 441
	ret	0
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sync
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 8
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx
; Line 434
	mov	eax, ecx
; Line 436
	ret	12					; 0000000cH
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx
; Line 429
	push	ebp
	mov	ebp, esp
; Line 430
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB+4
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 431
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::seekpos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 8
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx
; Line 423
	push	ebp
	mov	ebp, esp
; Line 424
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB+4
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 425
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::seekoff
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
_TEXT	SEGMENT
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc, COMDAT
; _this$ = ecx
; Line 348
	xor	eax, eax
	xor	edx, edx
; Line 349
	ret	0
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx
; Line 212
	add	ecx, 4
	jmp	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx
; Line 207
	add	ecx, 4
	jmp	?_Lock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Lock
?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 105
	xor	eax, eax
	cmp	BYTE PTR [ecx+4], al
	setne	al
	dec	eax
; Line 106
	ret	0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; Line 63
	mov	eax, DWORD PTR [ecx-16]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-16], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
; Line 64
	ret	0
??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\ios
; Line 86
	mov	eax, DWORD PTR [eax+56]
; Line 87
	ret	0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?c_str@?$_Yarn@D@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$_Yarn@D@std@@QBEPBDXZ PROC			; std::_Yarn<char>::c_str, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xutility
; Line 3376
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN4@c_str
	lea	eax, DWORD PTR [ecx+4]
$LN4@c_str:
; Line 3377
	ret	0
?c_str@?$_Yarn@D@std@@QBEPBDXZ ENDP			; std::_Yarn<char>::c_str
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$_Yarn@D@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Yarn@D@std@@QAE@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT
; _this$ = ecx
; Line 3365
	push	esi
	mov	esi, ecx
; Line 3366
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@Yarn
	push	eax
	call	_free
	add	esp, 4
$LN6@Yarn:
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 3367
	ret	0
??1?$_Yarn@D@std@@QAE@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_Yarn@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Yarn@D@std@@QAE@XZ PROC				; std::_Yarn<char>::_Yarn<char>, COMDAT
; _this$ = eax
; Line 3315
	mov	DWORD PTR [eax], 0
	mov	BYTE PTR [eax+4], 0
; Line 3316
	ret	0
??0?$_Yarn@D@std@@QAE@XZ ENDP				; std::_Yarn<char>::_Yarn<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1512
	mov	eax, DWORD PTR [ecx+16]
; Line 1513
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = eax
; Line 1497
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN6@c_str@2
	mov	eax, DWORD PTR [eax]
$LN6@c_str@2:
; Line 1498
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?printMap@CMap@@QAEXXZ				; CMap::printMap
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtp
;	COMDAT ?printMap@CMap@@QAEXXZ
_TEXT	SEGMENT
_tW$ = -52						; size = 4
_r$ = -48						; size = 4
_c$ = -44						; size = 4
_i$ = -40						; size = 4
_tH$ = -40						; size = 4
_buf$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
?printMap@CMap@@QAEXXZ PROC				; CMap::printMap, COMDAT
; _this$ = edi
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cmap.cpp
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 299
	mov	eax, DWORD PTR [edi+64]
; Line 300
	mov	ecx, DWORD PTR [edi+52]
; Line 301
	mov	edx, DWORD PTR [edi+56]
	push	ebx
	mov	ebx, DWORD PTR [edi+68]
	push	esi
; Line 304
	push	ebx
	mov	DWORD PTR _c$[ebp], eax
	lea	eax, DWORD PTR _buf$[ebp]
	push	OFFSET ??_C@_08CBKMNFCB@Rows?3?$CFd?6?$AA@
	push	eax
	mov	DWORD PTR _r$[ebp], ebx
	mov	DWORD PTR _tW$[ebp], ecx
	mov	DWORD PTR _tH$[ebp], edx
	call	_sprintf
; Line 305
	mov	esi, DWORD PTR __imp__OutputDebugStringA@4
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	esi
; Line 306
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf$[ebp]
	push	OFFSET ??_C@_08PPMOELCH@Cols?3?$CFd?6?$AA@
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 307
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	esi
; Line 308
	mov	edx, DWORD PTR _tH$[ebp]
	mov	eax, DWORD PTR _tW$[ebp]
	push	edx
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	OFFSET ??_C@_0O@IHGHJAGB@Tile?3?$FL?$CFd?0?$CFd?$FN?6?$AA@
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 309
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	esi
; Line 311
	mov	DWORD PTR _i$[ebp], 0
	test	ebx, ebx
	jle	SHORT $LN10@printMap
	npad	3
$LL25@printMap:
; Line 312
	xor	ebx, ebx
	cmp	DWORD PTR _c$[ebp], ebx
	jle	SHORT $LN7@printMap
$LL26@printMap:
; Line 313
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [edx+ebx*4]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	OFFSET ??_C@_03JDANDILB@?$CFd?5?$AA@
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 314
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	esi
	inc	ebx
	cmp	ebx, DWORD PTR _c$[ebp]
	jl	SHORT $LL26@printMap
$LN7@printMap:
; Line 316
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	esi
	mov	eax, DWORD PTR _i$[ebp]
	inc	eax
	mov	DWORD PTR _i$[ebp], eax
	cmp	eax, DWORD PTR _r$[ebp]
	jl	SHORT $LL25@printMap
; Line 311
	mov	ebx, DWORD PTR _r$[ebp]
$LN10@printMap:
; Line 318
	push	OFFSET ??_C@_0CF@LEEGIBIK@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK@
	call	esi
; Line 319
	mov	DWORD PTR _i$[ebp], 0
	test	ebx, ebx
	jle	SHORT $LN4@printMap
	npad	7
$LL23@printMap:
; Line 320
	xor	ebx, ebx
	cmp	DWORD PTR _c$[ebp], ebx
	jle	SHORT $LN1@printMap
$LL24@printMap:
; Line 321
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [edx+ebx*4]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	OFFSET ??_C@_03JDANDILB@?$CFd?5?$AA@
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 322
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	esi
	inc	ebx
	cmp	ebx, DWORD PTR _c$[ebp]
	jl	SHORT $LL24@printMap
$LN1@printMap:
; Line 324
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	esi
	mov	eax, DWORD PTR _i$[ebp]
	inc	eax
	mov	DWORD PTR _i$[ebp], eax
	cmp	eax, DWORD PTR _r$[ebp]
	jl	SHORT $LL23@printMap
$LN4@printMap:
; Line 326
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?printMap@CMap@@QAEXXZ ENDP				; CMap::printMap
_TEXT	ENDS
PUBLIC	?getBarrierMatrix@CMap@@QAEHHH@Z		; CMap::getBarrierMatrix
EXTRN	__CxxThrowException@8:PROC
; Function compile flags: /Ogtp
;	COMDAT ?getBarrierMatrix@CMap@@QAEHHH@Z
_TEXT	SEGMENT
$T134986 = -4						; size = 4
?getBarrierMatrix@CMap@@QAEHHH@Z PROC			; CMap::getBarrierMatrix, COMDAT
; _col$ = ecx
; _row$ = edx
; Line 152
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	eax, DWORD PTR ?map@@3PAVCMap@@A	; map
; Line 153
	test	ecx, ecx
	js	SHORT $LN1@getBarrier
	cmp	ecx, DWORD PTR [eax+64]
	jge	SHORT $LN1@getBarrier
	test	edx, edx
	js	SHORT $LN1@getBarrier
	cmp	edx, DWORD PTR [eax+68]
	jge	SHORT $LN1@getBarrier
; Line 157
	mov	eax, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [edx+ecx*4]
; Line 158
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@getBarrier:
; Line 155
	push	OFFSET __TI2PA_W
	lea	eax, DWORD PTR $T134986[ebp]
	push	eax
	mov	DWORD PTR $T134986[ebp], OFFSET ??_C@_1BC@IOCOMCJD@w?i?$JG5?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@
	call	__CxxThrowException@8
$LN6@getBarrier:
$LN5@getBarrier:
	int	3
?getBarrierMatrix@CMap@@QAEHHH@Z ENDP			; CMap::getBarrierMatrix
_TEXT	ENDS
PUBLIC	?setBarrierMatrix@CMap@@QAEXHHH@Z		; CMap::setBarrierMatrix
; Function compile flags: /Ogtp
;	COMDAT ?setBarrierMatrix@CMap@@QAEXHHH@Z
_TEXT	SEGMENT
$T134992 = -4						; size = 4
$T134991 = -4						; size = 4
?setBarrierMatrix@CMap@@QAEXHHH@Z PROC			; CMap::setBarrierMatrix, COMDAT
; _this$ = ecx
; _col$ = edx
; _row$ = ebx
; _tileIndex$ = edi
; Line 135
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 136
	test	edx, edx
	js	SHORT $LN3@setBarrier
	push	esi
	mov	esi, DWORD PTR [ecx+64]
	cmp	edx, esi
	jge	SHORT $LN3@setBarrier
	test	ebx, ebx
	js	SHORT $LN3@setBarrier
	mov	eax, DWORD PTR [ecx+68]
	cmp	ebx, eax
	jge	SHORT $LN3@setBarrier
; Line 141
	test	edi, edi
	jle	SHORT $LN1@setBarrier
; Line 143
	imul	eax, esi
	cmp	edi, eax
	jl	SHORT $LN1@setBarrier
; Line 144
	push	OFFSET __TI2PA_W
	lea	eax, DWORD PTR $T134992[ebp]
	push	eax
	mov	DWORD PTR $T134992[ebp], OFFSET ??_C@_1BC@GLMAJFJM@V?$POWW?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@
	call	__CxxThrowException@8
$LN8@setBarrier:
$LN1@setBarrier:
; Line 147
	mov	eax, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax+ebx*4]
	mov	DWORD PTR [eax+edx*4], edi
; Line 148
	mov	BYTE PTR [ecx+12], 1
	pop	esi
; Line 149
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@setBarrier:
; Line 138
	push	OFFSET __TI2PA_W
	lea	ecx, DWORD PTR $T134991[ebp]
	push	ecx
	mov	DWORD PTR $T134991[ebp], OFFSET ??_C@_1BC@IOCOMCJD@w?i?$JG5?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@
	call	__CxxThrowException@8
$LN9@setBarrier:
$LN7@setBarrier:
	int	3
?setBarrierMatrix@CMap@@QAEXHHH@Z ENDP			; CMap::setBarrierMatrix
_TEXT	ENDS
PUBLIC	?setBackMatrix@CMap@@QAEXHHH@Z			; CMap::setBackMatrix
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?setBackMatrix@CMap@@QAEXHHH@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?setBackMatrix@CMap@@QAEXHHH@Z$4 DD 00H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?setBackMatrix@CMap@@QAEXHHH@Z$0
__catchsym$?setBackMatrix@CMap@@QAEXHHH@Z$5 DD 00H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffe0H
	DD	FLAT:__catch$?setBackMatrix@CMap@@QAEXHHH@Z$2
__tryblocktable$?setBackMatrix@CMap@@QAEXHHH@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?setBackMatrix@CMap@@QAEXHHH@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?setBackMatrix@CMap@@QAEXHHH@Z$5
__ehfuncinfo$?setBackMatrix@CMap@@QAEXHHH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?setBackMatrix@CMap@@QAEXHHH@Z
	DD	02H
	DD	FLAT:__tryblocktable$?setBackMatrix@CMap@@QAEXHHH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?setBackMatrix@CMap@@QAEXHHH@Z
_TEXT	SEGMENT
_sz$91562 = -32						; size = 4
_sz$91556 = -28						; size = 4
$T134999 = -24						; size = 4
$T134998 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_col$ = 12						; size = 4
_row$ = 16						; size = 4
_tileIndex$ = 20					; size = 4
?setBackMatrix@CMap@@QAEXHHH@Z PROC			; CMap::setBackMatrix, COMDAT
; Line 98
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?setBackMatrix@CMap@@QAEXHHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edx, DWORD PTR _row$[ebp]
	mov	ecx, DWORD PTR _col$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
; Line 99
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 100
	test	ecx, ecx
	js	SHORT $LN4@setBackMat
	cmp	ecx, DWORD PTR [eax+64]
	jge	SHORT $LN4@setBackMat
	test	edx, edx
	js	SHORT $LN4@setBackMat
	cmp	edx, DWORD PTR [eax+68]
	jl	SHORT $LN14@setBackMat
$LN4@setBackMat:
; Line 102
	push	OFFSET __TI2PAD
	lea	eax, DWORD PTR $T134998[ebp]
	push	eax
	mov	DWORD PTR $T134998[ebp], OFFSET ??_C@_0BB@PFNFOMEA@?$LO?X?U?s?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@
	call	__CxxThrowException@8
$LN23@setBackMat:
__catch$?setBackMatrix@CMap@@QAEXHHH@Z$0:
; Line 106
	mov	ecx, DWORD PTR _sz$91556[ebp]
	push	ecx
	call	DWORD PTR __imp__OutputDebugStringA@4
; Line 107
	mov	eax, $LN19@setBackMat
	ret	0
$LN19@setBackMat:
	mov	eax, DWORD PTR _this$[ebp]
$LN14@setBackMat:
; Line 110
	mov	ecx, DWORD PTR _tileIndex$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	test	ecx, ecx
	jle	SHORT $LN16@setBackMat
; Line 112
	mov	edx, DWORD PTR [eax+68]
	imul	edx, DWORD PTR [eax+64]
	cmp	ecx, edx
	jl	SHORT $LN16@setBackMat
; Line 113
	push	OFFSET __TI2PAD
	lea	eax, DWORD PTR $T134999[ebp]
	push	eax
	mov	DWORD PTR $T134999[ebp], OFFSET ??_C@_0BB@LODPGGLF@?M?$LM?$LP?i?K?w?R?$PN?V?$LF?N?$NO?P?$KH?$KD?$KB?$AA@
	call	__CxxThrowException@8
$LN24@setBackMat:
__catch$?setBackMatrix@CMap@@QAEXHHH@Z$2:
; Line 117
	mov	ecx, DWORD PTR _sz$91562[ebp]
	push	ecx
	call	DWORD PTR __imp__OutputDebugStringA@4
; Line 118
	mov	eax, $LN20@setBackMat
	ret	0
$LN20@setBackMat:
	mov	eax, DWORD PTR _this$[ebp]
$LN16@setBackMat:
; Line 120
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _tileIndex$[ebp]
	mov	esi, DWORD PTR _col$[ebp]
	mov	DWORD PTR [edx+esi*4], ecx
; Line 121
	mov	BYTE PTR [eax+12], 1
; Line 122
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN22@setBackMat:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?setBackMatrix@CMap@@QAEXHHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setBackMatrix@CMap@@QAEXHHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setBackMatrix@CMap@@QAEXHHH@Z ENDP			; CMap::setBackMatrix
PUBLIC	?releaseMapMatrix@CMap@@QAEXXZ			; CMap::releaseMapMatrix
; Function compile flags: /Ogtp
;	COMDAT ?releaseMapMatrix@CMap@@QAEXXZ
_TEXT	SEGMENT
?releaseMapMatrix@CMap@@QAEXXZ PROC			; CMap::releaseMapMatrix, COMDAT
; _this$ = edi
; Line 87
	push	esi
; Line 88
	xor	esi, esi
	cmp	DWORD PTR [edi+68], esi
	jle	SHORT $LN1@releaseMap
$LL3@releaseMap:
; Line 90
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [eax+esi*4]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
; Line 91
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [edx+esi*4]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	inc	esi
	add	esp, 8
	cmp	esi, DWORD PTR [edi+68]
	jl	SHORT $LL3@releaseMap
$LN1@releaseMap:
; Line 93
	mov	ecx, DWORD PTR [edi+4]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
; Line 94
	mov	edx, DWORD PTR [edi+8]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 8
	pop	esi
; Line 95
	ret	0
?releaseMapMatrix@CMap@@QAEXXZ ENDP			; CMap::releaseMapMatrix
_TEXT	ENDS
PUBLIC	_row$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?initMapMatrix@CMap@@QAEXHHH@Z			; CMap::initMapMatrix
; Function compile flags: /Ogtp
;	COMDAT ?initMapMatrix@CMap@@QAEXHHH@Z
_TEXT	SEGMENT
_row$GSCopy$ = -72					; size = 4
_buf$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?initMapMatrix@CMap@@QAEXHHH@Z PROC			; CMap::initMapMatrix, COMDAT
; _this$ = esi
; _col$ = ebx
; _row$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	edi
; Line 66
	push	0
	mov	edi, ecx
	push	edi
	push	ebx
	lea	eax, DWORD PTR _buf$[ebp]
	push	OFFSET ??_C@_0P@CAEJGILI@para?3?$CFd?5?$CFd?5?$CFd?6?$AA@
	push	eax
; Line 71
	mov	DWORD PTR _row$GSCopy$[ebp], edi
	call	_sprintf
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR __imp__OutputDebugStringA@4
	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi+4], eax
	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	xor	edi, edi
	add	esp, 8
	mov	DWORD PTR [esi+8], eax
	cmp	DWORD PTR _row$GSCopy$[ebp], edi
	jle	SHORT $LN4@initMapMat
$LL6@initMapMat:
; Line 73
	xor	ecx, ecx
	mov	eax, ebx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+edi*4], eax
; Line 74
	xor	ecx, ecx
	mov	eax, ebx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx+edi*4], eax
	add	esp, 8
; Line 75
	xor	eax, eax
	test	ebx, ebx
	jle	SHORT $LN5@initMapMat
	npad	6
$LL3@initMapMat:
; Line 77
	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edx+edi*4]
	mov	DWORD PTR [ecx+eax*4], 0
; Line 78
	mov	edx, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [edx+edi*4]
	mov	DWORD PTR [ecx+eax*4], 0
	inc	eax
	cmp	eax, ebx
	jl	SHORT $LL3@initMapMat
$LN5@initMapMat:
; Line 71
	inc	edi
	cmp	edi, DWORD PTR _row$GSCopy$[ebp]
	jl	SHORT $LL6@initMapMat
$LN4@initMapMat:
; Line 82
	push	OFFSET ??_C@_0BB@GMILBNBM@init?5matrix?5ok?$CB?6?$AA@
	call	DWORD PTR __imp__OutputDebugStringA@4
; Line 84
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	pop	edi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?initMapMatrix@CMap@@QAEXHHH@Z ENDP			; CMap::initMapMatrix
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z
_TEXT	SEGMENT
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT
; __Byte$ = ecx
; __File$ = eax
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 105
	movzx	edx, BYTE PTR [ecx]
	push	eax
	push	edx
	call	_ungetc
	xor	ecx, ecx
	add	esp, 8
	cmp	eax, -1
	setne	al
; Line 106
	ret	0
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z
_TEXT	SEGMENT
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT
; __Byte$ = ecx
; __File$ = eax
; Line 81
	movsx	ecx, cl
	push	eax
	push	ecx
	call	_fputc
	xor	edx, edx
	add	esp, 8
	cmp	eax, -1
	setne	al
; Line 82
	ret	0
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ENDP		; std::_Fputc<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 4
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT
; __File$ = eax
; Line 35
	push	ebp
	mov	ebp, esp
; Line 37
	push	eax
	call	_fgetc
	add	esp, 4
	cmp	eax, -1
	jne	SHORT $LN2@Fgetc
; Line 38
	xor	al, al
; Line 44
	pop	ebp
	ret	0
$LN2@Fgetc:
; Line 41
	mov	ecx, DWORD PTR __Byte$[ebp]
	mov	BYTE PTR [ecx], al
; Line 42
	mov	al, 1
; Line 44
	pop	ebp
	ret	0
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0ios_base@std@@IAE@XZ
_TEXT	SEGMENT
??0ios_base@std@@IAE@XZ PROC				; std::ios_base::ios_base, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
; Line 549
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
; Line 551
	ret	0
??0ios_base@std@@IAE@XZ ENDP				; std::ios_base::ios_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1ios_base@std@@UAE@XZ
_TEXT	SEGMENT
??1ios_base@std@@UAE@XZ PROC				; std::ios_base::~ios_base, COMDAT
; _this$ = ecx
; Line 541
	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
; Line 542
	ret	0
??1ios_base@std@@UAE@XZ ENDP				; std::ios_base::~ios_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?flags@ios_base@std@@QBEHXZ
_TEXT	SEGMENT
?flags@ios_base@std@@QBEHXZ PROC			; std::ios_base::flags, COMDAT
; _this$ = eax
; Line 395
	mov	eax, DWORD PTR [eax+20]
; Line 396
	ret	0
?flags@ios_base@std@@QBEHXZ ENDP			; std::ios_base::flags
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?rdstate@ios_base@std@@QBEHXZ
_TEXT	SEGMENT
?rdstate@ios_base@std@@QBEHXZ PROC			; std::ios_base::rdstate, COMDAT
; _this$ = eax
; Line 336
	mov	eax, DWORD PTR [eax+12]
; Line 337
	ret	0
?rdstate@ios_base@std@@QBEHXZ ENDP			; std::ios_base::rdstate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Makestr@system_error@std@@AAEXXZ
_TEXT	SEGMENT
?_Makestr@system_error@std@@AAEXXZ PROC			; std::system_error::_Makestr, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\system_error
; Line 567
	ret	0
?_Makestr@system_error@std@@AAEXXZ ENDP			; std::system_error::_Makestr
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0error_code@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
??0error_code@std@@QAE@HABVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT
; _this$ = eax
; __Cat$ = ecx
; Line 204
	mov	DWORD PTR [eax], 1
	mov	DWORD PTR [eax+4], ecx
; Line 205
	ret	0
??0error_code@std@@QAE@HABVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
__Dest$ = 20						; size = 4
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z PROC		; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 2460
	push	ebp
	mov	ebp, esp
; Line 2463
	mov	eax, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	esi
	mov	esi, DWORD PTR __Last$[ebp]
	mov	ecx, esi
	sub	ecx, eax
	push	ecx
	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2464
	mov	eax, esi
	pop	esi
; Line 2465
	pop	ebp
	ret	16					; 00000010H
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z ENDP		; std::ctype<char>::do_narrow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEDDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
___formal$ = 12						; size = 1
?do_narrow@?$ctype@D@std@@MBEDDD@Z PROC			; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx
; Line 2454
	push	ebp
	mov	ebp, esp
; Line 2455
	mov	al, BYTE PTR __Ch$[ebp]
; Line 2456
	pop	ebp
	ret	8
?do_narrow@?$ctype@D@std@@MBEDDD@Z ENDP			; std::ctype<char>::do_narrow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z PROC		; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx
; Line 2446
	push	ebp
	mov	ebp, esp
; Line 2449
	mov	eax, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	esi
	mov	esi, DWORD PTR __Last$[ebp]
	mov	ecx, esi
	sub	ecx, eax
	push	ecx
	push	eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2450
	mov	eax, esi
	pop	esi
; Line 2451
	pop	ebp
	ret	12					; 0000000cH
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z ENDP		; std::ctype<char>::do_widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
?do_widen@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx
; Line 2440
	push	ebp
	mov	ebp, esp
; Line 2441
	mov	al, BYTE PTR __Byte$[ebp]
; Line 2442
	pop	ebp
	ret	4
?do_widen@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx
; Line 2432
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 2434
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	cmp	esi, ebx
	je	SHORT $LN8@do_toupper
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_toupper:
; Line 2435
	movzx	eax, BYTE PTR [esi]
	push	edi
	push	eax
	call	__Toupper
	mov	BYTE PTR [esi], al
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_toupper
	pop	edi
$LN8@do_toupper:
; Line 2436
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2437
	pop	ebp
	ret	8
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_toupper
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_toupper@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx
; Line 2426
	push	ebp
	mov	ebp, esp
; Line 2427
	movzx	eax, BYTE PTR __Ch$[ebp]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Toupper
	add	esp, 8
; Line 2428
	pop	ebp
	ret	4
?do_toupper@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_toupper
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx
; Line 2418
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 2420
	mov	ebx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	cmp	esi, ebx
	je	SHORT $LN8@do_tolower
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_tolower:
; Line 2421
	movzx	eax, BYTE PTR [esi]
	push	edi
	push	eax
	call	__Tolower
	mov	BYTE PTR [esi], al
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_tolower
	pop	edi
$LN8@do_tolower:
; Line 2422
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2423
	pop	ebp
	ret	8
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_tolower
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_tolower@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx
; Line 2412
	push	ebp
	mov	ebp, esp
; Line 2413
	movzx	eax, BYTE PTR __Ch$[ebp]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Tolower
	add	esp, 8
; Line 2414
	pop	ebp
	ret	4
?do_tolower@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_tolower
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$ctype@D@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$ctype@D@std@@IAEXXZ PROC			; std::ctype<char>::_Tidy, COMDAT
; _this$ = ecx
; Line 2405
	mov	eax, DWORD PTR [ecx+20]
	test	eax, eax
	jle	SHORT $LN6@Tidy@2
; Line 2406
	mov	eax, DWORD PTR [ecx+16]
	push	eax
	call	_free
	add	esp, 4
; Line 2409
	ret	0
$LN6@Tidy@2:
; Line 2407
	jns	SHORT $LN1@Tidy@2
; Line 2408
	mov	ecx, DWORD PTR [ecx+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
$LN1@Tidy@2:
; Line 2409
	ret	0
?_Tidy@?$ctype@D@std@@IAEXXZ ENDP			; std::ctype<char>::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?widen@?$ctype@D@std@@QBEDD@Z
_TEXT	SEGMENT
?widen@?$ctype@D@std@@QBEDD@Z PROC			; std::ctype<char>::widen, COMDAT
; _this$ = ecx
; __Byte$ = edx
; Line 2325
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	call	eax
; Line 2326
	ret	0
?widen@?$ctype@D@std@@QBEDD@Z ENDP			; std::ctype<char>::widen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?is@?$ctype@D@std@@QBE_NFD@Z
_TEXT	SEGMENT
?is@?$ctype@D@std@@QBE_NFD@Z PROC			; std::ctype<char>::is, COMDAT
; _this$ = ecx
; __Ch$ = eax
; Line 2272
	mov	edx, DWORD PTR [ecx+16]
	movzx	eax, al
	test	BYTE PTR [edx+eax*2], 72		; 00000048H
	mov	eax, 0
	setne	al
; Line 2273
	ret	0
?is@?$ctype@D@std@@QBE_NFD@Z ENDP			; std::ctype<char>::is
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_encoding@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT
?do_encoding@codecvt_base@std@@MBEHXZ PROC		; std::codecvt_base::do_encoding, COMDAT
; _this$ = ecx
; Line 787
	mov	eax, 1
; Line 788
	ret	0
?do_encoding@codecvt_base@std@@MBEHXZ ENDP		; std::codecvt_base::do_encoding
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_max_length@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT
?do_max_length@codecvt_base@std@@MBEHXZ PROC		; std::codecvt_base::do_max_length, COMDAT
; _this$ = ecx
; Line 782
	mov	eax, 1
; Line 783
	ret	0
?do_max_length@codecvt_base@std@@MBEHXZ ENDP		; std::codecvt_base::do_max_length
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?do_always_noconv@codecvt_base@std@@MBE_NXZ
_TEXT	SEGMENT
?do_always_noconv@codecvt_base@std@@MBE_NXZ PROC	; std::codecvt_base::do_always_noconv, COMDAT
; _this$ = ecx
; Line 777
	mov	al, 1
; Line 778
	ret	0
?do_always_noconv@codecvt_base@std@@MBE_NXZ ENDP	; std::codecvt_base::do_always_noconv
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?always_noconv@codecvt_base@std@@QBE_NXZ
_TEXT	SEGMENT
?always_noconv@codecvt_base@std@@QBE_NXZ PROC		; std::codecvt_base::always_noconv, COMDAT
; _this$ = ecx
; Line 757
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	jmp	edx
?always_noconv@codecvt_base@std@@QBE_NXZ ENDP		; std::codecvt_base::always_noconv
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = eax
; __Id$ = esi
; Line 438
	mov	ecx, DWORD PTR [eax]
	cmp	esi, DWORD PTR [ecx+12]
	jae	SHORT $LN6@Getfacet
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+esi*4]
; Line 439
	test	eax, eax
	jne	SHORT $LN1@Getfacet
$LN10@Getfacet:
	cmp	BYTE PTR [ecx+20], 0
	je	SHORT $LN1@Getfacet
; Line 443
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
; Line 446
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN8@Getfacet
	mov	eax, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+esi*4]
; Line 448
	ret	0
$LN6@Getfacet:
; Line 438
	xor	eax, eax
; Line 439
	jmp	SHORT $LN10@Getfacet
$LN8@Getfacet:
; Line 446
	xor	eax, eax
$LN1@Getfacet:
; Line 448
	ret	0
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?c_str@locale@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@locale@std@@QBEPBDXZ PROC			; std::locale::c_str, COMDAT
; _this$ = eax
; Line 432
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+24]
	test	eax, eax
	jne	SHORT $LN6@c_str@3
	lea	eax, DWORD PTR [ecx+28]
$LN6@c_str@3:
; Line 433
	ret	0
?c_str@locale@std@@QBEPBDXZ ENDP			; std::locale::c_str
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0facet@locale@std@@IAE@I@Z
_TEXT	SEGMENT
__Initrefs$ = 8						; size = 4
??0facet@locale@std@@IAE@I@Z PROC			; std::locale::facet::facet, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Initrefs$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7facet@locale@std@@6B@
	mov	DWORD PTR [eax+4], ecx
; Line 171
	pop	ebp
	ret	4
??0facet@locale@std@@IAE@I@Z ENDP			; std::locale::facet::facet
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1facet@locale@std@@UAE@XZ
_TEXT	SEGMENT
??1facet@locale@std@@UAE@XZ PROC			; std::locale::facet::~facet, COMDAT
; _this$ = ecx
; Line 164
	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
; Line 165
	ret	0
??1facet@locale@std@@UAE@XZ ENDP			; std::locale::facet::~facet
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Register@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT
?_Register@facet@locale@std@@QAEXXZ PROC		; std::locale::facet::_Register, COMDAT
; _this$ = eax
; Line 133
	push	eax
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	pop	ecx
; Line 135
	ret	0
?_Register@facet@locale@std@@QAEXXZ ENDP		; std::locale::facet::_Register
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Decref@facet@locale@std@@QAEPAV123@XZ
_TEXT	SEGMENT
__Lock$76085 = -4					; size = 4
?_Decref@facet@locale@std@@QAEPAV123@XZ PROC		; std::locale::facet::_Decref, COMDAT
; _this$ = ecx
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
; Line 120
	push	0
	lea	ecx, DWORD PTR __Lock$76085[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 121
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN1@Decref
	cmp	eax, -1
	jae	SHORT $LN1@Decref
; Line 122
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN1@Decref:
; Line 123
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$76085[ebp]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	pop	edi
	mov	eax, esi
	pop	esi
; Line 125
	mov	esp, ebp
	pop	ebp
	ret	0
?_Decref@facet@locale@std@@QAEPAV123@XZ ENDP		; std::locale::facet::_Decref
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Incref@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT
__Lock$76080 = -4					; size = 4
?_Incref@facet@locale@std@@QAEXXZ PROC			; std::locale::facet::_Incref, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 112
	push	0
	lea	ecx, DWORD PTR __Lock$76080[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 113
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN1@Incref
; Line 114
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN1@Incref:
; Line 115
	lea	ecx, DWORD PTR __Lock$76080[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	pop	esi
; Line 116
	mov	esp, ebp
	pop	ebp
	ret	0
?_Incref@facet@locale@std@@QAEXXZ ENDP			; std::locale::facet::_Incref
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Bid@locale@std@@QAEIXZ
_TEXT	SEGMENT
__Lock$76074 = -4					; size = 4
??Bid@locale@std@@QAEIXZ PROC				; std::locale::id::operator unsigned int, COMDAT
; _this$ = esi
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 76
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN6@operator
; Line 78
	push	0
	lea	ecx, DWORD PTR __Lock$76074[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
; Line 79
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN1@operator
; Line 80
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR [esi], eax
$LN1@operator:
; Line 81
	lea	ecx, DWORD PTR __Lock$76074[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN6@operator:
; Line 83
	mov	eax, DWORD PTR [esi]
; Line 84
	mov	esp, ebp
	pop	ebp
	ret	0
??Bid@locale@std@@QAEIXZ ENDP				; std::locale::id::operator unsigned int
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 72
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T135167 = -16						; size = 16
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT
; ___$ReturnUdt$ = esi
; File d:\microsoft visual studio 10.0\vc\include\xlocinfo
; Line 117
	push	ebp
	mov	ebp, esp
; Line 118
	lea	eax, DWORD PTR $T135167[ebp]
	sub	esp, 16					; 00000010H
	push	eax
	call	__Getctype
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+4], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [esi+8], ecx
	add	esp, 4
	mov	DWORD PTR [esi+12], edx
	mov	eax, esi
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1_Locinfo@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1_Locinfo@std@@QAE@XZ$4
__ehfuncinfo$??1_Locinfo@std@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1_Locinfo@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1_Locinfo@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1_Locinfo@std@@QAE@XZ PROC				; std::_Locinfo::~_Locinfo, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\xlocinfo
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Locinfo@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[ebp]
; Line 94
	push	esi
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	call	?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z ; std::_Locinfo::_Locinfo_dtor
; Line 95
	mov	eax, DWORD PTR [esi+28]
	xor	edi, edi
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN10@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN10@Locinfo:
	mov	DWORD PTR [esi+28], edi
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	je	SHORT $LN15@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN15@Locinfo:
	mov	DWORD PTR [esi+20], edi
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, edi
	je	SHORT $LN20@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN20@Locinfo:
	mov	DWORD PTR [esi+12], edi
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, edi
	je	SHORT $LN25@Locinfo
	push	eax
	call	_free
	add	esp, 4
$LN25@Locinfo:
	mov	ecx, esi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__ehhandler$??1_Locinfo@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Locinfo@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Locinfo@std@@QAE@XZ ENDP				; std::_Locinfo::~_Locinfo
; Function compile flags: /Ogtp
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN7@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@2:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\stdexcept
; Line 170
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
; Line 171
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\xutility
; Line 49
	ret	0
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\iosfwd
; Line 563
	or	eax, -1
; Line 564
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; Line 558
	xor	eax, eax
; Line 559
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; __Left$ = eax
; __Right$ = edx
; Line 553
	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
; Line 554
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; __Ch$ = eax
; Line 547
	movzx	eax, BYTE PTR [eax]
; Line 548
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; __Meta$ = eax
; Line 542
	mov	al, BYTE PTR [eax]
; Line 543
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [edx], cl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT
; __First$ = edx
; __Count$ = eax
; __Ch$ = ecx
; Line 522
	movsx	ecx, cl
	push	eax
	push	ecx
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 523
	ret	0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; Line 516
	push	ebp
	mov	ebp, esp
; Line 518
	pop	ebp
; Line 517
	jmp	_memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?find@?$char_traits@D@std@@SAPBDPBDIABD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z PROC		; std::char_traits<char>::find, COMDAT
; __Count$ = eax
; __Ch$ = ecx
; Line 510
	push	ebp
	mov	ebp, esp
; Line 511
	movsx	edx, BYTE PTR [ecx]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	edx
	push	eax
	call	_memchr
	add	esp, 12					; 0000000cH
; Line 512
	pop	ebp
	ret	0
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ENDP		; std::char_traits<char>::find
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; Line 496
	push	ebp
	mov	ebp, esp
; Line 498
	pop	ebp
; Line 497
	jmp	_memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
	npad	7
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT
; __First1$ = edx
; __First2$ = ecx
; __Count$ = eax
; Line 485
	push	esi
	mov	esi, eax
	push	edi
; Line 486
	cmp	esi, 4
	jb	SHORT $LN11@compare
	npad	7
$LL4@compare:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN5@compare
	sub	esi, 4
	add	ecx, 4
	add	edx, 4
	cmp	esi, 4
	jae	SHORT $LL4@compare
$LN11@compare:
	test	esi, esi
	je	SHORT $LN6@compare
$LN5@compare:
	movzx	eax, BYTE PTR [edx]
	movzx	edi, BYTE PTR [ecx]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 1
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+1]
	movzx	edi, BYTE PTR [ecx+1]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 2
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+2]
	movzx	edi, BYTE PTR [ecx+2]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 3
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@compare:
	sar	eax, 31					; 0000001fH
	pop	edi
	or	eax, 1
	pop	esi
; Line 487
	ret	0
$LN6@compare:
	pop	edi
; Line 486
	xor	eax, eax
	pop	esi
; Line 487
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\exception
; Line 354
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getBmpWidth@CGdiBmp@@QAEHXZ
_TEXT	SEGMENT
?getBmpWidth@CGdiBmp@@QAEHXZ PROC			; CGdiBmp::getBmpWidth, COMDAT
; _this$ = eax
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cgdibmp.h
; Line 39
	mov	eax, DWORD PTR [eax+8]
	ret	0
?getBmpWidth@CGdiBmp@@QAEHXZ ENDP			; CGdiBmp::getBmpWidth
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetBitmap@CGdiBmp@@QAEPAUHBITMAP__@@XZ
_TEXT	SEGMENT
?GetBitmap@CGdiBmp@@QAEPAUHBITMAP__@@XZ PROC		; CGdiBmp::GetBitmap, COMDAT
; _this$ = eax
; Line 37
	mov	eax, DWORD PTR [eax+4]
	ret	0
?GetBitmap@CGdiBmp@@QAEPAUHBITMAP__@@XZ ENDP		; CGdiBmp::GetBitmap
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T136070 = -12						; size = 12
$T136074 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate
; Line 36
	cmp	ecx, -1
	ja	SHORT $LN1@Allocate
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate
$LN1@Allocate:
; Line 37
	lea	eax, DWORD PTR $T136074[ebp]
	push	eax
	lea	ecx, DWORD PTR $T136070[ebp]
	mov	DWORD PTR $T136074[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T136070[ebp]
	push	ecx
	mov	DWORD PTR $T136070[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
$T136086 = -12						; size = 12
$T136084 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate
	cmp	ecx, -1
	ja	SHORT $LN3@allocate
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate
$LN3@allocate:
	lea	eax, DWORD PTR $T136084[ebp]
	push	eax
	lea	ecx, DWORD PTR $T136086[ebp]
	mov	DWORD PTR $T136084[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T136086[ebp]
	push	ecx
	mov	DWORD PTR $T136086[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate:
$LN1@allocate:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate:
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z
_TEXT	SEGMENT
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = eax
; __Parg$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 53
	mov	DWORD PTR [eax], ecx
; Line 54
	ret	0
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; Line 1973
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1974
	mov	esi, DWORD PTR __Ptr$[ebp]
	test	esi, esi
	je	SHORT $LN2@Inside
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN8@Inside
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN9@Inside
$LN8@Inside:
	mov	eax, ecx
$LN9@Inside:
	cmp	esi, eax
	jb	SHORT $LN2@Inside
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN12@Inside
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN13@Inside
$LN12@Inside:
	mov	eax, ecx
$LN13@Inside:
	mov	ecx, DWORD PTR [ecx+16]
	add	ecx, eax
	cmp	ecx, esi
	jbe	SHORT $LN2@Inside
; Line 1977
	mov	al, 1
	pop	esi
; Line 1978
	pop	ebp
	ret	4
$LN2@Inside:
; Line 1975
	xor	al, al
	pop	esi
; Line 1978
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z
_TEXT	SEGMENT
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = eax
; __Parg$ = ecx
; Line 325
	mov	DWORD PTR [eax], ecx
; Line 326
	ret	0
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 317
	lea	edx, DWORD PTR [eax+24]
	mov	DWORD PTR [eax+32], edx
; Line 318
	lea	edx, DWORD PTR [eax+28]
	mov	DWORD PTR [eax+36], edx
	lea	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [eax+16], ecx
; Line 319
	lea	edx, DWORD PTR [eax+40]
	mov	DWORD PTR [eax+48], edx
	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+20], ecx
; Line 320
	lea	edx, DWORD PTR [eax+44]
	mov	DWORD PTR [eax+52], edx
; Line 321
	mov	DWORD PTR [ecx], 0
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [eax+52]
	mov	DWORD PTR [edx], 0
; Line 322
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [eax+48]
	mov	DWORD PTR [eax], 0
; Line 323
	ret	0
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = eax
; __Off$ = esi
; __Count$ = ecx
; __Ch$ = edx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1912
	cmp	ecx, 1
	jne	SHORT $LN2@Chassign
; Line 1913
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN7@Chassign
	mov	eax, DWORD PTR [eax]
$LN7@Chassign:
	mov	BYTE PTR [eax+esi], dl
; Line 1916
	ret	0
$LN2@Chassign:
; Line 1915
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN13@Chassign
	mov	eax, DWORD PTR [eax]
$LN13@Chassign:
	push	ecx
	movsx	ecx, dl
	push	ecx
	add	eax, esi
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1916
	ret	0
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 647
	mov	edx, DWORD PTR [eax+16]
	push	esi
	mov	esi, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+72]
	cmp	esi, ecx
	je	SHORT $LN1@Set_back
; Line 649
	mov	DWORD PTR [eax+60], esi
; Line 650
	mov	esi, DWORD PTR [eax+48]
	mov	esi, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [eax+32]
	add	esi, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [eax+64], esi
$LN1@Set_back:
; Line 652
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx], ecx
	mov	edx, eax
	mov	eax, DWORD PTR [eax+48]
	sub	edx, ecx
	add	edx, 73					; 00000049H
	mov	DWORD PTR [eax], edx
	pop	esi
; Line 653
	ret	0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT
; _this$ = eax
; Line 641
	mov	edx, DWORD PTR [eax+16]
	lea	ecx, DWORD PTR [eax+72]
	cmp	DWORD PTR [edx], ecx
	jne	SHORT $LN6@Reset_back
; Line 642
	mov	ecx, DWORD PTR [eax+64]
	push	esi
	mov	esi, DWORD PTR [eax+60]
	mov	DWORD PTR [edx], esi
	mov	edx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR [eax+48]
	sub	ecx, ecx
	mov	DWORD PTR [eax], ecx
	pop	esi
$LN6@Reset_back:
; Line 643
	ret	0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z
_TEXT	SEGMENT
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT
; _this$ = esi
; __Newpcvt$ = edi
; Line 629
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, edi
	call	edx
	test	al, al
	je	SHORT $LN2@Initcvt
; Line 630
	mov	DWORD PTR [esi+68], 0
; Line 636
	ret	0
$LN2@Initcvt:
; Line 634
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	mov	DWORD PTR [esi+68], edi
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], ecx
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], 0
; Line 636
	ret	0
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
; File d:\microsoft visual studio 10.0\vc\include\streambuf
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA DD 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
; Function compile flags: /Ogtp
_BSS	ENDS
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
__Which$ = 8						; size = 4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = eax
; __File$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 555
	push	ebp
	mov	ebp, esp
; Line 558
	cmp	DWORD PTR __Which$[ebp], 1
	push	esi
; Line 561
	lea	esi, DWORD PTR [eax+24]
	mov	DWORD PTR [eax+32], esi
	sete	dl
	mov	BYTE PTR [eax+80], dl
	lea	esi, DWORD PTR [eax+28]
	mov	DWORD PTR [eax+36], esi
	lea	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [eax+16], edx
	lea	esi, DWORD PTR [eax+40]
	mov	DWORD PTR [eax+48], esi
	mov	BYTE PTR [eax+73], 0
	lea	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+20], edx
	lea	esi, DWORD PTR [eax+44]
	mov	DWORD PTR [eax+52], esi
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR [eax+52]
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR [eax+48]
	mov	DWORD PTR [edx], 0
	pop	esi
; Line 570
	test	ecx, ecx
	je	SHORT $LN10@Init
; Line 574
	lea	edx, DWORD PTR [ecx+8]
; Line 578
	mov	DWORD PTR [eax+16], edx
	mov	DWORD PTR [eax+20], edx
	lea	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+48], edx
	mov	DWORD PTR [eax+52], edx
$LN10@Init:
; Line 581
	mov	DWORD PTR [eax+84], ecx
; Line 582
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	DWORD PTR [eax+76], ecx
; Line 583
	mov	DWORD PTR [eax+68], 0
; Line 584
	pop	ebp
	ret	4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 147
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sbumpc
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@sbumpc
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
; Line 148
	ret	0
$LN3@sbumpc:
; Line 147
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+28]
	jmp	edx
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = esi
; __Istr$ = eax
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 76
	mov	DWORD PTR [esi], eax
; Line 77
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+eax+56]
	test	ecx, ecx
	je	SHORT $LN8@Sentry_bas
; Line 78
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN8@Sentry_bas:
; Line 79
	mov	eax, esi
	ret	0
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ PROC	; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\ios
; Line 167
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
; Line 169
	ret	0
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ ENDP	; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1953
	push	ebp
	mov	ebp, esp
; Line 1954
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], eax
	jb	SHORT $LN5@Eos
	mov	ecx, DWORD PTR [ecx]
$LN5@Eos:
	mov	BYTE PTR [ecx+eax], 0
; Line 1955
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; Line 1618
	push	ebp
	mov	ebp, esp
; Line 1624
	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	jne	SHORT $LN6@find
; Line 1639
	pop	ebp
	ret	12					; 0000000cH
$LN6@find:
	push	ebx
; Line 1628
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebx+16]
	test	edi, edi
	je	SHORT $LN2@find
	cmp	eax, edi
	ja	SHORT $LN2@find
; Line 1631
	mov	ecx, 1
	sub	ecx, eax
	add	edi, ecx
	cmp	DWORD PTR [ebx+20], 16			; 00000010H
	jb	SHORT $LN11@find
	mov	ebx, DWORD PTR [ebx]
$LN11@find:
; Line 1633
	mov	edx, DWORD PTR __Ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	push	edi
	push	eax
	push	ebx
	call	_memchr
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN2@find
$LL4@find:
; Line 1634
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, esi
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	test	eax, eax
	je	SHORT $LN20@find
; Line 1633
	mov	ecx, DWORD PTR __Ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	sub	ebx, esi
	lea	edi, DWORD PTR [edi+ebx-1]
	push	edi
	push	edx
	lea	ebx, DWORD PTR [esi+1]
	push	ebx
	call	_memchr
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LL4@find
$LN2@find:
	pop	edi
	pop	esi
; Line 1638
	or	eax, -1
	pop	ebx
; Line 1639
	pop	ebp
	ret	12					; 0000000cH
$LN20@find:
; Line 1635
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN17@find
	mov	ecx, DWORD PTR [ecx]
$LN17@find:
	pop	edi
	mov	eax, esi
	pop	esi
	sub	eax, ecx
	pop	ebx
; Line 1639
	pop	ebp
	ret	12					; 0000000cH
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax
; Line 1352
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN5@begin
	mov	ecx, DWORD PTR [ecx]
$LN5@begin:
	mov	DWORD PTR [eax], ecx
; Line 1353
	ret	0
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 543
	push	esi
	mov	esi, ecx
; Line 546
	cmp	DWORD PTR [esi+84], 0
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+12]
	push	-1
	call	edx
	cmp	eax, -1
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi+84]
	push	eax
	call	_fflush
	add	esp, 4
	test	eax, eax
	jns	SHORT $LN3@sync
	or	eax, -1
	pop	esi
; Line 547
	ret	0
$LN3@sync:
; Line 546
	xor	eax, eax
	pop	esi
; Line 547
	ret	0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 8
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx
; Line 530
	push	ebp
	mov	ebp, esp
	push	edi
	mov	edi, ecx
; Line 533
	mov	ecx, DWORD PTR [edi+84]
	test	ecx, ecx
	je	SHORT $LN2@setbuf
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
	test	edx, edx
	jne	SHORT $LN6@setbuf
	mov	eax, esi
	or	eax, DWORD PTR __Count$[ebp+4]
	jne	SHORT $LN6@setbuf
	mov	eax, 4
	jmp	SHORT $LN7@setbuf
$LN6@setbuf:
	xor	eax, eax
$LN7@setbuf:
	push	esi
	push	eax
	push	edx
	push	ecx
	call	_setvbuf
	add	esp, 16					; 00000010H
	pop	esi
	test	eax, eax
	jne	SHORT $LN2@setbuf
; Line 537
	mov	ecx, DWORD PTR [edi+84]
	push	1
	mov	eax, edi
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 538
	mov	eax, edi
	pop	edi
; Line 540
	pop	ebp
	ret	12					; 0000000cH
$LN2@setbuf:
; Line 534
	xor	eax, eax
	pop	edi
; Line 540
	pop	ebp
	ret	12					; 0000000cH
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx
; Line 408
	push	esi
	mov	esi, ecx
; Line 411
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@underflow
	mov	edx, DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edx]
	mov	eax, ecx
	add	edx, eax
	cmp	eax, edx
	jae	SHORT $LN4@underflow
; Line 412
	movzx	eax, BYTE PTR [ecx]
	pop	esi
; Line 420
	ret	0
$LN4@underflow:
; Line 413
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	push	edi
	mov	ecx, esi
	call	edx
	mov	edi, eax
	cmp	edi, -1
	jne	SHORT $LN2@underflow
; Line 414
	pop	edi
	or	eax, eax
	pop	esi
; Line 420
	ret	0
$LN2@underflow:
; Line 417
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	push	edi
	mov	ecx, esi
	call	edx
; Line 418
	mov	eax, edi
	pop	edi
	pop	esi
; Line 420
	ret	0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 388
	mov	ebx, DWORD PTR __Meta$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN10@pbackfail
	mov	ecx, DWORD PTR [esi+16]
	cmp	DWORD PTR [ecx], eax
	jae	SHORT $LN10@pbackfail
	cmp	ebx, -1
	je	SHORT $LN9@pbackfail
	movzx	edx, BYTE PTR [eax-1]
	cmp	edx, ebx
	jne	SHORT $LN10@pbackfail
$LN9@pbackfail:
; Line 390
	mov	eax, DWORD PTR [esi+48]
	inc	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+32]
	dec	DWORD PTR [esi]
; Line 391
	lea	eax, DWORD PTR [ebx+1]
	neg	eax
	sbb	eax, eax
	pop	esi
	and	eax, ebx
	pop	ebx
; Line 405
	pop	ebp
	ret	4
$LN10@pbackfail:
; Line 393
	mov	eax, DWORD PTR [esi+84]
	test	eax, eax
	je	SHORT $LN6@pbackfail
	cmp	ebx, -1
	je	SHORT $LN6@pbackfail
; Line 395
	cmp	DWORD PTR [esi+68], 0
	jne	SHORT $LN4@pbackfail
	push	eax
	movzx	eax, bl
	push	eax
	call	_ungetc
	add	esp, 8
	cmp	eax, -1
; Line 396
	jne	SHORT $LN55@pbackfail
$LN4@pbackfail:
; Line 397
	mov	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN6@pbackfail
; Line 399
	mov	BYTE PTR [eax], bl
; Line 400
	mov	eax, esi
	call	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
$LN55@pbackfail:
; Line 401
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 405
	pop	ebp
	ret	4
$LN6@pbackfail:
	pop	esi
; Line 394
	or	eax, -1
	pop	ebx
; Line 405
	pop	ebp
	ret	4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
_TEXT	SEGMENT
__Copied$ = -8						; size = 8
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 393
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
; Line 396
	xor	eax, eax
	push	esi
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR __Copied$[esp+24], eax
	mov	DWORD PTR __Copied$[esp+28], eax
	cmp	DWORD PTR __Count$[ebp+4], eax
	jl	$LN27@xsputn
	jg	SHORT $LL7@xsputn
	cmp	DWORD PTR __Count$[ebp], eax
	jbe	$LN27@xsputn
	npad	4
$LL7@xsputn:
; Line 397
	mov	eax, ebx
	call	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
	mov	edi, edx
	mov	esi, eax
	test	edi, edi
	jl	SHORT $LN5@xsputn
	jg	SHORT $LN25@xsputn
	test	esi, esi
	je	SHORT $LN5@xsputn
$LN25@xsputn:
; Line 399
	mov	eax, DWORD PTR __Count$[ebp+4]
	cmp	eax, edi
	jg	SHORT $LN4@xsputn
	jl	SHORT $LN26@xsputn
	cmp	DWORD PTR __Count$[ebp], esi
	jae	SHORT $LN4@xsputn
$LN26@xsputn:
; Line 400
	mov	esi, DWORD PTR __Count$[ebp]
	mov	edi, eax
$LN4@xsputn:
; Line 401
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [ebx+36]
	mov	edx, DWORD PTR [ecx]
	push	esi
	push	eax
	push	edx
	call	_memcpy
; Line 402
	add	DWORD PTR __Ptr$[ebp], esi
; Line 405
	mov	eax, DWORD PTR [ebx+52]
	add	esp, 12					; 0000000cH
	add	DWORD PTR __Copied$[esp+24], esi
	adc	DWORD PTR __Copied$[esp+28], edi
	sub	DWORD PTR __Count$[ebp], esi
	sbb	DWORD PTR __Count$[ebp+4], edi
	sub	DWORD PTR [eax], esi
	mov	eax, DWORD PTR [ebx+36]
	add	DWORD PTR [eax], esi
; Line 407
	jmp	SHORT $LN1@xsputn
$LN5@xsputn:
; Line 408
	mov	eax, DWORD PTR __Ptr$[ebp]
	movzx	eax, BYTE PTR [eax]
	mov	edx, DWORD PTR [ebx]
	push	eax
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, ebx
	call	eax
	or	ecx, -1
	cmp	eax, ecx
	je	SHORT $LN27@xsputn
; Line 412
	mov	eax, 1
	add	DWORD PTR __Ptr$[ebp], eax
; Line 413
	add	DWORD PTR __Copied$[esp+24], eax
	adc	DWORD PTR __Copied$[esp+28], 0
; Line 414
	add	DWORD PTR __Count$[ebp], ecx
	adc	DWORD PTR __Count$[ebp+4], ecx
$LN1@xsputn:
; Line 396
	cmp	DWORD PTR __Count$[ebp+4], 0
	jg	$LL7@xsputn
	jl	SHORT $LN27@xsputn
	cmp	DWORD PTR __Count$[ebp], 0
	ja	$LL7@xsputn
$LN27@xsputn:
; Line 417
	mov	eax, DWORD PTR __Copied$[esp+24]
	mov	edx, DWORD PTR __Copied$[esp+28]
; Line 418
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
_TEXT	SEGMENT
__Copied$ = -8						; size = 8
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 8
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn, COMDAT
; _this$ = ecx
; Line 364
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
; Line 368
	xor	eax, eax
	push	esi
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR __Copied$[esp+24], eax
	mov	DWORD PTR __Copied$[esp+28], eax
	cmp	DWORD PTR __Count$[ebp+4], eax
	jl	$LN27@xsgetn
	jg	SHORT $LL7@xsgetn
	cmp	DWORD PTR __Count$[ebp], eax
	jbe	$LN27@xsgetn
	npad	4
$LL7@xsgetn:
; Line 369
	mov	eax, ebx
	call	?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
	mov	edi, edx
	mov	esi, eax
	test	edi, edi
	jl	SHORT $LN5@xsgetn
	jg	SHORT $LN25@xsgetn
	test	esi, esi
	je	SHORT $LN5@xsgetn
$LN25@xsgetn:
; Line 371
	mov	eax, DWORD PTR __Count$[ebp+4]
	cmp	eax, edi
	jg	SHORT $LN4@xsgetn
	jl	SHORT $LN26@xsgetn
	cmp	DWORD PTR __Count$[ebp], esi
	jae	SHORT $LN4@xsgetn
$LN26@xsgetn:
; Line 372
	mov	esi, DWORD PTR __Count$[ebp]
	mov	edi, eax
$LN4@xsgetn:
; Line 373
	mov	eax, DWORD PTR [ebx+32]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	push	ecx
	push	edx
	call	_memcpy
; Line 374
	add	DWORD PTR __Ptr$[ebp], esi
; Line 377
	mov	eax, DWORD PTR [ebx+48]
	add	esp, 12					; 0000000cH
	add	DWORD PTR __Copied$[esp+24], esi
	adc	DWORD PTR __Copied$[esp+28], edi
	sub	DWORD PTR __Count$[ebp], esi
	sbb	DWORD PTR __Count$[ebp+4], edi
	sub	DWORD PTR [eax], esi
	mov	eax, DWORD PTR [ebx+32]
	add	DWORD PTR [eax], esi
	jmp	SHORT $LN1@xsgetn
$LN5@xsgetn:
; Line 379
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+28]
	mov	ecx, ebx
	call	edx
	or	edx, -1
	cmp	eax, edx
	je	SHORT $LN27@xsgetn
; Line 383
	mov	ecx, DWORD PTR __Ptr$[ebp]
	inc	ecx
; Line 384
	add	DWORD PTR __Copied$[esp+24], 1
	mov	BYTE PTR [ecx-1], al
	mov	DWORD PTR __Ptr$[ebp], ecx
	adc	DWORD PTR __Copied$[esp+28], 0
; Line 385
	add	DWORD PTR __Count$[ebp], edx
	adc	DWORD PTR __Count$[ebp+4], edx
$LN1@xsgetn:
; Line 368
	cmp	DWORD PTR __Count$[ebp+4], 0
	jg	$LL7@xsgetn
	jl	SHORT $LN27@xsgetn
	cmp	DWORD PTR __Count$[ebp], 0
	ja	$LL7@xsgetn
$LN27@xsgetn:
; Line 388
	mov	eax, DWORD PTR __Copied$[esp+24]
	mov	edx, DWORD PTR __Copied$[esp+28]
; Line 389
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx
; Line 357
	push	esi
	mov	esi, ecx
; Line 359
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	eax, -1
	jne	SHORT $LN3@uflow
	or	eax, eax
	pop	esi
; Line 360
	ret	0
$LN3@uflow:
; Line 359
	mov	eax, DWORD PTR [esi+48]
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	movzx	eax, BYTE PTR [ecx]
	pop	esi
; Line 360
	ret	0
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::uflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx
; Line 353
	or	eax, -1
; Line 354
	ret	0
?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::underflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx
; Line 343
	or	eax, -1
; Line 344
	ret	4
?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx
; Line 338
	or	eax, -1
; Line 339
	ret	4
?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::overflow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sgetc, COMDAT
; _this$ = ecx
; Line 153
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sgetc
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@sgetc
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
; Line 154
	ret	0
$LN3@sgetc:
; Line 153
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	jmp	eax
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sgetc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 83
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN1@Sentry_bas@2
; Line 84
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN1@Sentry_bas@2:
; Line 85
	ret	0
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ PROC	; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\ios
; Line 38
	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP	; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z
_TEXT	SEGMENT
__Ch$ = -4						; size = 1
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1648
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1649
	push	1
	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	push	ecx
	mov	BYTE PTR __Ch$[ebp], 44			; 0000002cH
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 1650
	mov	esp, ebp
	pop	ebp
	ret	0
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; __Ptr$ = edx
; Line 1642
	push	ebp
	mov	ebp, esp
; Line 1644
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	7
$LL5@find@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL5@find@2
	sub	eax, esi
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	push	eax
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	pop	esi
; Line 1645
	pop	ebp
	ret	4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; Line 1109
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1110
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR __Off$[ebp]
	push	edi
	cmp	eax, ecx
	jae	SHORT $LN3@erase
; Line 1111
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN28@erase:
$LN3@erase:
; Line 1112
	mov	edi, DWORD PTR __Count$[ebp]
	sub	eax, ecx
	cmp	eax, edi
	jae	SHORT $LN2@erase
; Line 1113
	mov	edi, eax
$LN2@erase:
; Line 1114
	test	edi, edi
	je	SHORT $LN25@erase
; Line 1117
	mov	edx, DWORD PTR [esi+20]
	push	ebx
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN11@erase
	mov	ebx, DWORD PTR [esi]
	jmp	SHORT $LN12@erase
$LN11@erase:
	mov	ebx, esi
$LN12@erase:
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN15@erase
	mov	edx, DWORD PTR [esi]
	jmp	SHORT $LN16@erase
$LN15@erase:
	mov	edx, esi
$LN16@erase:
	sub	eax, edi
	add	ebx, ecx
	push	eax
	add	ebx, edi
	add	edx, ecx
	push	ebx
	push	edx
	call	_memmove
; Line 1118
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	sub	eax, edi
; Line 1119
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], eax
	pop	ebx
	jb	SHORT $LN23@erase
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR [ecx+eax], 0
	pop	edi
; Line 1121
	mov	eax, esi
	pop	esi
; Line 1122
	pop	ebp
	ret	8
; Line 1119
$LN23@erase:
	mov	ecx, esi
	mov	BYTE PTR [ecx+eax], 0
$LN25@erase:
; Line 1121
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1122
	pop	ebp
	ret	8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?DrawMap@CMap@@QAEXPAUHDC__@@HH@Z		; CMap::DrawMap
; Function compile flags: /Ogtp
;	COMDAT ?DrawMap@CMap@@QAEXPAUHDC__@@HH@Z
_TEXT	SEGMENT
_OldFrameBmp$ = -32					; size = 4
_img_col$ = -28						; size = 4
_imgTotalCols$91978 = -24				; size = 4
_tileIndex$ = -20					; size = 4
_FrameDC$ = -16						; size = 4
_tX$ = -12						; size = 4
_tY$ = -8						; size = 4
_r$ = -4						; size = 4
_hDC$ = 8						; size = 4
_x$ = 12						; size = 4
?DrawMap@CMap@@QAEXPAUHDC__@@HH@Z PROC			; CMap::DrawMap, COMDAT
; _this$ = esi
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cmap.cpp
; Line 256
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	edi
; Line 257
	push	0
	call	DWORD PTR __imp__GetDC@4
	push	eax
	call	DWORD PTR __imp__CreateCompatibleDC@4
	mov	edi, eax
; Line 258
	mov	eax, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	edi
	mov	DWORD PTR _FrameDC$[ebp], edi
	call	DWORD PTR __imp__SelectObject@8
	mov	ebx, eax
; Line 265
	xor	eax, eax
	mov	DWORD PTR _OldFrameBmp$[ebp], ebx
	mov	DWORD PTR _r$[ebp], eax
	mov	DWORD PTR _tY$[ebp], eax
	cmp	DWORD PTR [esi+68], eax
	jle	$LN4@DrawMap
	mov	eax, DWORD PTR [esi+64]
$LL18@DrawMap:
; Line 267
	mov	ecx, DWORD PTR _x$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR _tX$[ebp], ecx
	test	eax, eax
	jle	SHORT $LN5@DrawMap
	npad	1
$LL17@DrawMap:
; Line 269
	mov	edx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [esi+52]
	cdq
	idiv	ecx
; Line 270
	mov	edx, DWORD PTR _r$[ebp]
; Line 280
	push	13369376				; 00cc0020H
	mov	edi, eax
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [eax+ebx*4]
	mov	DWORD PTR _tileIndex$[ebp], eax
	dec	eax
	cdq
	idiv	edi
	mov	eax, DWORD PTR _tileIndex$[ebp]
	mov	DWORD PTR _imgTotalCols$91978[ebp], edi
	mov	edi, DWORD PTR [esi+56]
	push	edi
	push	ecx
	sub	eax, edx
	mov	DWORD PTR _img_col$[ebp], edx
	dec	eax
	cdq
	idiv	DWORD PTR _imgTotalCols$91978[ebp]
	mov	edx, ecx
	imul	edx, DWORD PTR _img_col$[ebp]
	imul	eax, edi
	push	eax
	mov	eax, DWORD PTR _FrameDC$[ebp]
	push	edx
	mov	edx, DWORD PTR _hDC$[ebp]
	push	eax
	push	edi
	mov	edi, DWORD PTR _tX$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tY$[ebp]
	push	ecx
	push	edi
	push	edx
	call	DWORD PTR __imp__StretchBlt@44
	add	edi, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [esi+64]
	inc	ebx
	mov	DWORD PTR _tX$[ebp], edi
	cmp	ebx, eax
	jl	SHORT $LL17@DrawMap
; Line 267
	mov	edi, DWORD PTR _FrameDC$[ebp]
$LN5@DrawMap:
; Line 265
	mov	ecx, DWORD PTR _r$[ebp]
	mov	edx, DWORD PTR [esi+56]
	add	DWORD PTR _tY$[ebp], edx
	inc	ecx
	mov	DWORD PTR _r$[ebp], ecx
	cmp	ecx, DWORD PTR [esi+68]
	jl	$LL18@DrawMap
	mov	ebx, DWORD PTR _OldFrameBmp$[ebp]
$LN4@DrawMap:
; Line 284
	push	ebx
	push	edi
	call	DWORD PTR __imp__SelectObject@8
; Line 285
	push	edi
	call	DWORD PTR __imp__DeleteDC@4
; Line 286
	push	ebx
	call	DWORD PTR __imp__DeleteObject@4
	pop	edi
	pop	ebx
; Line 287
	mov	esp, ebp
	pop	ebp
	ret	8
?DrawMap@CMap@@QAEXPAUHDC__@@HH@Z ENDP			; CMap::DrawMap
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN4@sentry
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN4@sentry:
	ret	0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gios_base@std@@UAEPAXI@Z PROC			; std::ios_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar@6
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@6:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gios_base@std@@UAEPAXI@Z ENDP			; std::ios_base::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0system_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0system_error@std@@QAE@ABV01@@Z PROC			; std::system_error::system_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[ebp]
	push	edi
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
	mov	ecx, DWORD PTR [edi+16]
	pop	edi
	mov	DWORD PTR [esi+16], ecx
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0system_error@std@@QAE@ABV01@@Z ENDP			; std::system_error::system_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?fail@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
?fail@ios_base@std@@QBE_NXZ PROC			; std::ios_base::fail, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
; Line 369
	test	BYTE PTR [eax+12], 6
	mov	eax, 0
	setne	al
; Line 370
	ret	0
?fail@ios_base@std@@QBE_NXZ ENDP			; std::ios_base::fail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?eof@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
?eof@ios_base@std@@QBE_NXZ PROC				; std::ios_base::eof, COMDAT
; _this$ = eax
; Line 363
	mov	eax, DWORD PTR [eax+12]
	and	eax, 1
; Line 364
	ret	0
?eof@ios_base@std@@QBE_NXZ ENDP				; std::ios_base::eof
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?good@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
?good@ios_base@std@@QBE_NXZ PROC			; std::ios_base::good, COMDAT
; _this$ = ecx
; Line 358
	xor	eax, eax
	cmp	DWORD PTR [ecx+12], eax
	sete	al
; Line 359
	ret	0
?good@ios_base@std@@QBE_NXZ ENDP			; std::ios_base::good
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??7ios_base@std@@QBE_NXZ
_TEXT	SEGMENT
??7ios_base@std@@QBE_NXZ PROC				; std::ios_base::operator!, COMDAT
; _this$ = eax
; Line 306
	test	BYTE PTR [eax+12], 6
	mov	eax, 0
	setne	al
; Line 307
	ret	0
??7ios_base@std@@QBE_NXZ ENDP				; std::ios_base::operator!
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1system_error@std@@UAE@XZ
_TEXT	SEGMENT
??1system_error@std@@UAE@XZ PROC			; std::system_error::~system_error, COMDAT
; _this$ = ecx
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1system_error@std@@UAE@XZ ENDP			; std::system_error::~system_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gsystem_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gsystem_error@std@@UAEPAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN10@scalar@7
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@7:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gsystem_error@std@@UAEPAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0system_error@std@@QAE@Verror_code@1@PBD@Z
_TEXT	SEGMENT
$T136775 = -4						; size = 4
__Errcode$ = 8						; size = 8
??0system_error@std@@QAE@Verror_code@1@PBD@Z PROC	; std::system_error::system_error, COMDAT
; _this$ = esi
; __Message$ = eax
; File d:\microsoft visual studio 10.0\vc\include\system_error
; Line 516
	push	ebp
	mov	ebp, esp
	push	ecx
	lea	ecx, DWORD PTR $T136775[ebp]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T136775[ebp], eax
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	eax, DWORD PTR __Errcode$[ebp+4]
	mov	edx, DWORD PTR __Errcode$[ebp]
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi], OFFSET ??_7system_error@std@@6B@
	mov	DWORD PTR [esi+12], edx
; Line 518
	mov	eax, esi
	mov	esp, ebp
	pop	ebp
	ret	8
??0system_error@std@@QAE@Verror_code@1@PBD@Z ENDP	; std::system_error::system_error
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z
_TEXT	SEGMENT
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z PROC ; std::make_error_code, COMDAT
; ___$ReturnUdt$ = esi
; Line 447
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], 1
	mov	eax, esi
; Line 448
	ret	0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@31@@Z ENDP ; std::make_error_code
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
$T136794 = -16						; size = 16
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z PROC		; std::ctype<char>::_Init, COMDAT
; _this$ = esi
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 2399
	push	ebp
	mov	ebp, esp
; Line 2400
	lea	eax, DWORD PTR $T136794[ebp]
	sub	esp, 16					; 00000010H
	push	eax
	call	__Getctype
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [eax+12]
	add	esp, 4
	mov	DWORD PTR [esi+20], edx
; Line 2401
	mov	esp, ebp
	pop	ebp
	ret	0
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z ENDP		; std::ctype<char>::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1ctype_base@std@@UAE@XZ
_TEXT	SEGMENT
??1ctype_base@std@@UAE@XZ PROC				; std::ctype_base::~ctype_base, COMDAT
; _this$ = eax
; Line 2016
	mov	DWORD PTR [eax], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1ctype_base@std@@UAE@XZ ENDP				; std::ctype_base::~ctype_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0ctype_base@std@@QAE@I@Z
_TEXT	SEGMENT
??0ctype_base@std@@QAE@I@Z PROC				; std::ctype_base::ctype_base, COMDAT
; _this$ = eax
; Line 2011
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], OFFSET ??_7ctype_base@std@@6B@
; Line 2012
	ret	0
??0ctype_base@std@@QAE@I@Z ENDP				; std::ctype_base::ctype_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1codecvt_base@std@@UAE@XZ
_TEXT	SEGMENT
??1codecvt_base@std@@UAE@XZ PROC			; std::codecvt_base::~codecvt_base, COMDAT
; _this$ = eax
; Line 772
	mov	DWORD PTR [eax], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1codecvt_base@std@@UAE@XZ ENDP			; std::codecvt_base::~codecvt_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0codecvt_base@std@@QAE@I@Z
_TEXT	SEGMENT
??0codecvt_base@std@@QAE@I@Z PROC			; std::codecvt_base::codecvt_base, COMDAT
; _this$ = eax
; Line 752
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], OFFSET ??_7codecvt_base@std@@6B@
; Line 753
	ret	0
??0codecvt_base@std@@QAE@I@Z ENDP			; std::codecvt_base::codecvt_base
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gfacet@locale@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gfacet@locale@std@@UAEPAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN6@scalar@8
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@8:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gfacet@locale@std@@UAEPAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$136835 = -4					; size = 4
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	push	ecx
	push	edi
; Line 410
	mov	edi, DWORD PTR [ecx]
	test	edi, edi
	je	SHORT $LN4@locale
; Line 411
	push	0
	lea	ecx, DWORD PTR __Lock$136835[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN6@locale
	cmp	eax, -1
	jae	SHORT $LN6@locale
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN6@locale:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$136835[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN9@locale
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN9@locale:
	pop	esi
$LN4@locale:
	pop	edi
; Line 412
	mov	esp, ebp
	pop	ebp
	ret	0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$136845 = -4					; size = 4
??0locale@std@@QAE@XZ PROC				; std::locale::locale, COMDAT
; _this$ = edi
; Line 315
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [edi], eax
; Line 316
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	0
	lea	ecx, DWORD PTR __Lock$136845[ebp]
	mov	esi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN3@locale@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN3@locale@2:
	lea	ecx, DWORD PTR __Lock$136845[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 317
	mov	eax, edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0locale@std@@QAE@XZ ENDP				; std::locale::locale
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Lock$136853 = -4					; size = 4
??0locale@std@@QAE@ABV01@@Z PROC			; std::locale::locale, COMDAT
; _this$ = edi
; __Right$ = eax
; Line 309
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 310
	push	0
	lea	ecx, DWORD PTR __Lock$136853[ebp]
	mov	DWORD PTR [edi], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN3@locale@3
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN3@locale@3:
	lea	ecx, DWORD PTR __Lock$136853[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 311
	mov	eax, edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0locale@std@@QAE@ABV01@@Z ENDP			; std::locale::locale
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$??0_Locinfo@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$4
__ehfuncinfo$??0_Locinfo@std@@QAE@PBD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0_Locinfo@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0_Locinfo@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T136859 = -28						; size = 12
$T136885 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0_Locinfo@std@@QAE@PBD@Z PROC				; std::_Locinfo::_Locinfo, COMDAT
; __Pch$ = edi
; File d:\microsoft visual studio 10.0\vc\include\xlocinfo
; Line 76
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Locinfo@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[ebp]
	xor	ebx, ebx
	push	ebx
	mov	ecx, esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	DWORD PTR [esi+4], ebx
	mov	BYTE PTR [esi+8], bl
	mov	DWORD PTR [esi+12], ebx
	mov	BYTE PTR [esi+16], bl
	mov	DWORD PTR [esi+20], ebx
	mov	BYTE PTR [esi+24], bl
	mov	DWORD PTR [esi+28], ebx
	mov	BYTE PTR [esi+32], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 77
	cmp	edi, ebx
	jne	SHORT $LN1@Locinfo@2
; Line 78
	lea	eax, DWORD PTR $T136885[ebp]
	push	eax
	lea	ecx, DWORD PTR $T136859[ebp]
	mov	DWORD PTR $T136885[ebp], OFFSET ??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	ecx, DWORD PTR $T136859[ebp]
	push	ecx
	mov	DWORD PTR $T136859[ebp], OFFSET ??_7runtime_error@std@@6B@
	call	__CxxThrowException@8
$LN22@Locinfo@2:
$LN1@Locinfo@2:
; Line 79
	push	edi
	push	esi
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z ; std::_Locinfo::_Locinfo_ctor
	add	esp, 8
; Line 80
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN21@Locinfo@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$_Yarn@D@std@@QAE@XZ		; std::_Yarn<char>::~_Yarn<char>
__ehhandler$??0_Locinfo@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Locinfo@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Locinfo@std@@QAE@PBD@Z ENDP				; std::_Locinfo::_Locinfo
; Function compile flags: /Ogtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar@9
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@9:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z PROC	; std::codecvt<char,char,int>::codecvt<char,char,int>, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 843
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], OFFSET ??_7?$codecvt@DDH@std@@6B@
; Line 845
	ret	0
??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z ENDP	; std::codecvt<char,char,int>::codecvt<char,char,int>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
__ehfuncinfo$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T137317 = -52						; size = 36
$T137321 = -16						; size = 4
$T137316 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::codecvt<char,char,int>::_Getcat, COMDAT
; Line 849
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 850
	mov	edi, DWORD PTR __Ppf$[ebp]
; Line 852
	xor	ebx, ebx
	mov	DWORD PTR $T137321[ebp], ebx
	cmp	edi, ebx
	je	SHORT $LN26@Getcat
; Line 850
	cmp	DWORD PTR [edi], ebx
	jne	SHORT $LN26@Getcat
; Line 852
	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T137316[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	cmp	esi, ebx
	je	SHORT $LN4@Getcat
	mov	eax, DWORD PTR __Ploc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	edi, DWORD PTR [eax+24]
	cmp	edi, ebx
	jne	SHORT $LN15@Getcat
	lea	edi, DWORD PTR [eax+28]
$LN15@Getcat:
	lea	ecx, DWORD PTR $T137317[ebp]
	push	ecx
	call	??0_Locinfo@std@@QAE@PBD@Z		; std::_Locinfo::_Locinfo
	mov	edi, DWORD PTR __Ppf$[ebp]
	mov	ebx, 1
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$codecvt@DDH@std@@6B@
	jmp	SHORT $LN5@Getcat
$LN4@Getcat:
	xor	esi, esi
$LN5@Getcat:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [edi], esi
	test	bl, 1
	je	SHORT $LN26@Getcat
	lea	edx, DWORD PTR $T137317[ebp]
	push	edx
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN26@Getcat:
; Line 853
	mov	eax, 2
; Line 854
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T137316[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::codecvt<char,char,int>::_Getcat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T137371 = -36						; size = 12
__Lock$94069 = -24					; size = 4
__Lock$137379 = -20					; size = 4
__Lock$137401 = -20					; size = 4
__Psave$94070 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,int> >, COMDAT
; __Loc$ = edi
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	push	0
	lea	ecx, DWORD PTR __Lock$94069[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 509
	cmp	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, 0 ; std::codecvt<char,char,int>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
	mov	DWORD PTR __Psave$94070[ebp], ebx
	jne	SHORT $LN11@use_facet
	push	0
	lea	ecx, DWORD PTR __Lock$137379[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, 0 ; std::codecvt<char,char,int>::id
	jne	SHORT $LN10@use_facet
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, eax ; std::codecvt<char,char,int>::id
$LN10@use_facet:
	lea	ecx, DWORD PTR __Lock$137379[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet:
	mov	esi, DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A ; std::codecvt<char,char,int>::id
; Line 510
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet
$LN30@use_facet:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet
$LN20@use_facet:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet
$LN16@use_facet:
	mov	esi, ecx
$LN15@use_facet:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet
$LN31@use_facet:
; Line 514
	test	ebx, ebx
	je	SHORT $LN4@use_facet
; Line 515
	mov	esi, ebx
	jmp	SHORT $LN28@use_facet
$LN4@use_facet:
; Line 516
	lea	eax, DWORD PTR __Psave$94070[ebp]
	push	edi
	push	eax
	call	?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::codecvt<char,char,int>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T137371[ebp]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T137371[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN37@use_facet:
$LN2@use_facet:
; Line 528
	mov	esi, DWORD PTR __Psave$94070[ebp]
; Line 532
	push	0
	lea	ecx, DWORD PTR __Lock$137401[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet:
	lea	ecx, DWORD PTR __Lock$137401[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 533
	push	esi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet:
; Line 536
	lea	ecx, DWORD PTR __Lock$94069[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$94069[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,int> >
; Function compile flags: /Ogtp
;	COMDAT ?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT
__Lock$137431 = -4					; size = 4
?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::getloc, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 129
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 130
	mov	ecx, DWORD PTR [eax+56]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	0
	lea	ecx, DWORD PTR __Lock$137431[ebp]
	mov	DWORD PTR [edi], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN5@getloc
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN5@getloc:
	lea	ecx, DWORD PTR __Lock$137431[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	esi
; Line 131
	mov	esp, ebp
	pop	ebp
	ret	0
?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::getloc
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ$0
__ehfuncinfo$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
_TEXT	SEGMENT
__Lock$137452 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >, COMDAT
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	call	??0_Mutex@std@@QAE@XZ			; std::_Mutex::_Mutex
	push	4
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $LN3@basic_stre
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [edi], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	0
	lea	ecx, DWORD PTR __Lock$137452[ebp]
	mov	ebx, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, -1
	jae	SHORT $LN8@basic_stre
	inc	eax
	mov	DWORD PTR [ebx+4], eax
$LN8@basic_stre:
	lea	ecx, DWORD PTR __Lock$137452[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	jmp	SHORT $LN4@basic_stre
$LN3@basic_stre:
	xor	edi, edi
$LN4@basic_stre:
; Line 26
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	mov	DWORD PTR [esi+56], edi
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], ecx
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], 0
; Line 27
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
__ehhandler$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$codecvt@DDH@std@@MAE@XZ
_TEXT	SEGMENT
??1?$codecvt@DDH@std@@MAE@XZ PROC			; std::codecvt<char,char,int>::~codecvt<char,char,int>, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 859
	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1?$codecvt@DDH@std@@MAE@XZ ENDP			; std::codecvt<char,char,int>::~codecvt<char,char,int>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
_TEXT	SEGMENT
__Lock$137511 = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T137487 = 8						; size = 4
__Filename$ = 8						; size = 4
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 218
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
; Line 220
	cmp	DWORD PTR [esi+84], 0
	jne	$LN1@open
	mov	eax, DWORD PTR __Filename$[ebp]
	push	64					; 00000040H
	push	1
	push	eax
	call	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z	; std::_Fiopen
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN1@open
; Line 223
	mov	ecx, eax
	push	1
	mov	eax, esi
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Line 224
	lea	edi, DWORD PTR $T137487[ebp]
	mov	eax, esi
	call	?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ; std::basic_streambuf<char,std::char_traits<char> >::getloc
	mov	edi, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	mov	edi, eax
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ebx, DWORD PTR $T137487[ebp]
	test	ebx, ebx
	je	SHORT $LN9@open
	push	0
	lea	ecx, DWORD PTR __Lock$137511[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN11@open
	cmp	eax, -1
	jae	SHORT $LN11@open
	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN11@open:
	mov	edi, DWORD PTR [ebx+4]
	neg	edi
	sbb	edi, edi
	lea	ecx, DWORD PTR __Lock$137511[ebp]
	not	edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	edi, ebx
	je	SHORT $LN9@open
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, edi
	call	eax
$LN9@open:
; Line 225
	mov	eax, esi
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN1@open:
; Line 221
	xor	eax, eax
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0:
	lea	ecx, DWORD PTR $T137487[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1988
	push	ebp
	mov	ebp, esp
; Line 1989
	cmp	BYTE PTR __Built$[ebp], 0
	push	esi
	push	edi
	mov	edi, DWORD PTR __Newsize$[ebp]
	mov	esi, ecx
	je	SHORT $LN9@Tidy@3
; Line 1991
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN9@Tidy@3
; Line 1993
	push	ebx
	mov	ebx, DWORD PTR [esi]
; Line 1994
	test	edi, edi
	je	SHORT $LN7@Tidy@3
; Line 1995
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@Tidy@3:
; Line 1996
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	ebx
$LN9@Tidy@3:
; Line 1999
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	BYTE PTR [edi+esi], 0
	pop	edi
	pop	esi
; Line 2000
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_istream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	add	eax, 16					; 00000010H
	mov	DWORD PTR [edx+eax-16], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::`vbase destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Glocale@std@@QAEPAXI@Z
_TEXT	SEGMENT
__Lock$137589 = -4					; size = 4
___flags$ = 8						; size = 4
??_Glocale@std@@QAEPAXI@Z PROC				; std::locale::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	edi
	mov	edi, DWORD PTR [ebx]
	test	edi, edi
	je	SHORT $LN7@scalar@12
	push	0
	lea	ecx, DWORD PTR __Lock$137589[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN9@scalar@12
	cmp	eax, -1
	jae	SHORT $LN9@scalar@12
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN9@scalar@12:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$137589[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN13@scalar@12
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@scalar@12:
	pop	esi
$LN7@scalar@12:
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN12@scalar@12
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@scalar@12:
	pop	edi
	mov	eax, ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glocale@std@@QAEPAXI@Z ENDP				; std::locale::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_istream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	lea	esi, DWORD PTR [ecx-16]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [edx+eax-16], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN13@scalar@13
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@scalar@13:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN9@scalar@14
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@scalar@14:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 550
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 551
	mov	edi, DWORD PTR __Loc$[ebp]
	mov	esi, ecx
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	mov	edi, eax
	call	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
	pop	edi
	pop	esi
; Line 552
	pop	ebp
	ret	4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::snextc, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\streambuf
; Line 163
	push	esi
	mov	esi, eax
; Line 167
	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN17@snextc
	mov	ecx, DWORD PTR [esi+48]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, 1
	jle	SHORT $LN5@snextc
	mov	eax, DWORD PTR [esi+48]
	dec	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi]
	inc	eax
	mov	DWORD PTR [esi], eax
	movzx	eax, BYTE PTR [eax]
	pop	esi
; Line 168
	ret	0
$LN5@snextc:
; Line 167
	test	eax, eax
	je	SHORT $LN17@snextc
	mov	edx, DWORD PTR [esi+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN17@snextc
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	movzx	eax, BYTE PTR [ecx]
	jmp	SHORT $LN18@snextc
$LN17@snextc:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	mov	ecx, esi
	call	edx
$LN18@snextc:
	cmp	eax, -1
	jne	SHORT $LN3@snextc
	or	eax, eax
	pop	esi
; Line 168
	ret	0
$LN3@snextc:
; Line 167
	mov	eax, DWORD PTR [esi+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN35@snextc
	mov	ecx, DWORD PTR [esi+48]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN35@snextc
	mov	edx, DWORD PTR [eax]
	movzx	eax, BYTE PTR [edx]
	pop	esi
; Line 168
	ret	0
; Line 167
$LN35@snextc:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+24]
	mov	ecx, esi
	pop	esi
	jmp	edx
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::snextc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
__Lock$137773 = -8					; size = 4
_this$ = -4						; size = 4
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx
; Line 80
	mov	ebx, DWORD PTR [esi+56]
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	test	ebx, ebx
	je	SHORT $LN6@basic_stre@2
	push	edi
	mov	edi, DWORD PTR [ebx]
	test	edi, edi
	je	SHORT $LN12@basic_stre@2
	push	0
	lea	ecx, DWORD PTR __Lock$137773[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN14@basic_stre@2
	cmp	eax, -1
	jae	SHORT $LN14@basic_stre@2
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN14@basic_stre@2:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$137773[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN18@basic_stre@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN18@basic_stre@2:
	mov	esi, DWORD PTR _this$[ebp]
$LN12@basic_stre@2:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
$LN6@basic_stre@2:
; Line 81
	lea	ecx, DWORD PTR [esi+4]
	call	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 753
	push	esi
	mov	esi, ecx
; Line 754
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN11@basic_stri
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@basic_stri:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 755
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = eax
; Line 551
	mov	DWORD PTR [eax+20], 15			; 0000000fH
	mov	DWORD PTR [eax+16], 0
	mov	BYTE PTR [eax], 0
; Line 552
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?DrawMap@CMap@@QAEXPAUHDC__@@@Z			; CMap::DrawMap
; Function compile flags: /Ogtp
;	COMDAT ?DrawMap@CMap@@QAEXPAUHDC__@@@Z
_TEXT	SEGMENT
?DrawMap@CMap@@QAEXPAUHDC__@@@Z PROC			; CMap::DrawMap, COMDAT
; _hDC$ = ecx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cmap.cpp
; Line 290
	push	esi
	mov	esi, DWORD PTR ?map@@3PAVCMap@@A	; map
; Line 291
	mov	eax, DWORD PTR [esi+72]
	push	eax
	push	ecx
	call	?DrawMap@CMap@@QAEXPAUHDC__@@HH@Z	; CMap::DrawMap
	pop	esi
; Line 292
	ret	0
?DrawMap@CMap@@QAEXPAUHDC__@@@Z ENDP			; CMap::DrawMap
_TEXT	ENDS
PUBLIC	??1CMap@@UAE@XZ					; CMap::~CMap
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1CMap@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMap@@UAE@XZ$0
__ehfuncinfo$??1CMap@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CMap@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1CMap@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMap@@UAE@XZ PROC					; CMap::~CMap, COMDAT
; _this$ = ecx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cmap.cpp
; Line 24
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CMap@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7CMap@@6B@
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
; Line 25
	mov	edi, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, ebx
	je	SHORT $LN6@CMap
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	mov	DWORD PTR [edi+4], ebx
$LN6@CMap:
; Line 26
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, ebx
	je	SHORT $LN3@CMap
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN3@CMap:
; Line 27
	xor	edi, edi
	cmp	DWORD PTR [esi+68], ebx
	jle	SHORT $LN9@CMap
$LL11@CMap:
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+edi*4]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [ecx+edi*4]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	inc	edi
	add	esp, 8
	cmp	edi, DWORD PTR [esi+68]
	jl	SHORT $LL11@CMap
$LN9@CMap:
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	eax, DWORD PTR [esi+8]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 8
; Line 28
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR [esi+44], 16			; 00000010H
	jb	SHORT $LN24@CMap
	mov	edx, DWORD PTR [esi+24]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@CMap:
	mov	DWORD PTR [esi+44], 15			; 0000000fH
	mov	DWORD PTR [esi+40], ebx
	mov	BYTE PTR [esi+24], bl
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMap@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??1CMap@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CMap@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CMap@@UAE@XZ ENDP					; CMap::~CMap
; Function compile flags: /Ogtp
;	COMDAT ??_GCMap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMap@@UAEPAXI@Z PROC				; CMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1CMap@@UAE@XZ				; CMap::~CMap
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@15
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@15:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GCMap@@UAEPAXI@Z ENDP				; CMap::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CMap@@QAE@XZ					; CMap::CMap
; Function compile flags: /Ogtp
;	COMDAT ??0CMap@@QAE@XZ
_TEXT	SEGMENT
??0CMap@@QAE@XZ PROC					; CMap::CMap, COMDAT
; _this$ = eax
; Line 17
	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7CMap@@6B@
	mov	DWORD PTR [eax+44], 15			; 0000000fH
	mov	DWORD PTR [eax+40], ecx
	mov	BYTE PTR [eax+24], cl
; Line 18
	mov	DWORD PTR [eax+72], ecx
; Line 19
	mov	DWORD PTR [eax+16], ecx
; Line 20
	mov	BYTE PTR [eax+76], cl
; Line 21
	ret	0
??0CMap@@QAE@XZ ENDP					; CMap::CMap
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0failure@ios_base@std@@QAE@ABV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[ebp]
	push	edi
	mov	esi, ecx
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR [esi], OFFSET ??_7system_error@std@@6B@
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
	mov	ecx, DWORD PTR [edi+16]
	pop	edi
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi], OFFSET ??_7failure@ios_base@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0failure@ios_base@std@@QAE@ABV012@@Z ENDP		; std::ios_base::failure::failure
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT
??1failure@ios_base@std@@UAE@XZ PROC			; std::ios_base::failure::~failure, COMDAT
; _this$ = ecx
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1failure@ios_base@std@@UAE@XZ ENDP			; std::ios_base::failure::~failure
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gfailure@ios_base@std@@UAEPAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN13@scalar@16
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@scalar@16:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gfailure@ios_base@std@@UAEPAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getloc@ios_base@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT
__Lock$138179 = -4					; size = 4
?getloc@ios_base@std@@QBE?AVlocale@2@XZ PROC		; std::ios_base::getloc, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 452
	mov	ecx, DWORD PTR [eax+48]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	0
	lea	ecx, DWORD PTR __Lock$138179[ebp]
	mov	DWORD PTR [edi], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN5@getloc@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN5@getloc@2:
	lea	ecx, DWORD PTR __Lock$138179[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	esi
; Line 453
	mov	esp, ebp
	pop	ebp
	ret	0
?getloc@ios_base@std@@QBE?AVlocale@2@XZ ENDP		; std::ios_base::getloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z
_TEXT	SEGMENT
$T138192 = 8						; size = 4
__Message$ = 8						; size = 4
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z PROC	; std::ios_base::failure::failure, COMDAT
; _this$ = esi
; __Errcode$ = eax
; Line 237
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR [eax+4]
	push	edi
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR __Message$[ebp]
	lea	ecx, DWORD PTR $T138192[ebp]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T138192[ebp], eax
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	DWORD PTR [esi+12], edi
; Line 238
	pop	edi
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi], OFFSET ??_7failure@ios_base@std@@6B@
	mov	eax, esi
	pop	ebx
	pop	ebp
	ret	4
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z ENDP	; std::ios_base::failure::failure
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$ctype@D@std@@MAE@XZ
_TEXT	SEGMENT
??1?$ctype@D@std@@MAE@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 2394
	push	esi
	mov	esi, ecx
; Line 2395
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	test	eax, eax
	jle	SHORT $LN13@ctype
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	add	esp, 4
; Line 2396
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
$LN13@ctype:
; Line 2395
	jns	SHORT $LN12@ctype
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN12@ctype:
; Line 2396
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
??1?$ctype@D@std@@MAE@XZ ENDP				; std::ctype<char>::~ctype<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
$T138247 = -16						; size = 16
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z PROC		; std::ctype<char>::ctype<char>, COMDAT
; _this$ = esi
; Line 2365
	push	ebp
	mov	ebp, esp
; Line 2366
	lea	eax, DWORD PTR $T138247[ebp]
	sub	esp, 16					; 00000010H
	push	eax
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	call	__Getctype
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+8], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [eax+12]
	add	esp, 4
	mov	DWORD PTR [esi+20], edx
; Line 2367
	mov	eax, esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z ENDP		; std::ctype<char>::ctype<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gctype_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gctype_base@std@@UAEPAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@17
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@17:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gctype_base@std@@UAEPAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gcodecvt_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gcodecvt_base@std@@UAEPAXI@Z PROC			; std::codecvt_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@18
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@18:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gcodecvt_base@std@@UAEPAXI@Z ENDP			; std::codecvt_base::`scalar deleting destructor'
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
$T138569 = -40						; size = 12
__Ptr$ = -28						; size = 4
$T138553 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newres$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1919
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
; Line 1920
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	esi, eax
	or	esi, 15					; 0000000fH
; Line 1921
	cmp	esi, -2					; fffffffeH
	jbe	SHORT $LN9@Copy
; Line 1922
	mov	esi, eax
	jmp	SHORT $LN39@Copy
$LN9@Copy:
; Line 1923
	mov	ebx, DWORD PTR [edi+20]
	mov	eax, -1431655765			; aaaaaaabH
	mul	esi
	mov	ecx, ebx
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN39@Copy
; Line 1925
	mov	eax, -2					; fffffffeH
	sub	eax, ecx
; Line 1927
	lea	esi, DWORD PTR [ecx+ebx]
	cmp	ebx, eax
	jbe	SHORT $LN39@Copy
; Line 1929
	mov	esi, -2					; fffffffeH
$LN39@Copy:
; Line 1932
	xor	eax, eax
; Line 1933
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	cmp	ecx, eax
	jbe	SHORT $LN47@Copy
	cmp	ecx, -1
	ja	SHORT $LN46@Copy
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN46@Copy
$LN47@Copy:
	mov	ebx, eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN19@Copy
$LN46@Copy:
	lea	ecx, DWORD PTR $T138553[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T138569[ebp]
	mov	DWORD PTR $T138553[ebp], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T138569[ebp]
	push	edx
	mov	DWORD PTR $T138569[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN114@Copy:
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1935
	mov	eax, DWORD PTR __Newsize$[ebp]
; Line 1937
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	inc	eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	eax
	add	ecx, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1942
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN108@Copy
	ret	0
$LN108@Copy:
	mov	edi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR __Newres$[ebp]
	mov	ebx, DWORD PTR __Ptr$[ebp]
$LN19@Copy:
; Line 1944
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	test	ecx, ecx
	je	SHORT $LN78@Copy
; Line 1945
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN76@Copy
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN77@Copy
$LN76@Copy:
	mov	eax, edi
$LN77@Copy:
	push	ecx
	push	eax
	push	ebx
	call	_memcpy
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	add	esp, 12					; 0000000cH
$LN78@Copy:
; Line 1946
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN88@Copy
	mov	eax, DWORD PTR [edi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	add	esp, 4
$LN88@Copy:
	mov	BYTE PTR [edi], 0
; Line 1947
	mov	DWORD PTR [edi], ebx
; Line 1948
	mov	DWORD PTR [edi+20], esi
; Line 1949
	mov	DWORD PTR [edi+16], ecx
	cmp	esi, 16					; 00000010H
	jb	SHORT $LN102@Copy
	mov	edi, ebx
$LN102@Copy:
	mov	BYTE PTR [edi+ecx], 0
; Line 1950
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1939
	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN64@Copy
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@Copy:
; Line 1940
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	0
	mov	BYTE PTR [esi], 0
	call	__CxxThrowException@8
$LN115@Copy:
$LN113@Copy:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Ogtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; Line 1959
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1960
	mov	ebx, DWORD PTR __Newsize$[ebp]
	push	esi
	mov	esi, ecx
	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN6@Grow
; Line 1961
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN49@Grow:
$LN6@Grow:
; Line 1962
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ebx
	jae	SHORT $LN5@Grow
; Line 1963
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Line 1969
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN5@Grow:
; Line 1964
	cmp	BYTE PTR __Trim$[ebp], 0
	je	SHORT $LN3@Grow
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN3@Grow
; Line 1966
	push	edi
	mov	edi, DWORD PTR [esi+16]
	cmp	ebx, edi
	jae	SHORT $LN9@Grow
	mov	edi, ebx
$LN9@Grow:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN30@Grow
	mov	ebx, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN28@Grow
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN28@Grow:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	ebx, DWORD PTR __Newsize$[ebp]
	add	esp, 4
$LN30@Grow:
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
; Line 1969
	xor	ecx, ecx
	mov	BYTE PTR [edi+esi], 0
	cmp	ecx, ebx
	pop	edi
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN3@Grow:
; Line 1967
	test	ebx, ebx
	jne	SHORT $LN46@Grow
; Line 1968
	mov	DWORD PTR [esi+16], ebx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN44@Grow
	mov	esi, DWORD PTR [esi]
$LN44@Grow:
	mov	BYTE PTR [esi], 0
$LN46@Grow:
; Line 1969
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1970
	pop	ebp
	ret	8
$LN48@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = esi
; Line 939
	cmp	DWORD PTR [esi+20], 8
	jae	SHORT $LN12@assign
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	8
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
$LN12@assign:
; Line 941
	mov	edx, 16					; 00000010H
	cmp	DWORD PTR [esi+20], edx
	jb	SHORT $LN67@assign
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN68@assign
$LN67@assign:
	mov	ecx, esi
$LN68@assign:
	xor	eax, eax
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
; Line 942
	mov	DWORD PTR [esi+16], 8
	cmp	DWORD PTR [esi+20], edx
	jb	SHORT $LN75@assign
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR [ecx+8], al
; Line 944
	mov	eax, esi
; Line 945
	ret	0
; Line 942
$LN75@assign:
	mov	BYTE PTR [esi+8], al
; Line 944
	mov	eax, esi
; Line 945
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 894
	mov	ebx, DWORD PTR __Roff$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	push	edi
	mov	edi, DWORD PTR [ecx+16]
	cmp	edi, ebx
	jae	SHORT $LN5@assign@2
; Line 895
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN83@assign@2:
$LN5@assign@2:
; Line 897
	mov	eax, DWORD PTR __Count$[ebp]
	sub	edi, ebx
	cmp	eax, edi
	jae	SHORT $LN4@assign@2
; Line 898
	mov	edi, eax
$LN4@assign@2:
; Line 900
	cmp	esi, ecx
	jne	SHORT $LN3@assign@2
; Line 901
	push	-1
	add	edi, ebx
	push	edi
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	ebx
	push	0
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	pop	edi
; Line 907
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
$LN3@assign@2:
; Line 902
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN20@assign@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN84@assign@2:
$LN20@assign@2:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN19@assign@2
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Right$[ebp]
	test	edi, edi
	je	SHORT $LN78@assign@2
$LN82@assign@2:
; Line 904
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [ecx+20], eax
	jb	SHORT $LN64@assign@2
	mov	ecx, DWORD PTR [ecx]
$LN64@assign@2:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN68@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN69@assign@2
; Line 902
$LN19@assign@2:
	test	edi, edi
	jne	SHORT $LN82@assign@2
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN58@assign@2
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 907
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
; Line 902
$LN58@assign@2:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
; Line 904
$LN68@assign@2:
	mov	eax, esi
$LN69@assign@2:
	push	edi
	add	ecx, ebx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 905
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN76@assign@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 907
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
; Line 905
$LN76@assign@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN78@assign@2:
; Line 907
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 908
	pop	ebp
	ret	12					; 0000000cH
$LN80@assign@2:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$codecvt@DDH@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$codecvt@DDH@std@@MAEPAXI@Z PROC			; std::codecvt<char,char,int>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN10@scalar@19
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@19:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$codecvt@DDH@std@@MAEPAXI@Z ENDP			; std::codecvt<char,char,int>::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
_TEXT	SEGMENT
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = esi
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 152
	push	esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
; Line 153
	lea	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], edx
	xor	ecx, ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], edx
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	BYTE PTR [esi+80], cl
	mov	BYTE PTR [esi+73], cl
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+52]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR [esi+48]
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [esi+84], ecx
	mov	DWORD PTR [esi+76], edx
	mov	DWORD PTR [esi+68], ecx
; Line 154
	mov	eax, esi
	ret	0
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = esi
; __Count$ = ebx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 845
	push	ebp
	mov	ebp, esp
; Line 846
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append
; Line 847
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN83@append:
$LN2@append:
; Line 850
	test	ebx, ebx
	je	$LN77@append
	push	edi
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN13@append
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN84@append:
$LN13@append:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN12@append
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN79@append
$LN82@append:
; Line 852
	mov	ecx, DWORD PTR [esi+16]
	cmp	ebx, 1
	jne	SHORT $LN56@append
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN61@append
	mov	eax, DWORD PTR [esi]
	mov	dl, BYTE PTR __Ch$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	jmp	SHORT $LN69@append
; Line 850
$LN12@append:
	test	edi, edi
	jne	SHORT $LN82@append
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN51@append
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 855
	mov	eax, esi
; Line 856
	pop	ebp
	ret	4
; Line 850
$LN51@append:
	mov	eax, esi
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 856
	pop	ebp
	ret	4
; Line 852
$LN61@append:
	mov	dl, BYTE PTR __Ch$[ebp]
	mov	eax, esi
	mov	BYTE PTR [eax+ecx], dl
	jmp	SHORT $LN69@append
$LN56@append:
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN67@append
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN68@append
$LN67@append:
	mov	eax, esi
$LN68@append:
	movsx	edx, BYTE PTR __Ch$[ebp]
	push	ebx
	push	edx
	add	eax, ecx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN69@append:
; Line 853
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN75@append
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 855
	mov	eax, esi
; Line 856
	pop	ebp
	ret	4
; Line 853
$LN75@append:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN79@append:
	pop	edi
$LN77@append:
; Line 855
	mov	eax, esi
; Line 856
	pop	ebp
	ret	4
$LN80@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = esi
; Line 607
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
; Line 608
	cmp	DWORD PTR [esi+20], 8
	jae	SHORT $LN38@basic_stri@2
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	8
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
$LN38@basic_stri@2:
	mov	edx, 16					; 00000010H
	cmp	DWORD PTR [esi+20], edx
	jb	SHORT $LN93@basic_stri@2
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN94@basic_stri@2
$LN93@basic_stri@2:
	mov	ecx, esi
$LN94@basic_stri@2:
	xor	eax, eax
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [esi+16], 8
	cmp	DWORD PTR [esi+20], edx
	jb	SHORT $LN101@basic_stri@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+8], 0
; Line 609
	mov	eax, esi
	ret	0
; Line 608
$LN101@basic_stri@2:
	mov	BYTE PTR [esi+8], al
; Line 609
	mov	eax, esi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = esi
; __Right$ = edx
; __Roff$ = ecx
; __Count$ = eax
; Line 573
	push	eax
	push	ecx
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	edx
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 574
	mov	eax, esi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0
__ehfuncinfo$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Lock$140036 = -20					; size = 4
$T140023 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ebx, ecx
	mov	DWORD PTR _this$[ebp], ebx
	mov	DWORD PTR [ebx], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR [ebx+56]
	mov	DWORD PTR $T140023[ebp], eax
	test	eax, eax
	je	SHORT $LN9@scalar@20
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	je	SHORT $LN15@scalar@20
	push	0
	lea	ecx, DWORD PTR __Lock$140036[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN17@scalar@20
	cmp	eax, -1
	jae	SHORT $LN17@scalar@20
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN17@scalar@20:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$140036[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN22@scalar@20
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN22@scalar@20:
	mov	eax, DWORD PTR $T140023[ebp]
$LN15@scalar@20:
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@scalar@20:
	lea	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN21@scalar@20
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN21@scalar@20:
	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
__ehhandler$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0
__ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
__Dest$92841 = -60					; size = 4
$T140538 = -56						; size = 4
__Src$92842 = -52					; size = 4
__Ch$92840 = -45					; size = 1
__Str$92836 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 423
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 425
	mov	eax, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [eax]
	xor	edx, edx
	cmp	eax, edx
	je	SHORT $LN18@uflow@2
	mov	ecx, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edi+48]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, eax
	cmp	eax, ecx
	jae	SHORT $LN18@uflow@2
; Line 427
	mov	eax, DWORD PTR [edi+48]
	dec	DWORD PTR [eax]
	mov	edi, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [edi]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [edi], edx
	movzx	eax, BYTE PTR [eax]
	jmp	$LN14@uflow@2
$LN18@uflow@2:
; Line 428
	cmp	DWORD PTR [edi+84], edx
; Line 429
	je	$LN277@uflow@2
; Line 430
	mov	ecx, DWORD PTR [edi+16]
	lea	esi, DWORD PTR [edi+72]
	cmp	DWORD PTR [ecx], esi
	jne	SHORT $LN41@uflow@2
	mov	eax, DWORD PTR [edi+64]
	mov	esi, DWORD PTR [edi+60]
	mov	DWORD PTR [ecx], esi
	mov	ecx, DWORD PTR [edi+32]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR [edi+48]
	sub	eax, eax
	mov	DWORD PTR [ecx], eax
$LN41@uflow@2:
; Line 431
	cmp	DWORD PTR [edi+68], edx
	jne	SHORT $LN15@uflow@2
; Line 435
	mov	edi, DWORD PTR [edi+84]
	push	edi
	call	_fgetc
	add	esp, 4
	cmp	eax, -1
	je	$LN277@uflow@2
	movzx	eax, al
	jmp	$LN14@uflow@2
$LN15@uflow@2:
; Line 439
	mov	DWORD PTR __Str$92836[ebp+20], 15	; 0000000fH
	mov	DWORD PTR __Str$92836[ebp+16], edx
	mov	BYTE PTR __Str$92836[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], edx
; Line 446
	mov	edx, DWORD PTR [edi+84]
	push	edx
	call	_fgetc
	mov	ebx, eax
	add	esp, 4
; Line 448
	cmp	ebx, -1
	je	$LN291@uflow@2
	npad	1
$LL13@uflow@2:
; Line 451
	mov	edx, DWORD PTR __Str$92836[ebp+16]
	or	eax, -1
	sub	eax, edx
	cmp	eax, 1
	jbe	$LN292@uflow@2
	lea	esi, DWORD PTR [edx+1]
	cmp	esi, -2					; fffffffeH
	ja	$LN292@uflow@2
	mov	ecx, DWORD PTR __Str$92836[ebp+20]
	cmp	ecx, esi
	jae	SHORT $LN90@uflow@2
	push	edx
	push	esi
	lea	ecx, DWORD PTR __Str$92836[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN302@uflow@2
$LN90@uflow@2:
	test	esi, esi
	jne	SHORT $LN303@uflow@2
	mov	eax, DWORD PTR __Str$92836[ebp]
	mov	DWORD PTR __Str$92836[ebp+16], esi
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN130@uflow@2
	lea	eax, DWORD PTR __Str$92836[ebp]
$LN130@uflow@2:
	mov	BYTE PTR [eax], 0
$LN302@uflow@2:
	mov	edx, DWORD PTR __Str$92836[ebp+16]
	mov	ecx, DWORD PTR __Str$92836[ebp+20]
	test	esi, esi
$LN303@uflow@2:
	setne	al
	test	al, al
	je	SHORT $LN155@uflow@2
	mov	eax, DWORD PTR __Str$92836[ebp]
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN140@uflow@2
	lea	eax, DWORD PTR __Str$92836[ebp]
$LN140@uflow@2:
	mov	BYTE PTR [eax+edx], bl
	cmp	DWORD PTR __Str$92836[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$92836[ebp]
	mov	DWORD PTR __Str$92836[ebp+16], esi
	jae	SHORT $LN154@uflow@2
	lea	eax, DWORD PTR __Str$92836[ebp]
$LN154@uflow@2:
	mov	BYTE PTR [eax+esi], 0
	mov	ecx, DWORD PTR __Str$92836[ebp+20]
	mov	edx, DWORD PTR __Str$92836[ebp+16]
$LN155@uflow@2:
; Line 454
	mov	eax, DWORD PTR __Str$92836[ebp]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN162@uflow@2
	mov	DWORD PTR $T140538[ebp], eax
	jmp	SHORT $LN163@uflow@2
$LN162@uflow@2:
	lea	esi, DWORD PTR __Str$92836[ebp]
	mov	DWORD PTR $T140538[ebp], esi
$LN163@uflow@2:
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN184@uflow@2
	lea	eax, DWORD PTR __Str$92836[ebp]
$LN184@uflow@2:
	mov	ecx, DWORD PTR [edi+68]
	mov	esi, DWORD PTR [ecx]
	lea	ebx, DWORD PTR __Dest$92841[ebp]
	push	ebx
	lea	ebx, DWORD PTR __Ch$92840[ebp+1]
	push	ebx
	lea	ebx, DWORD PTR __Ch$92840[ebp]
	push	ebx
	lea	ebx, DWORD PTR __Src$92842[ebp]
	push	ebx
	mov	ebx, DWORD PTR $T140538[ebp]
	add	ebx, edx
	push	ebx
	push	eax
	mov	eax, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [edi+76]
	push	edx
	call	eax
	test	eax, eax
	js	$LN1@uflow@2
	cmp	eax, 1
	jle	SHORT $LN8@uflow@2
	cmp	eax, 3
	jne	$LN1@uflow@2
; Line 471
	cmp	DWORD PTR __Str$92836[ebp+16], 1
	jb	SHORT $LN4@uflow@2
; Line 474
	cmp	DWORD PTR __Str$92836[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$92836[ebp]
	jae	SHORT $LN249@uflow@2
	lea	eax, DWORD PTR __Str$92836[ebp]
$LN249@uflow@2:
	push	1
	push	eax
	lea	ecx, DWORD PTR __Ch$92840[ebp]
	push	1
	push	ecx
	call	_memcpy_s
	add	esp, 16					; 00000010H
; Line 477
	jmp	$LN5@uflow@2
$LN8@uflow@2:
; Line 458
	lea	ecx, DWORD PTR __Ch$92840[ebp]
	cmp	DWORD PTR __Dest$92841[ebp], ecx
	jne	SHORT $LN295@uflow@2
; Line 467
	cmp	DWORD PTR __Str$92836[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$92836[ebp]
	jae	SHORT $LN228@uflow@2
	lea	eax, DWORD PTR __Str$92836[ebp]
$LN228@uflow@2:
	mov	edx, DWORD PTR __Src$92842[ebp]
	sub	edx, eax
	push	edx
	push	0
	lea	ecx, DWORD PTR __Str$92836[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
$LN4@uflow@2:
; Line 446
	mov	eax, DWORD PTR [edi+84]
	push	eax
	call	_fgetc
	mov	ebx, eax
	add	esp, 4
; Line 448
	cmp	ebx, -1
	jne	$LL13@uflow@2
$LN291@uflow@2:
; Line 449
	lea	ecx, DWORD PTR __Str$92836[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	SHORT $LN277@uflow@2
$LN292@uflow@2:
; Line 451
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN304@uflow@2:
$LN295@uflow@2:
; Line 460
	cmp	DWORD PTR __Str$92836[ebp+20], 16	; 00000010H
	mov	esi, DWORD PTR __Str$92836[ebp]
	jae	SHORT $LN205@uflow@2
	lea	esi, DWORD PTR __Str$92836[ebp]
$LN205@uflow@2:
	sub	esi, DWORD PTR __Src$92842[ebp]
	add	esi, DWORD PTR __Str$92836[ebp+16]
; Line 461
	test	esi, esi
	jle	SHORT $LN5@uflow@2
$LN6@uflow@2:
; Line 462
	mov	eax, DWORD PTR __Src$92842[ebp]
	mov	edx, DWORD PTR [edi+84]
	movsx	ecx, BYTE PTR [esi+eax-1]
	dec	esi
	push	edx
	push	ecx
	call	_ungetc
	add	esp, 8
	test	esi, esi
	jg	SHORT $LN6@uflow@2
$LN5@uflow@2:
; Line 463
	movzx	esi, BYTE PTR __Ch$92840[ebp]
	lea	ecx, DWORD PTR __Str$92836[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@uflow@2
$LN1@uflow@2:
; Line 480
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR __Str$92836[ebp+20], 16	; 00000010H
	jb	SHORT $LN277@uflow@2
	mov	edx, DWORD PTR __Str$92836[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN277@uflow@2:
	or	eax, -1
$LN14@uflow@2:
; Line 484
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN301@uflow@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0:
	lea	ecx, DWORD PTR __Str$92836[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0
__ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -60					; size = 4
__Src$92692 = -56					; size = 4
__Dest$92693 = -52					; size = 4
__Ch$92691 = -45					; size = 1
__Str$92694 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 322
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 323
	mov	ebx, DWORD PTR __Meta$[ebp]
	mov	edi, ecx
; Line 348
	mov	DWORD PTR _this$GSCopy$[ebp], edi
	cmp	ebx, -1
	jne	SHORT $LN20@overflow
; Line 324
	xor	eax, eax
	jmp	$LN14@overflow
$LN20@overflow:
; Line 326
	mov	eax, DWORD PTR [edi+36]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN18@overflow
	mov	eax, DWORD PTR [edi+52]
	mov	edx, DWORD PTR [eax]
	add	edx, ecx
	cmp	ecx, edx
	jae	SHORT $LN18@overflow
; Line 328
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [edi+36]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [ecx], bl
; Line 329
	mov	eax, ebx
	jmp	$LN14@overflow
$LN18@overflow:
; Line 331
	cmp	DWORD PTR [edi+84], 0
; Line 332
	je	$LN247@overflow
; Line 333
	mov	ecx, DWORD PTR [edi+16]
	lea	edx, DWORD PTR [edi+72]
	cmp	DWORD PTR [ecx], edx
	jne	SHORT $LN57@overflow
	mov	edx, DWORD PTR [edi+60]
	mov	eax, DWORD PTR [edi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [edi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [edi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN57@overflow:
; Line 334
	cmp	DWORD PTR [edi+68], 0
	jne	SHORT $LN15@overflow
; Line 336
	mov	edi, DWORD PTR [edi+84]
	movsx	eax, bl
	push	edi
	push	eax
	call	_fputc
	add	esp, 8
	cmp	eax, -1
	je	$LN247@overflow
	mov	eax, ebx
	jmp	$LN14@overflow
$LN15@overflow:
; Line 344
	lea	esi, DWORD PTR __Str$92694[ebp]
	mov	BYTE PTR __Ch$92691[ebp], bl
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN252@overflow:
	mov	ebx, DWORD PTR __Str$92694[ebp+20]
	mov	eax, DWORD PTR __Str$92694[ebp]
	npad	2
$LL244@overflow:
; Line 377
	mov	edx, DWORD PTR __Str$92694[ebp+16]
$LN13@overflow:
; Line 348
	mov	esi, eax
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN93@overflow
	lea	esi, DWORD PTR __Str$92694[ebp]
	mov	eax, esi
$LN93@overflow:
	mov	ecx, DWORD PTR [edi+68]
	mov	ebx, DWORD PTR [ecx]
	lea	edi, DWORD PTR __Dest$92693[ebp]
	push	edi
	mov	edi, DWORD PTR _this$GSCopy$[ebp]
	add	esi, edx
	push	esi
	push	eax
	lea	edx, DWORD PTR __Src$92692[ebp]
	push	edx
	lea	eax, DWORD PTR __Ch$92691[ebp+1]
	push	eax
	lea	edx, DWORD PTR __Ch$92691[ebp]
	push	edx
	lea	eax, DWORD PTR [edi+76]
	push	eax
	mov	eax, DWORD PTR [ebx+20]
	call	eax
	test	eax, eax
	js	$LN1@overflow
	cmp	eax, 1
	jg	$LN239@overflow
; Line 353
	mov	ebx, DWORD PTR __Str$92694[ebp+20]
	mov	eax, DWORD PTR __Str$92694[ebp]
	mov	edx, eax
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN114@overflow
	lea	edx, DWORD PTR __Str$92694[ebp]
$LN114@overflow:
	mov	esi, DWORD PTR __Dest$92693[ebp]
	sub	esi, edx
; Line 355
	je	SHORT $LN8@overflow
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN133@overflow
	lea	eax, DWORD PTR __Str$92694[ebp]
$LN133@overflow:
	mov	ecx, DWORD PTR [edi+84]
	push	ecx
	push	esi
	push	1
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	cmp	esi, eax
	jne	$LN1@overflow
	mov	ebx, DWORD PTR __Str$92694[ebp+20]
	mov	eax, DWORD PTR __Str$92694[ebp]
$LN8@overflow:
; Line 359
	lea	edx, DWORD PTR __Ch$92691[ebp]
	mov	BYTE PTR [edi+73], 1
	cmp	DWORD PTR __Src$92692[ebp], edx
	jne	$LN241@overflow
; Line 362
	test	esi, esi
	jne	$LL244@overflow
; Line 364
	mov	edx, DWORD PTR __Str$92694[ebp+16]
	cmp	edx, 32					; 00000020H
	jae	$LN1@overflow
; Line 365
	or	ecx, -1
	sub	ecx, edx
	cmp	ecx, 8
	jbe	$LN242@overflow
	lea	esi, DWORD PTR [edx+8]
	cmp	esi, -2					; fffffffeH
	ja	$LN242@overflow
	cmp	ebx, esi
	jae	SHORT $LN162@overflow
	push	edx
	push	esi
	lea	ecx, DWORD PTR __Str$92694[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ebx, DWORD PTR __Str$92694[ebp+20]
	mov	edx, DWORD PTR __Str$92694[ebp+16]
	mov	eax, DWORD PTR __Str$92694[ebp]
	test	esi, esi
	je	$LN13@overflow
$LN251@overflow:
	mov	ecx, eax
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN218@overflow
	lea	ecx, DWORD PTR __Str$92694[ebp]
$LN218@overflow:
	xor	eax, eax
	mov	DWORD PTR [ecx+edx], eax
	mov	DWORD PTR [ecx+edx+4], eax
	cmp	DWORD PTR __Str$92694[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$92694[ebp]
	mov	DWORD PTR __Str$92694[ebp+16], esi
	jae	SHORT $LN226@overflow
	lea	eax, DWORD PTR __Str$92694[ebp]
$LN226@overflow:
	mov	BYTE PTR [eax+esi], 0
; Line 377
	jmp	$LN252@overflow
; Line 365
$LN162@overflow:
	test	esi, esi
	jne	SHORT $LN251@overflow
	mov	DWORD PTR __Str$92694[ebp+16], esi
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN202@overflow
	lea	eax, DWORD PTR __Str$92694[ebp]
$LN202@overflow:
	mov	BYTE PTR [eax], 0
	jmp	$LN252@overflow
$LN239@overflow:
; Line 348
	cmp	eax, 3
	jne	SHORT $LN1@overflow
; Line 373
	mov	edi, DWORD PTR [edi+84]
	movsx	edx, BYTE PTR __Ch$92691[ebp]
	push	edi
	push	edx
	call	_fputc
	add	esp, 8
	cmp	eax, -1
	je	SHORT $LN25@overflow
	mov	esi, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN26@overflow
$LN25@overflow:
	or	esi, -1
$LN26@overflow:
	lea	ecx, DWORD PTR __Str$92694[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@overflow
$LN241@overflow:
; Line 360
	lea	ecx, DWORD PTR __Str$92694[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN14@overflow
$LN242@overflow:
; Line 365
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN254@overflow:
$LN1@overflow:
; Line 376
	lea	ecx, DWORD PTR __Str$92694[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN247@overflow:
	or	eax, -1
$LN14@overflow:
; Line 379
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
$LN246@overflow:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0:
	lea	ecx, DWORD PTR __Str$92694[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
; Function compile flags: /Ogtp
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
_TEXT	SEGMENT
$T141545 = -4						; size = 4
__Count$ = 8						; size = 4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT
; _this$ = edx
; ___$ReturnUdt$ = esi
; __Off$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 1848
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
; Line 1849
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR $T141545[ebp], eax
	mov	BYTE PTR [esi], al
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
; Line 1850
	mov	esp, ebp
	pop	ebp
	ret	4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z ; CMap::GetTxtMapValue
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z$0
__ehfuncinfo$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z
_TEXT	SEGMENT
$T91493 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 28
?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z PROC ; CMap::GetTxtMapValue, COMDAT
; _keywords$ = ecx
; _value$ = ebx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cmap.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 43
	mov	eax, ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	esi, DWORD PTR [eax+1]
$LL70@GetTxtMapV:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL70@GetTxtMapV
	sub	eax, esi
	push	eax
	push	ecx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 44
	mov	edi, 16					; 00000010H
	cmp	eax, -1
	je	SHORT $LN44@GetTxtMapV
; Line 46
	push	1
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 47
	mov	ecx, DWORD PTR _str$[ebp]
	cmp	DWORD PTR _str$[ebp+20], edi
	jae	SHORT $LN19@GetTxtMapV
	lea	ecx, DWORD PTR _str$[ebp]
$LN19@GetTxtMapV:
	lea	esi, DWORD PTR [ecx+1]
$LL71@GetTxtMapV:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL71@GetTxtMapV
	sub	ecx, esi
	push	ecx
	lea	ecx, DWORD PTR [eax+1]
	lea	esi, DWORD PTR $T91493[ebp]
	lea	edx, DWORD PTR _str$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	cmp	DWORD PTR [eax+20], edi
	jb	SHORT $LN24@GetTxtMapV
	mov	eax, DWORD PTR [eax]
$LN24@GetTxtMapV:
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR [ebx], eax
	cmp	DWORD PTR $T91493[ebp+20], edi
	jb	SHORT $LN36@GetTxtMapV
	mov	edx, DWORD PTR $T91493[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN36@GetTxtMapV:
	mov	DWORD PTR $T91493[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91493[ebp+16], 0
	mov	BYTE PTR $T91493[ebp], 0
$LN44@GetTxtMapV:
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _str$[ebp+20], edi
	jb	SHORT $LN58@GetTxtMapV
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN58@GetTxtMapV:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z ENDP ; CMap::GetTxtMapValue
; Function compile flags: /Ogtp
;	COMDAT ?clear@ios_base@std@@QAEXH_N@Z
_TEXT	SEGMENT
$T141868 = -20						; size = 20
$T141866 = -20						; size = 20
$T141864 = -20						; size = 20
$T141962 = 8						; size = 4
$T141926 = 8						; size = 4
$T141890 = 8						; size = 4
__Reraise$ = 8						; size = 1
?clear@ios_base@std@@QAEXH_N@Z PROC			; std::ios_base::clear, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 314
	cmp	BYTE PTR __Reraise$[ebp], 0
	push	esi
	push	edi
	je	SHORT $LN6@clear
; Line 315
	push	0
	push	0
	call	__CxxThrowException@8
$LN60@clear:
$LN6@clear:
; Line 316
	mov	eax, DWORD PTR [ecx+16]
	and	eax, DWORD PTR [ecx+12]
; Line 317
	mov	esi, 1
	test	al, 4
	je	SHORT $LN4@clear
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	mov	edi, eax
	lea	eax, DWORD PTR $T141890[ebp]
	push	eax
	lea	ecx, DWORD PTR $T141864[ebp]
	mov	DWORD PTR $T141890[ebp], OFFSET ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	ecx, DWORD PTR $T141864[ebp]
	push	ecx
	mov	DWORD PTR $T141864[ebp+12], esi
	mov	DWORD PTR $T141864[ebp+16], edi
	mov	DWORD PTR $T141864[ebp], OFFSET ??_7failure@ios_base@std@@6B@
	call	__CxxThrowException@8
$LN61@clear:
$LN4@clear:
; Line 318
	test	al, 2
	je	SHORT $LN2@clear
; Line 319
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	lea	edx, DWORD PTR $T141926[ebp]
	push	edx
	lea	ecx, DWORD PTR $T141866[ebp]
	mov	edi, eax
	mov	DWORD PTR $T141926[ebp], OFFSET ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	eax, DWORD PTR $T141866[ebp]
	push	eax
	mov	DWORD PTR $T141866[ebp+12], esi
	mov	DWORD PTR $T141866[ebp+16], edi
	mov	DWORD PTR $T141866[ebp], OFFSET ??_7failure@ios_base@std@@6B@
	call	__CxxThrowException@8
$LN62@clear:
$LN2@clear:
; Line 321
	call	?iostream_category@std@@YAABVerror_category@1@XZ ; std::iostream_category
	lea	ecx, DWORD PTR $T141962[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T141868[ebp]
	mov	edi, eax
	mov	DWORD PTR $T141962[ebp], OFFSET ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI4?AVfailure@ios_base@std@@
	lea	edx, DWORD PTR $T141868[ebp]
	push	edx
	mov	DWORD PTR $T141868[ebp+12], esi
	mov	DWORD PTR $T141868[ebp+16], edi
	mov	DWORD PTR $T141868[ebp], OFFSET ??_7failure@ios_base@std@@6B@
	call	__CxxThrowException@8
$LN63@clear:
$LN59@clear:
	int	3
?clear@ios_base@std@@QAEXH_N@Z ENDP			; std::ios_base::clear
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$ctype@D@std@@MAEPAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	test	eax, eax
	jle	SHORT $LN16@scalar@21
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	jmp	SHORT $LN17@scalar@21
$LN16@scalar@21:
	jns	SHORT $LN6@scalar@21
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
$LN17@scalar@21:
	add	esp, 4
$LN6@scalar@21:
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN15@scalar@21
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@scalar@21:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$ctype@D@std@@MAEPAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xlocinfo
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
__ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T142024 = -68						; size = 36
$T142083 = -32						; size = 16
$T142028 = -16						; size = 4
$T142023 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\xlocale
; Line 2371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2372
	mov	edi, DWORD PTR __Ppf$[ebp]
; Line 2374
	xor	ebx, ebx
	mov	DWORD PTR $T142028[ebp], ebx
	cmp	edi, ebx
	je	$LN28@Getcat@2
; Line 2372
	cmp	DWORD PTR [edi], ebx
	jne	$LN28@Getcat@2
; Line 2374
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T142023[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	cmp	esi, ebx
	je	SHORT $LN4@Getcat@2
	mov	eax, DWORD PTR __Ploc$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, ebx
	jne	SHORT $LN15@Getcat@2
	lea	ecx, DWORD PTR [eax+28]
$LN15@Getcat@2:
	lea	edx, DWORD PTR $T142024[ebp]
	push	edx
	mov	edi, ecx
	call	??0_Locinfo@std@@QAE@PBD@Z		; std::_Locinfo::_Locinfo
	lea	eax, DWORD PTR $T142083[ebp]
	push	eax
	mov	ebx, 1
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	call	__Getctype
	mov	ecx, DWORD PTR [eax]
	mov	edi, DWORD PTR __Ppf$[ebp]
	mov	DWORD PTR [esi+8], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+12], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [eax+12]
	add	esp, 4
	mov	DWORD PTR [esi+20], edx
	jmp	SHORT $LN5@Getcat@2
$LN4@Getcat@2:
	xor	esi, esi
$LN5@Getcat@2:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [edi], esi
	test	bl, 1
	je	SHORT $LN28@Getcat@2
	lea	eax, DWORD PTR $T142024[ebp]
	push	eax
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN28@Getcat@2:
; Line 2375
	mov	eax, 2
; Line 2376
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T142023[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::ctype<char>::_Getcat
; Function compile flags: /Ogtp
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z
_TEXT	SEGMENT
__Num$ = -4						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = esi
; __Right$ = ebx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 982
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 985
	mov	eax, DWORD PTR [ebx+16]
	push	edi
	or	edi, -1
; Line 986
	cmp	eax, -1
	jae	SHORT $LN5@insert
; Line 987
	mov	edi, eax
$LN5@insert:
; Line 988
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, edi
	ja	SHORT $LN4@insert
; Line 989
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN110@insert:
$LN4@insert:
; Line 991
	test	edi, edi
	je	$LN104@insert
	lea	edx, DWORD PTR [eax+edi]
	mov	DWORD PTR __Num$[ebp], edx
	cmp	edx, -2					; fffffffeH
	jbe	SHORT $LN26@insert
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN111@insert:
$LN26@insert:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edx
	jae	SHORT $LN25@insert
	push	eax
	push	edx
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __Num$[ebp]
	test	edx, edx
	je	$LN104@insert
$LN108@insert:
; Line 994
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN70@insert
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN71@insert
; Line 991
$LN25@insert:
	test	edx, edx
	jne	SHORT $LN108@insert
	mov	DWORD PTR [esi+16], edx
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN64@insert
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], dl
; Line 1004
	mov	eax, esi
	pop	edi
; Line 1005
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 991
$LN64@insert:
	mov	eax, esi
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 1005
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 994
$LN70@insert:
	mov	ecx, esi
$LN71@insert:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN74@insert
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN75@insert
$LN74@insert:
	mov	eax, esi
$LN75@insert:
	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	ecx
	add	eax, edi
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 995
	cmp	esi, ebx
	jne	SHORT $LN2@insert
; Line 998
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN80@insert
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN81@insert
$LN80@insert:
	mov	ecx, esi
$LN81@insert:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN84@insert
	mov	eax, DWORD PTR [esi]
	push	edi
	push	ecx
	push	eax
	call	_memmove
; Line 999
	jmp	SHORT $LN109@insert
; Line 998
$LN84@insert:
	push	edi
	mov	eax, esi
	push	ecx
	push	eax
	call	_memmove
; Line 999
	jmp	SHORT $LN109@insert
$LN2@insert:
; Line 1001
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [ebx+20], eax
	jb	SHORT $LN90@insert
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN91@insert
$LN90@insert:
	mov	ecx, ebx
$LN91@insert:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN94@insert
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN95@insert
$LN94@insert:
	mov	eax, esi
$LN95@insert:
	push	edi
	push	ecx
	push	eax
	call	_memcpy
$LN109@insert:
; Line 1002
	mov	ecx, DWORD PTR __Num$[ebp]
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], ecx
	jb	SHORT $LN102@insert
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+ecx], 0
; Line 1004
	mov	eax, esi
	pop	edi
; Line 1005
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 1002
$LN102@insert:
	mov	eax, esi
	mov	BYTE PTR [eax+ecx], 0
$LN104@insert:
; Line 1004
	mov	eax, esi
	pop	edi
; Line 1005
	mov	esp, ebp
	pop	ebp
	ret	0
$LN106@insert:
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z
_TEXT	SEGMENT
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = esi
; __Right$ = ebx
; Line 977
	jmp	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T142354 = -36						; size = 12
__Lock$93859 = -24					; size = 4
__Lock$142362 = -20					; size = 4
__Lock$142384 = -20					; size = 4
__Psave$93860 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT
; __Loc$ = edi
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	push	0
	lea	ecx, DWORD PTR __Lock$93859[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 509
	cmp	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, 0 ; std::ctype<char>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	DWORD PTR __Psave$93860[ebp], ebx
	jne	SHORT $LN11@use_facet@2
	push	0
	lea	ecx, DWORD PTR __Lock$142362[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, 0 ; std::ctype<char>::id
	jne	SHORT $LN10@use_facet@2
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, eax ; std::ctype<char>::id
$LN10@use_facet@2:
	lea	ecx, DWORD PTR __Lock$142362[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet@2:
	mov	esi, DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
; Line 510
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@2
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet@2
$LN30@use_facet@2:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@2
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@2
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet@2
$LN20@use_facet@2:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet@2
$LN16@use_facet@2:
	mov	esi, ecx
$LN15@use_facet@2:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet@2
$LN31@use_facet@2:
; Line 514
	test	ebx, ebx
	je	SHORT $LN4@use_facet@2
; Line 515
	mov	esi, ebx
	jmp	SHORT $LN28@use_facet@2
$LN4@use_facet@2:
; Line 516
	lea	eax, DWORD PTR __Psave$93860[ebp]
	push	edi
	push	eax
	call	?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@2
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T142354[ebp]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T142354[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN37@use_facet@2:
$LN2@use_facet@2:
; Line 528
	mov	esi, DWORD PTR __Psave$93860[ebp]
; Line 532
	push	0
	lea	ecx, DWORD PTR __Lock$142384[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::ctype<char> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet@2:
	lea	ecx, DWORD PTR __Lock$142384[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
; Line 533
	push	esi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet@2:
; Line 536
	lea	ecx, DWORD PTR __Lock$93859[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$93859[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; __Right$ = eax
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 888
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 889
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 911
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 917
	mov	ebx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	test	ebx, ebx
	je	SHORT $LN85@assign@3
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN12@assign@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN13@assign@3
$LN12@assign@3:
	mov	eax, esi
$LN13@assign@3:
	cmp	ebx, eax
	jb	SHORT $LN85@assign@3
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN16@assign@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN17@assign@3
$LN16@assign@3:
	mov	eax, esi
$LN17@assign@3:
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	cmp	edx, ebx
	jbe	SHORT $LN85@assign@3
; Line 918
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN20@assign@3
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 918
$LN20@assign@3:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, esi
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
$LN85@assign@3:
	push	edi
; Line 920
	mov	edi, DWORD PTR __Count$[ebp]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN27@assign@3
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN89@assign@3:
$LN27@assign@3:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN26@assign@3
	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN82@assign@3
$LN88@assign@3:
; Line 922
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN72@assign@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN73@assign@3
; Line 920
$LN26@assign@3:
	test	edi, edi
	jne	SHORT $LN88@assign@3
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN65@assign@3
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 925
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 920
$LN65@assign@3:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 922
$LN72@assign@3:
	mov	eax, esi
$LN73@assign@3:
	push	edi
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 923
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN80@assign@3
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 925
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
; Line 923
$LN80@assign@3:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN82@assign@3:
; Line 925
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 926
	pop	ebp
	ret	8
$LN86@assign@3:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; __Right$ = eax
; Line 764
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 765
	ret	0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0
__ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
__Dest$93484 = -48					; size = 4
__Str$93488 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT
; _this$ = ebx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 588
	cmp	DWORD PTR [ebx+68], 0
	je	$LN14@Endwrite
	cmp	BYTE PTR [ebx+73], 0
	je	$LN14@Endwrite
; Line 594
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+12]
	push	-1
	mov	ecx, ebx
	call	edx
	cmp	eax, -1
; Line 595
	je	$LN198@Endwrite
; Line 597
	lea	esi, DWORD PTR __Str$93488[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN197@Endwrite:
	mov	edi, DWORD PTR __Str$93488[ebp+20]
	mov	eax, DWORD PTR __Str$93488[ebp]
$LN11@Endwrite:
; Line 600
	mov	edx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN51@Endwrite
	lea	edx, DWORD PTR __Str$93488[ebp]
	mov	eax, edx
$LN51@Endwrite:
	mov	ecx, DWORD PTR [ebx+68]
	mov	esi, DWORD PTR [ecx]
	lea	edi, DWORD PTR __Dest$93484[ebp]
	push	edi
	mov	edi, DWORD PTR __Str$93488[ebp+16]
	add	edi, edx
	push	edi
	push	eax
	lea	eax, DWORD PTR [ebx+76]
	push	eax
	mov	eax, DWORD PTR [esi+24]
	call	eax
	sub	eax, 0
	je	SHORT $LN7@Endwrite
	dec	eax
	je	SHORT $LN6@Endwrite
	sub	eax, 2
; Line 622
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$93488[ebp]
	je	$LN2@Endwrite
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	xor	al, al
	jmp	$LN13@Endwrite
$LN7@Endwrite:
; Line 603
	mov	BYTE PTR [ebx+73], 0
$LN6@Endwrite:
; Line 607
	mov	edi, DWORD PTR __Str$93488[ebp+20]
	mov	eax, DWORD PTR __Str$93488[ebp]
	mov	edx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN72@Endwrite
	lea	edx, DWORD PTR __Str$93488[ebp]
$LN72@Endwrite:
	mov	esi, DWORD PTR __Dest$93484[ebp]
	sub	esi, edx
; Line 609
	je	SHORT $LN5@Endwrite
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN91@Endwrite
	lea	eax, DWORD PTR __Str$93488[ebp]
$LN91@Endwrite:
	mov	ecx, DWORD PTR [ebx+84]
	push	ecx
	push	esi
	push	1
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
	cmp	esi, eax
	jne	$LN185@Endwrite
	mov	edi, DWORD PTR __Str$93488[ebp+20]
	mov	eax, DWORD PTR __Str$93488[ebp]
$LN5@Endwrite:
; Line 611
	cmp	BYTE PTR [ebx+73], 0
	je	$LN186@Endwrite
; Line 613
	test	esi, esi
	jne	$LN11@Endwrite
; Line 614
	mov	ecx, DWORD PTR __Str$93488[ebp+16]
	or	edx, -1
	sub	edx, ecx
	cmp	edx, 8
	jbe	$LN187@Endwrite
	lea	esi, DWORD PTR [ecx+8]
	cmp	esi, -2					; fffffffeH
	ja	$LN187@Endwrite
	cmp	edi, esi
	jae	SHORT $LN116@Endwrite
	push	ecx
	push	esi
	lea	ecx, DWORD PTR __Str$93488[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edi, DWORD PTR __Str$93488[ebp+20]
	mov	eax, DWORD PTR __Str$93488[ebp]
	test	esi, esi
	je	$LN11@Endwrite
$LN196@Endwrite:
	mov	ecx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN172@Endwrite
	lea	ecx, DWORD PTR __Str$93488[ebp]
$LN172@Endwrite:
	mov	edx, DWORD PTR __Str$93488[ebp+16]
	xor	eax, eax
	mov	DWORD PTR [ecx+edx], eax
	mov	DWORD PTR [ecx+edx+4], eax
	cmp	DWORD PTR __Str$93488[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$93488[ebp]
	mov	DWORD PTR __Str$93488[ebp+16], esi
	jae	SHORT $LN180@Endwrite
	lea	eax, DWORD PTR __Str$93488[ebp]
$LN180@Endwrite:
	mov	BYTE PTR [eax+esi], 0
; Line 623
	jmp	$LN197@Endwrite
; Line 614
$LN116@Endwrite:
	test	esi, esi
	jne	SHORT $LN196@Endwrite
	mov	DWORD PTR __Str$93488[ebp+16], esi
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN156@Endwrite
	lea	eax, DWORD PTR __Str$93488[ebp]
$LN156@Endwrite:
	mov	BYTE PTR [eax], 0
	jmp	$LN197@Endwrite
$LN185@Endwrite:
; Line 610
	lea	ecx, DWORD PTR __Str$93488[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN198@Endwrite:
	xor	al, al
	jmp	SHORT $LN13@Endwrite
$LN186@Endwrite:
; Line 612
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$93488[ebp]
$LN2@Endwrite:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN14@Endwrite:
; Line 589
	mov	al, 1
$LN13@Endwrite:
; Line 625
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN187@Endwrite:
; Line 614
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN199@Endwrite:
$LN192@Endwrite:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0:
	lea	ecx, DWORD PTR __Str$93488[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
; Function compile flags: /Ogtp
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = eax
; Line 292
	push	ebx
	mov	ebx, eax
; Line 294
	xor	ecx, ecx
	push	esi
	mov	esi, ebx
	cmp	DWORD PTR [ebx+84], ecx
	jne	SHORT $LN4@close
; Line 295
	xor	esi, esi
; Line 296
	jmp	SHORT $LN1@close
$LN4@close:
; Line 298
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	jne	SHORT $LN2@close
; Line 299
	xor	esi, esi
$LN2@close:
; Line 300
	mov	eax, DWORD PTR [ebx+84]
	push	eax
	call	_fclose
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@close
; Line 301
	xor	esi, esi
$LN18@close:
	xor	ecx, ecx
$LN1@close:
; Line 303
	lea	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [ebx+16], edx
	lea	edx, DWORD PTR [ebx+24]
	mov	DWORD PTR [ebx+32], edx
	lea	edx, DWORD PTR [ebx+28]
	mov	DWORD PTR [ebx+36], edx
	lea	edx, DWORD PTR [ebx+40]
	mov	DWORD PTR [ebx+48], edx
	mov	BYTE PTR [ebx+80], cl
	mov	BYTE PTR [ebx+73], cl
	lea	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [ebx+20], eax
	lea	edx, DWORD PTR [ebx+44]
	mov	DWORD PTR [ebx+52], edx
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR [ebx+36]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebx+52]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR [ebx+16]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebx+32]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR [ebx+48]
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [eax], ecx
; Line 304
	mov	eax, esi
	pop	esi
	mov	DWORD PTR [ebx+84], ecx
	mov	DWORD PTR [ebx+76], edx
	mov	DWORD PTR [ebx+68], ecx
	pop	ebx
; Line 305
	ret	0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z$0
__ehfuncinfo$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
_TEXT	SEGMENT
__Lock$143259 = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T143235 = 8						; size = 4
_this$ = 8						; size = 4
__Byte$ = 12						; size = 1
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z PROC ; std::basic_ios<char,std::char_traits<char> >::widen, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\ios
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	lea	edi, DWORD PTR $T143235[ebp]
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edi, DWORD PTR $T143235[ebp]
	mov	ebx, eax
	test	edi, edi
	je	SHORT $LN7@widen
	push	0
	lea	ecx, DWORD PTR __Lock$143259[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN9@widen
	cmp	eax, -1
	jae	SHORT $LN9@widen
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN9@widen:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	lea	ecx, DWORD PTR __Lock$143259[ebp]
	not	esi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	esi, edi
	je	SHORT $LN7@widen
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN7@widen:
; Line 126
	mov	ecx, DWORD PTR __Byte$[ebp]
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+24]
	push	ecx
	mov	ecx, ebx
	call	edx
; Line 127
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z$0:
	lea	ecx, DWORD PTR $T143235[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::widen
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
__Reraise$ = 8						; size = 1
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT
; _this$ = ecx
; __State$ = eax
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 44
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN3@clear@2
	or	eax, 4
$LN3@clear@2:
	and	eax, 23					; 00000017H
	mov	DWORD PTR [ecx+12], eax
	test	DWORD PTR [ecx+16], eax
	je	SHORT $LN11@clear@2
	mov	eax, DWORD PTR __Reraise$[ebp]
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN11@clear@2:
	pop	ecx
; Line 45
	pop	ebp
	ret	4
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 929
	push	ebp
	mov	ebp, esp
	push	esi
; Line 931
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@assign@4:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@assign@4
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi
; Line 932
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = esi
; __Right$ = edi
; Line 714
	cmp	esi, edi
	je	SHORT $LN45@assign@5
; Line 721
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN33@assign@5
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN33@assign@5:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
; Line 722
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN2@assign@5
; Line 724
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign@5
$LN2@assign@5:
; Line 727
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
; Line 728
	mov	DWORD PTR [edi], 0
$LN1@assign@5:
; Line 730
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
; Line 731
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
; Line 733
	mov	DWORD PTR [edi+16], 0
; Line 734
	mov	DWORD PTR [edi+20], 0
$LN45@assign@5:
; Line 736
	mov	eax, esi
; Line 737
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
__Fileposition$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 512
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
; Line 513
	mov	eax, DWORD PTR __Pos$[ebp+8]
	push	ebx
	mov	ebx, ecx
	mov	ecx, DWORD PTR __Pos$[ebp+12]
	push	esi
; Line 514
	mov	esi, DWORD PTR __Pos$[ebp]
	mov	DWORD PTR __Fileposition$[esp+24], ecx
; Line 519
	xor	ecx, ecx
	push	edi
	mov	edi, DWORD PTR __Pos$[ebp+4]
	mov	DWORD PTR __Fileposition$[esp+24], eax
	cmp	DWORD PTR [ebx+84], ecx
	je	$LN2@seekpos
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	SHORT $LN16@seekpos
	mov	eax, DWORD PTR [ebx+84]
	lea	edx, DWORD PTR __Fileposition$[esp+24]
	push	edx
	push	eax
	call	_fsetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@seekpos
	mov	ecx, esi
	or	ecx, edi
	je	SHORT $LN1@seekpos
	mov	edx, DWORD PTR [ebx+84]
	push	1
	push	edi
	push	esi
	push	edx
	call	__fseeki64
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN16@seekpos
$LN1@seekpos:
	mov	ecx, DWORD PTR [ebx+84]
	lea	eax, DWORD PTR __Fileposition$[esp+24]
	push	eax
	push	ecx
	call	_fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@seekpos
; Line 522
	mov	edx, DWORD PTR __Pos$[ebp+16]
; Line 524
	mov	eax, ebx
	mov	DWORD PTR [ebx+76], edx
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 525
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[esp+24]
	mov	edx, DWORD PTR __Fileposition$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [ebx+76]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
; Line 527
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN16@seekpos:
; Line 525
	xor	ecx, ecx
$LN2@seekpos:
; Line 520
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB
; Line 527
	pop	edi
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB+4
	pop	esi
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
__Fileposition$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx
; Line 490
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	mov	ebx, ecx
; Line 495
	mov	ecx, DWORD PTR [ebx+32]
	lea	eax, DWORD PTR [ebx+72]
	push	esi
	push	edi
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN21@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN21@seekoff
	cmp	DWORD PTR [ebx+68], 0
	jne	SHORT $LN21@seekoff
; Line 496
	mov	edi, DWORD PTR __Off$[ebp]
	mov	esi, DWORD PTR __Off$[ebp+4]
	add	edi, -1
	adc	esi, -1
	jmp	SHORT $LN5@seekoff
$LN21@seekoff:
	mov	esi, DWORD PTR __Off$[ebp+4]
	mov	edi, DWORD PTR __Off$[ebp]
$LN5@seekoff:
; Line 501
	cmp	DWORD PTR [ebx+84], 0
	je	$LN3@seekoff
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	$LN3@seekoff
	mov	edx, edi
	or	edx, esi
	jne	SHORT $LN1@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	je	SHORT $LN2@seekoff
$LN1@seekoff:
	mov	eax, DWORD PTR __Way$[ebp]
	mov	ecx, DWORD PTR [ebx+84]
	push	eax
	push	esi
	push	edi
	push	ecx
	call	__fseeki64
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN3@seekoff
$LN2@seekoff:
	mov	eax, DWORD PTR [ebx+84]
	lea	edx, DWORD PTR __Fileposition$[esp+24]
	push	edx
	push	eax
	call	_fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@seekoff
; Line 504
	mov	ecx, DWORD PTR [ebx+16]
	lea	eax, DWORD PTR [ebx+72]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN17@seekoff
	mov	edx, DWORD PTR [ebx+60]
	mov	eax, DWORD PTR [ebx+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [ebx+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [ebx+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN17@seekoff:
; Line 505
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[esp+24]
	mov	edx, DWORD PTR __Fileposition$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [ebx+76]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
; Line 507
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN3@seekoff:
; Line 502
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3_JB+4
	mov	edx, DWORD PTR ?_BADOFF@std@@3_JB
; Line 507
	pop	edi
	mov	DWORD PTR [eax+4], ecx
	xor	ecx, ecx
	pop	esi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$1
__ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Lock$143545 = -20					; size = 4
$T143532 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 143
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 144
	cmp	DWORD PTR [esi+84], 0
	je	SHORT $LN11@basic_file
; Line 145
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], edx
	jne	SHORT $LN11@basic_file
	mov	edx, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN11@basic_file:
; Line 146
	cmp	BYTE PTR [esi+80], 0
	je	SHORT $LN1@basic_file
; Line 147
	mov	eax, esi
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@basic_file:
; Line 148
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR [esi+56]
	mov	DWORD PTR $T143532[ebp], eax
	test	eax, eax
	je	SHORT $LN18@basic_file
	mov	ebx, DWORD PTR [eax]
	test	ebx, ebx
	je	SHORT $LN24@basic_file
	push	0
	lea	ecx, DWORD PTR __Lock$143545[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN26@basic_file
	cmp	eax, -1
	jae	SHORT $LN26@basic_file
	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN26@basic_file:
	mov	edi, DWORD PTR [ebx+4]
	neg	edi
	sbb	edi, edi
	lea	ecx, DWORD PTR __Lock$143545[ebp]
	not	edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	and	edi, ebx
	je	SHORT $LN30@basic_file
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, edi
	call	edx
$LN30@basic_file:
	mov	eax, DWORD PTR $T143532[ebp]
$LN24@basic_file:
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN18@basic_file:
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\istream
xdata$x	SEGMENT
__unwindtable$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 845
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR [ecx-104]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-104], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
; Line 846
	lea	esi, DWORD PTR [ecx-88]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	eax, DWORD PTR [esi-16]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi-16], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Reraise$ = 12						; size = 1
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\ios
; Line 54
	push	ebp
	mov	ebp, esp
; Line 56
	mov	eax, DWORD PTR [ecx+12]
	or	eax, DWORD PTR __State$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN11@setstate
	or	eax, 4
$LN11@setstate:
	and	eax, 23					; 00000017H
	mov	DWORD PTR [ecx+12], eax
	test	DWORD PTR [ecx+16], eax
	je	SHORT $LN19@setstate
	mov	eax, DWORD PTR __Reraise$[ebp]
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN19@setstate:
; Line 57
	pop	ebp
	ret	8
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT
; _this$ = esi
; File d:\microsoft visual studio 10.0\vc\include\ostream
; Line 572
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	push	edi
	xor	edi, edi
	test	BYTE PTR [eax+esi+12], 6
	jne	SHORT $LN1@flush
	mov	eax, DWORD PTR [eax+esi+56]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN1@flush
; Line 573
	mov	edi, 4
$LN1@flush:
; Line 574
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN35@flush
	mov	eax, DWORD PTR [ecx+12]
	or	eax, edi
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN19@flush
	or	eax, 4
$LN19@flush:
	and	eax, 23					; 00000017H
	mov	DWORD PTR [ecx+12], eax
	test	DWORD PTR [ecx+16], eax
	je	SHORT $LN35@flush
	push	0
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN35@flush:
; Line 575
	mov	eax, esi
; Line 576
	pop	edi
	ret	0
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; __Ptr$ = edx
; File d:\microsoft visual studio 10.0\vc\include\xstring
; Line 768
	push	ebp
	mov	ebp, esp
; Line 769
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	7
$LL7@operator@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL7@operator@2
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, esi
	push	eax
	push	edx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
; Line 770
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = esi
; __Right$ = edi
; Line 709
	cmp	esi, edi
	je	SHORT $LN49@operator@3
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN37@operator@3
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@operator@3:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN6@operator@3
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@operator@3
$LN6@operator@3:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [edi], 0
$LN5@operator@3:
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
	mov	DWORD PTR [edi+16], 0
	mov	DWORD PTR [edi+20], 0
$LN49@operator@3:
	mov	eax, esi
; Line 710
	ret	0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = esi
; __Right$ = edi
; Line 702
	push	ebx
; Line 703
	xor	ebx, ebx
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], ebx
	mov	BYTE PTR [esi], bl
; Line 704
	cmp	esi, edi
	je	SHORT $LN75@basic_stri@3
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN63@basic_stri@3
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN63@basic_stri@3:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], ebx
	mov	BYTE PTR [esi], bl
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN32@basic_stri@3
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN31@basic_stri@3
$LN32@basic_stri@3:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [edi], ebx
$LN31@basic_stri@3:
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
	mov	DWORD PTR [edi+16], ebx
	mov	DWORD PTR [edi+20], ebx
$LN75@basic_stri@3:
; Line 705
	mov	eax, esi
	pop	ebx
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
; Line 594
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, edx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
$LL31@basic_stri@4:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL31@basic_stri@4
	sub	eax, edi
	push	eax
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
; Line 595
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ$0
__ehfuncinfo$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T144186 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR [ecx]
	lea	esi, DWORD PTR [ecx+104]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T144186[ebp], esi
	mov	DWORD PTR [ecx+esi-104], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	lea	ecx, DWORD PTR [esi-88]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR [esi-104]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+esi-104], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ$0:
	mov	ecx, DWORD PTR $T144186[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	_value$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z ; CMap::GetTxtMapValue
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z$1
__ehfuncinfo$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z
_TEXT	SEGMENT
_value$GSCopy$ = -48					; size = 4
$T91502 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 28
_value$ = 36						; size = 4
?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z PROC ; CMap::GetTxtMapValue, COMDAT
; _keywords$ = ecx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cmap.cpp
; Line 52
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _value$[ebp]
; Line 58
	mov	DWORD PTR _value$GSCopy$[ebp], eax
	xor	ebx, ebx
	mov	eax, ecx
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	lea	esi, DWORD PTR [eax+1]
	npad	5
$LL76@GetTxtMapV@2:
; Line 54
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL76@GetTxtMapV@2
	sub	eax, esi
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 55
	mov	edi, 16					; 00000010H
	cmp	eax, -1
	je	$LN50@GetTxtMapV@2
; Line 57
	push	1
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 58
	mov	ecx, DWORD PTR _str$[ebp]
	cmp	DWORD PTR _str$[ebp+20], edi
	jae	SHORT $LN19@GetTxtMapV@2
	lea	ecx, DWORD PTR _str$[ebp]
$LN19@GetTxtMapV@2:
	lea	esi, DWORD PTR [ecx+1]
$LL77@GetTxtMapV@2:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	cmp	dl, bl
	jne	SHORT $LL77@GetTxtMapV@2
	sub	ecx, esi
	push	ecx
	lea	ecx, DWORD PTR [eax+1]
	lea	esi, DWORD PTR $T91502[ebp]
	lea	edx, DWORD PTR _str$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR [eax+20], edi
	jb	SHORT $LN24@GetTxtMapV@2
	mov	edx, DWORD PTR [eax]
	jmp	SHORT $LN25@GetTxtMapV@2
$LN24@GetTxtMapV@2:
	mov	edx, eax
$LN25@GetTxtMapV@2:
	mov	eax, edx
	lea	esi, DWORD PTR [eax+1]
	npad	4
$LL78@GetTxtMapV@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL78@GetTxtMapV@2
	mov	ecx, DWORD PTR _value$GSCopy$[ebp]
	sub	eax, esi
	push	eax
	push	edx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[ebp+8], bl
	cmp	DWORD PTR $T91502[ebp+20], edi
	jb	SHORT $LN42@GetTxtMapV@2
	mov	eax, DWORD PTR $T91502[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@GetTxtMapV@2:
	mov	DWORD PTR $T91502[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91502[ebp+16], ebx
	mov	BYTE PTR $T91502[ebp], bl
$LN50@GetTxtMapV@2:
; Line 60
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _str$[ebp+20], edi
	jb	SHORT $LN64@GetTxtMapV@2
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@GetTxtMapV@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z$1:
	lea	ecx, DWORD PTR $T91502[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z ENDP ; CMap::GetTxtMapValue
; Function compile flags: /Ogtp
;	COMDAT ?clear@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT
?clear@ios_base@std@@QAEXH@Z PROC			; std::ios_base::clear, COMDAT
; _this$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
; Line 325
	push	ecx
; Line 326
	xor	al, al
	mov	DWORD PTR [ecx+12], 0
	je	SHORT $LN9@clear@3
	push	0
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN9@clear@3:
	pop	ecx
; Line 327
	ret	0
?clear@ios_base@std@@QAEXH@Z ENDP			; std::ios_base::clear
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@$$QAV10@@Z
_TEXT	SEGMENT
$T144466 = -4						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@$$QAV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; ___$ReturnUdt$ = edi
; __Left$ = eax
; __Right$ = ecx
; File d:\microsoft visual studio 10.0\vc\include\string
; Line 92
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 93
	mov	ebx, eax
	mov	esi, ecx
	mov	DWORD PTR $T144466[ebp], 0
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	xor	ebx, ebx
	mov	esi, eax
	mov	DWORD PTR [edi+20], 15			; 0000000fH
	mov	DWORD PTR [edi+16], ebx
	mov	BYTE PTR [edi], bl
	cmp	edi, esi
	je	SHORT $LN83@operator@4
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN71@operator@4
	mov	eax, DWORD PTR [edi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@operator@4:
	mov	DWORD PTR [edi+20], 15			; 0000000fH
	mov	DWORD PTR [edi+16], ebx
	mov	BYTE PTR [edi], bl
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jae	SHORT $LN40@operator@4
	mov	ecx, DWORD PTR [esi+16]
	inc	ecx
	push	ecx
	push	esi
	push	edi
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN39@operator@4
$LN40@operator@4:
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [edi], edx
	mov	DWORD PTR [esi], ebx
$LN39@operator@4:
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [edi+16], eax
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [edi+20], ecx
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi+20], ebx
$LN83@operator@4:
	pop	esi
	mov	eax, edi
	pop	ebx
; Line 94
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@$$QAV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Ipfx, COMDAT
; _this$ = edi
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 116
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 117
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+edi+12]
	add	ecx, edi
	test	eax, eax
	jne	SHORT $LN1@Ipfx
; Line 119
	mov	ecx, DWORD PTR [ecx+60]
	test	ecx, ecx
	je	SHORT $LL7@Ipfx
; Line 120
	mov	esi, ecx
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LL7@Ipfx:
; Line 141
	mov	edx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, edi
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN1@Ipfx
; Line 142
	mov	al, 1
; Line 146
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@Ipfx:
; Line 144
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 2
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN108@Ipfx
	or	eax, 4
$LN108@Ipfx:
	and	eax, 23					; 00000017H
	mov	DWORD PTR [ecx+12], eax
	test	DWORD PTR [ecx+16], eax
	je	SHORT $LN116@Ipfx
	push	0
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN116@Ipfx:
; Line 145
	xor	al, al
; Line 146
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
; Function compile flags: /Ogtp
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@22
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@22:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0
__ehfuncinfo$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
$T145122 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	lea	ebx, DWORD PTR [ecx-104]
	lea	esi, DWORD PTR [ebx+104]
	mov	eax, esi
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T145122[ebp], eax
	mov	DWORD PTR [edx+eax-104], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	lea	edi, DWORD PTR [eax-88]
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR [edi-16]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+edi-16], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN17@scalar@23
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN17@scalar@23:
	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0:
	mov	ecx, DWORD PTR $T145122[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0
__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Istr$ = 12						; size = 4
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 99
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN4@sentry@2
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN4@sentry@2:
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 100
	mov	edi, DWORD PTR [esi]
	call	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
	mov	BYTE PTR [esi+4], al
; Line 101
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Ogtp
;	COMDAT ?_Init@ios_base@std@@IAEXXZ
_TEXT	SEGMENT
__Lock$145237 = -8					; size = 4
$T145233 = -4						; size = 4
?_Init@ios_base@std@@IAEXXZ PROC			; std::ios_base::_Init, COMDAT
; _this$ = esi
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
; Line 554
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	push	edi
; Line 555
	xor	edi, edi
; Line 564
	push	4
	mov	DWORD PTR [esi+48], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 513			; 00000201H
	mov	DWORD PTR [esi+24], 6
	mov	DWORD PTR [esi+28], edi
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	mov	DWORD PTR [esi+44], edi
	mov	DWORD PTR [esi+12], edi
	call	??2@YAPAXI@Z				; operator new
	mov	ebx, eax
	add	esp, 4
	cmp	ebx, edi
	je	SHORT $LN3@Init@2
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [ebx], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	edi
	lea	ecx, DWORD PTR __Lock$145237[ebp]
	mov	DWORD PTR $T145233[ebp], eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	ecx, DWORD PTR $T145233[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, -1
	jae	SHORT $LN22@Init@2
	inc	eax
	mov	DWORD PTR [ecx+4], eax
$LN22@Init@2:
	lea	ecx, DWORD PTR __Lock$145237[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	DWORD PTR [esi+48], ebx
; Line 565
	pop	edi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@Init@2:
; Line 564
	mov	DWORD PTR [esi+48], edi
; Line 565
	pop	edi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Init@ios_base@std@@IAEXXZ ENDP			; std::ios_base::_Init
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z
_TEXT	SEGMENT
__Strbuf$ = 8						; size = 4
?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::init, COMDAT
; _this$ = eax
; File d:\microsoft visual studio 10.0\vc\include\ios
; Line 154
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, eax
; Line 155
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
; Line 156
	mov	eax, DWORD PTR __Strbuf$[ebp]
; Line 158
	push	32					; 00000020H
	push	esi
	mov	DWORD PTR [esi+56], eax
	mov	DWORD PTR [esi+60], 0
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
; Line 160
	cmp	DWORD PTR [esi+56], 0
	mov	BYTE PTR [esi+64], al
	jne	SHORT $LN1@init
; Line 161
	mov	eax, DWORD PTR [esi+12]
	or	eax, 4
	and	eax, 23					; 00000017H
	mov	DWORD PTR [esi+12], eax
	test	DWORD PTR [esi+16], eax
	je	SHORT $LN1@init
	push	0
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN1@init:
; Line 165
	pop	esi
	pop	ebp
	ret	4
?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::init
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$0
__tryblocktable$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$5
__ehfuncinfo$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z
_TEXT	SEGMENT
__Ok$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Str$ = 12						; size = 4
__Delim$ = 16						; size = 1
?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z PROC ; std::basic_istream<char,std::char_traits<char> >::getline, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 628
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR __Str$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
; Line 655
	xor	eax, eax
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], eax
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+edi+56]
	xor	esi, esi
	mov	DWORD PTR __Count$[ebp], 2048		; 00000800H
	mov	DWORD PTR __State$[ebp], eax
	mov	DWORD PTR __Ok$[ebp], edi
	cmp	ecx, eax
	je	SHORT $LN24@getline
; Line 632
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	xor	eax, eax
$LN24@getline:
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	call	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
	mov	BYTE PTR __Ok$[ebp+4], al
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 634
	test	al, al
	je	$LN20@getline
; Line 638
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 639
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+edi+56]
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN39@getline
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN39@getline
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LL129@getline
$LN39@getline:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+24]
	call	edx
$LL129@getline:
; Line 642
	cmp	eax, -1
	jne	SHORT $LN6@getline
; Line 644
	or	DWORD PTR __State$[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	$LN20@getline
$LN6@getline:
; Line 647
	movzx	ecx, BYTE PTR __Delim$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN4@getline
; Line 649
	add	DWORD PTR [edi+8], 1
; Line 650
	mov	eax, DWORD PTR [edi]
	adc	DWORD PTR [edi+12], 0
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+edi+56]
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN59@getline
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN59@getline
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	inc	DWORD PTR [ecx]
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	$LN20@getline
$LN59@getline:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT $LN20@getline
$LN4@getline:
; Line 653
	add	DWORD PTR __Count$[ebp], -1
	adc	esi, -1
	test	esi, esi
	jg	SHORT $LN2@getline
	jl	SHORT $LN130@getline
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN2@getline
$LN130@getline:
; Line 655
	or	DWORD PTR __State$[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT $LN20@getline
$LN2@getline:
; Line 660
	add	DWORD PTR [edi+8], 1
	adc	DWORD PTR [edi+12], 0
; Line 661
	mov	BYTE PTR [ebx], al
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+edi+56]
	inc	ebx
	mov	DWORD PTR __Str$[ebp], ebx
	call	?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::snextc
	jmp	$LL129@getline
__catch$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$0:
; Line 663
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	or	eax, 4
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN78@getline
	or	eax, 4
$LN78@getline:
	and	eax, 23					; 00000017H
	mov	DWORD PTR [ecx+12], eax
	test	DWORD PTR [ecx+16], eax
	je	SHORT $LN86@getline
	push	1
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN86@getline:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN134@getline
	ret	0
$LN134@getline:
	mov	edi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR __Str$[ebp]
$LN20@getline:
; Line 667
	mov	eax, DWORD PTR __State$[ebp]
	mov	BYTE PTR [ebx], 0
	mov	edx, DWORD PTR [edi+8]
	or	edx, DWORD PTR [edi+12]
	jne	SHORT $LN15@getline
	or	eax, 2
$LN15@getline:
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, edi
	test	eax, eax
	je	SHORT $LN108@getline
	or	eax, DWORD PTR [ecx+12]
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN100@getline
	or	eax, 4
$LN100@getline:
	and	eax, 23					; 00000017H
	mov	DWORD PTR [ecx+12], eax
	test	DWORD PTR [ecx+16], eax
	je	SHORT $LN108@getline
	push	0
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN108@getline:
; Line 668
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx+eax+56]
	test	ecx, ecx
	je	SHORT $LN132@getline
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN132@getline:
	mov	eax, edi
; Line 669
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$3:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__ehhandler$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::getline
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
_TEXT	SEGMENT
$T145659 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Strbuf$ = 12						; size = 4
??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::basic_istream<char,std::char_traits<char> >, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 33
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR $T145659[ebp], ebx
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+ecx], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
; Line 34
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [edi+8], ebx
	mov	DWORD PTR [edi+12], ebx
	mov	esi, DWORD PTR [edx+4]
	add	esi, edi
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	mov	eax, DWORD PTR __Strbuf$[ebp]
	push	32					; 00000020H
	push	esi
	mov	DWORD PTR [esi+56], eax
	mov	DWORD PTR [esi+60], ebx
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	mov	BYTE PTR [esi+64], al
	cmp	DWORD PTR [esi+56], ebx
	jne	SHORT $LN37@basic_istr
	mov	eax, DWORD PTR [esi+12]
	or	eax, 4
	and	eax, 23					; 00000017H
	mov	DWORD PTR [esi+12], eax
	test	DWORD PTR [esi+16], eax
	je	SHORT $LN37@basic_istr
	push	ebx
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN37@basic_istr:
; Line 35
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::basic_istream<char,std::char_traits<char> >
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2
__ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
_TEXT	SEGMENT
$T145793 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Filename$ = 12					; size = 4
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\fstream
; Line 714
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[ebp]
	xor	eax, eax
	mov	DWORD PTR $T145793[ebp], eax
	mov	DWORD PTR [edi], OFFSET ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR [edi+104], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edi+edx], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], eax
	mov	eax, DWORD PTR [edi]
	mov	esi, DWORD PTR [eax+4]
	add	esi, edi
	mov	DWORD PTR $T145793[ebp], 1
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	push	32					; 00000020H
	lea	ebx, DWORD PTR [edi+16]
	push	esi
	mov	DWORD PTR [esi+56], ebx
	mov	DWORD PTR [esi+60], 0
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	cmp	DWORD PTR [esi+56], 0
	mov	BYTE PTR [esi+64], al
	jne	SHORT $LN41@basic_ifst
	mov	eax, DWORD PTR [esi+12]
	or	eax, 4
	or	eax, 4
	and	eax, 23					; 00000017H
	mov	DWORD PTR [esi+12], eax
	test	DWORD PTR [esi+16], eax
	je	SHORT $LN41@basic_ifst
	push	0
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN41@basic_ifst:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	mov	esi, ebx
	mov	DWORD PTR [edi+edx], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	call	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
; Line 715
	mov	eax, DWORD PTR __Filename$[ebp]
	push	eax
	mov	ecx, ebx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN71@basic_ifst
; Line 716
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx+edi+12]
	add	ecx, edi
	or	eax, 2
	cmp	DWORD PTR [ecx+56], 0
	jne	SHORT $LN55@basic_ifst
	or	eax, 4
$LN55@basic_ifst:
	and	eax, 23					; 00000017H
	mov	DWORD PTR [ecx+12], eax
	test	DWORD PTR [ecx+16], eax
	je	SHORT $LN71@basic_ifst
	push	0
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN71@basic_ifst:
; Line 717
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0:
	mov	eax, DWORD PTR $T145793[ebp]
	and	eax, 1
	je	$LN6@basic_ifst
	and	DWORD PTR $T145793[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN6@basic_ifst:
	ret	0
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_J@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_J@Z PROC ; std::basic_istream<char,std::char_traits<char> >::getline, COMDAT
; _this$ = esi
; File d:\microsoft visual studio 10.0\vc\include\istream
; Line 622
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 623
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	10					; 0000000aH
	add	ecx, esi
	push	ecx
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	movzx	edx, al
	mov	eax, DWORD PTR __Str$[ebp]
	push	edx
	push	eax
	push	esi
	call	?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z ; std::basic_istream<char,std::char_traits<char> >::getline
	pop	ecx
; Line 624
	pop	ebp
	ret	4
?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_J@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::getline
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?LoadTxtMap@CMap@@QAEXPBD@Z			; CMap::LoadTxtMap
;	COMDAT xdata$x
; File d:\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?LoadTxtMap@CMap@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$24
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$27
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$12
	DD	06H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$13
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$17
	DD	08H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$18
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$21
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$29
__ehfuncinfo$?LoadTxtMap@CMap@@QAEXPBD@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?LoadTxtMap@CMap@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?LoadTxtMap@CMap@@QAEXPBD@Z
_TEXT	SEGMENT
_infile$ = -372						; size = 176
__Lock$146590 = -192					; size = 4
$T146581 = -188						; size = 4
_pos$ = -188						; size = 4
_this$GSCopy$ = -184					; size = 4
$T146578 = -180						; size = 1
$T149784 = -180						; size = 4
$T149783 = -180						; size = 4
$T149957 = -180						; size = 4
$T146233 = -180						; size = 4
_gid$91948 = -180					; size = 4
tv372 = -180						; size = 4
_startReadMapBack$ = -174				; size = 1
_startReadMapBarrier$ = -173				; size = 1
$T146094 = -172						; size = 4
_t_row$ = -172						; size = 4
tv4914 = -168						; size = 4
tv4890 = -168						; size = 4
tv4827 = -168						; size = 4
_t_col$ = -168						; size = 4
tv347 = -168						; size = 4
tv283 = -168						; size = 4
$T146074 = -168						; size = 4
$T146069 = -168						; size = 4
$T146067 = -168						; size = 4
$T146066 = -168						; size = 4
$T146065 = -168						; size = 4
$T146064 = -168						; size = 4
$T146063 = -168						; size = 4
$T149042 = -164						; size = 1
$T149412 = -164						; size = 1
$T146075 = -164						; size = 1
$T146073 = -164						; size = 1
$T146070 = -164						; size = 1
$T146068 = -164						; size = 1
_str$ = -160						; size = 28
$T91952 = -132						; size = 28
$T91951 = -132						; size = 28
$T91950 = -132						; size = 28
$T91949 = -132						; size = 28
$T91933 = -132						; size = 28
$T91921 = -132						; size = 28
_mapbarrier$ = -104					; size = 28
_mapback$ = -76						; size = 28
$T91932 = -48						; size = 28
$T91929 = -48						; size = 28
$T91922 = -48						; size = 28
$T91856 = -48						; size = 28
$T91853 = -48						; size = 28
$T91846 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_txtmap_path$ = 8					; size = 4
?LoadTxtMap@CMap@@QAEXPBD@Z PROC			; CMap::LoadTxtMap, COMDAT
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cmap.cpp
; Line 161
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadTxtMap@CMap@@QAEXPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 230
	mov	ecx, DWORD PTR ?map@@3PAVCMap@@A	; map
	mov	eax, DWORD PTR _txtmap_path$[ebp]
	xor	edi, edi
	mov	ebx, 15					; 0000000fH
	mov	DWORD PTR $T146094[ebp], edi
	mov	DWORD PTR _this$GSCopy$[ebp], ecx
	mov	DWORD PTR _str$[ebp+20], ebx
	mov	DWORD PTR _str$[ebp+16], edi
	mov	BYTE PTR _str$[ebp], 0
	push	eax
	lea	edx, DWORD PTR _infile$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _infile$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _infile$[ebp+ecx+12]
	test	al, 6
	je	SHORT $LN13@LoadTxtMap
; Line 166
	push	OFFSET ??_C@_0BL@LPBPKMDE@?6?$CK?$CKOpen?5Map?5File?5Error?$CB?$CK?$CK?6?$AA@
	call	DWORD PTR __imp__OutputDebugStringA@4
; Line 168
	mov	eax, DWORD PTR _infile$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR _infile$[ebp+104]
	mov	DWORD PTR $T146233[ebp], edx
	mov	DWORD PTR _infile$[ebp+ecx], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	lea	ecx, DWORD PTR _infile$[ebp+16]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _infile$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR _infile$[ebp+104]
	mov	DWORD PTR _infile$[ebp+eax], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	ecx
	jmp	$LN1202@LoadTxtMap
$LN13@LoadTxtMap:
; Line 170
	push	2048					; 00000800H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	esi, eax
; Line 172
	mov	DWORD PTR _mapback$[ebp+20], ebx
	mov	DWORD PTR _mapback$[ebp+16], edi
	mov	BYTE PTR _mapback$[ebp], 0
; Line 173
	mov	DWORD PTR _mapbarrier$[ebp+20], ebx
	mov	DWORD PTR _mapbarrier$[ebp+16], edi
	mov	BYTE PTR _mapbarrier$[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 178
	mov	edx, DWORD PTR _infile$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _infile$[ebp+eax+12]
	mov	BYTE PTR _startReadMapBack$[ebp], 0
	mov	BYTE PTR _startReadMapBarrier$[ebp], 0
	test	cl, 1
	jne	$LN11@LoadTxtMap
$LN12@LoadTxtMap:
; Line 180
	lea	eax, DWORD PTR _infile$[ebp+eax]
	lea	edi, DWORD PTR $T146581[ebp]
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	ebx, eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR $T146581[ebp]
	test	eax, eax
	je	SHORT $LN181@LoadTxtMap
	push	0
	lea	ecx, DWORD PTR __Lock$146590[ebp]
	mov	edi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN183@LoadTxtMap
	cmp	eax, -1
	jae	SHORT $LN183@LoadTxtMap
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN183@LoadTxtMap:
	mov	eax, edi
	mov	edi, DWORD PTR [eax+4]
	neg	edi
	sbb	edi, edi
	not	edi
	lea	ecx, DWORD PTR __Lock$146590[ebp]
	and	edi, eax
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	edi, edi
	je	SHORT $LN181@LoadTxtMap
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, edi
	call	edx
$LN181@LoadTxtMap:
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+24]
	push	10					; 0000000aH
	mov	ecx, ebx
	call	edx
	mov	BYTE PTR $T146578[ebp], al
	mov	eax, DWORD PTR $T146578[ebp]
	push	eax
	push	esi
	lea	ecx, DWORD PTR _infile$[ebp]
	push	ecx
	call	?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_JD@Z ; std::basic_istream<char,std::char_traits<char> >::getline
; Line 181
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	eax, esi
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR $T146063[ebp], esp
	mov	BYTE PTR [ecx], 0
	lea	edi, DWORD PTR [eax+1]
	npad	7
$LL1175@LoadTxtMap:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL1175@LoadTxtMap
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	edi, DWORD PTR _this$GSCopy$[ebp]
	lea	ebx, DWORD PTR [edi+64]
	mov	ecx, OFFSET ??_C@_09MCCEOMFC@map_width?$AA@
	call	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z ; CMap::GetTxtMapValue
; Line 182
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	eax, esi
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR $T146064[ebp], esp
	mov	BYTE PTR [ecx], 0
	lea	edx, DWORD PTR [eax+1]
$LL1176@LoadTxtMap:
	mov	bl, BYTE PTR [eax]
	inc	eax
	test	bl, bl
	jne	SHORT $LL1176@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ebx, DWORD PTR [edi+68]
	mov	ecx, OFFSET ??_C@_0L@JCJMLIFK@map_height?$AA@
	call	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z ; CMap::GetTxtMapValue
; Line 183
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	eax, esi
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR $T146065[ebp], esp
	mov	BYTE PTR [ecx], 0
	lea	edx, DWORD PTR [eax+1]
$LL1177@LoadTxtMap:
	mov	bl, BYTE PTR [eax]
	inc	eax
	test	bl, bl
	jne	SHORT $LL1177@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ebx, DWORD PTR [edi+52]
	mov	ecx, OFFSET ??_C@_0L@MICNGMNL@tile_width?$AA@
	call	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z ; CMap::GetTxtMapValue
; Line 184
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	eax, esi
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR $T146066[ebp], esp
	mov	BYTE PTR [ecx], 0
	lea	edx, DWORD PTR [eax+1]
$LL1178@LoadTxtMap:
	mov	bl, BYTE PTR [eax]
	inc	eax
	test	bl, bl
	jne	SHORT $LL1178@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ebx, DWORD PTR [edi+56]
	mov	ecx, OFFSET ??_C@_0M@GPCIKFO@tile_height?$AA@
	call	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAH@Z ; CMap::GetTxtMapValue
; Line 185
	add	edi, 24					; 00000018H
	push	edi
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	xor	ebx, ebx
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR $T146067[ebp], esp
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], ebx
	mov	edi, OFFSET ??_C@_0L@KKAMNNMB@image_path?$AA@
	mov	BYTE PTR [ecx], bl
	mov	DWORD PTR tv4914[ebp], edx
	npad	6
$LL1179@LoadTxtMap:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL1179@LoadTxtMap
	sub	eax, DWORD PTR tv4914[ebp]
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, edi
	call	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z ; CMap::GetTxtMapValue
; Line 187
	mov	eax, esi
	mov	DWORD PTR $T91846[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91846[ebp+16], ebx
	mov	BYTE PTR $T91846[ebp], bl
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL1180@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1180@LoadTxtMap
	sub	eax, edi
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T91846[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	4
	push	OFFSET ??_C@_04JFCNHLLM@back?$AA@
	lea	eax, DWORD PTR $T91846[ebp]
	push	eax
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	cmp	eax, -1
	setne	BYTE PTR $T146068[ebp]
	cmp	DWORD PTR $T91846[ebp+20], 16		; 00000010H
	jb	SHORT $LN383@LoadTxtMap
	mov	ecx, DWORD PTR $T91846[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN383@LoadTxtMap:
	cmp	BYTE PTR $T146068[ebp], bl
	je	SHORT $LN10@LoadTxtMap
; Line 189
	lea	edx, DWORD PTR _mapback$[ebp]
	push	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR $T146069[ebp], esp
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], ebx
	mov	edi, OFFSET ??_C@_04JFCNHLLM@back?$AA@
	mov	BYTE PTR [ecx], bl
	mov	DWORD PTR tv4890[ebp], edx
$LL1181@LoadTxtMap:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL1181@LoadTxtMap
	sub	eax, DWORD PTR tv4890[ebp]
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, edi
	call	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z ; CMap::GetTxtMapValue
; Line 190
	mov	BYTE PTR _startReadMapBack$[ebp], 1
; Line 191
	mov	BYTE PTR _startReadMapBarrier$[ebp], bl
; Line 193
	jmp	SHORT $LN1173@LoadTxtMap
$LN10@LoadTxtMap:
	cmp	BYTE PTR _startReadMapBack$[ebp], 1
	jne	$LN591@LoadTxtMap
$LN1173@LoadTxtMap:
; Line 195
	mov	edi, 15					; 0000000fH
	mov	eax, esi
	mov	DWORD PTR $T91853[ebp+20], edi
	mov	DWORD PTR $T91853[ebp+16], ebx
	mov	BYTE PTR $T91853[ebp], bl
	lea	edx, DWORD PTR [eax+1]
	npad	4
$LL1182@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1182@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T91853[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	or	DWORD PTR $T146094[ebp], 1
	push	1
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	lea	eax, DWORD PTR $T91853[ebp]
	push	eax
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	cmp	eax, -1
	jne	SHORT $LN16@LoadTxtMap
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL1183@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1183@LoadTxtMap
	sub	eax, edx
	mov	BYTE PTR $T146070[ebp], 1
	jne	SHORT $LN17@LoadTxtMap
$LN16@LoadTxtMap:
	mov	BYTE PTR $T146070[ebp], bl
$LN17@LoadTxtMap:
	test	BYTE PTR $T146094[ebp], 1
	je	SHORT $LN469@LoadTxtMap
	and	DWORD PTR $T146094[ebp], -2		; fffffffeH
	cmp	DWORD PTR $T91853[ebp+20], 16		; 00000010H
	jb	SHORT $LN469@LoadTxtMap
	mov	ecx, DWORD PTR $T91853[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN469@LoadTxtMap:
	cmp	BYTE PTR $T146070[ebp], bl
	je	$LN591@LoadTxtMap
; Line 197
	mov	eax, esi
	mov	DWORD PTR $T91856[ebp+20], edi
	mov	DWORD PTR $T91856[ebp+16], ebx
	mov	BYTE PTR $T91856[ebp], bl
	lea	edx, DWORD PTR [eax+1]
$LL1184@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1184@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T91856[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T91856[ebp]
	lea	eax, DWORD PTR _mapback$[ebp]
	lea	edi, DWORD PTR $T91921[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	edi, eax
	lea	edx, DWORD PTR _mapback$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	edx, edi
	je	SHORT $LN517@LoadTxtMap
	cmp	DWORD PTR _mapback$[ebp+20], 16		; 00000010H
	jb	SHORT $LN547@LoadTxtMap
	mov	eax, DWORD PTR _mapback$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN547@LoadTxtMap:
	mov	DWORD PTR _mapback$[ebp+20], 15		; 0000000fH
	mov	DWORD PTR _mapback$[ebp+16], ebx
	mov	BYTE PTR _mapback$[ebp], bl
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN516@LoadTxtMap
	mov	eax, DWORD PTR [edi+16]
	inc	eax
	push	eax
	lea	ecx, DWORD PTR _mapback$[ebp]
	push	edi
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN515@LoadTxtMap
$LN516@LoadTxtMap:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR _mapback$[ebp], edx
	mov	DWORD PTR [edi], ebx
$LN515@LoadTxtMap:
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR _mapback$[ebp+16], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR _mapback$[ebp+20], ecx
	mov	DWORD PTR [edi+16], ebx
	mov	DWORD PTR [edi+20], ebx
$LN517@LoadTxtMap:
	mov	edi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T91921[ebp+20], edi
	jb	SHORT $LN569@LoadTxtMap
	mov	edx, DWORD PTR $T91921[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN569@LoadTxtMap:
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	DWORD PTR $T91921[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91921[ebp+16], ebx
	mov	BYTE PTR $T91921[ebp], bl
	cmp	DWORD PTR $T91856[ebp+20], edi
	jb	SHORT $LN591@LoadTxtMap
	mov	eax, DWORD PTR $T91856[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN591@LoadTxtMap:
; Line 202
	mov	eax, esi
	mov	DWORD PTR $T91922[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91922[ebp+16], ebx
	mov	BYTE PTR $T91922[ebp], bl
	lea	edx, DWORD PTR [eax+1]
$LL1185@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1185@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T91922[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	7
	push	OFFSET ??_C@_07PFBBHFFC@barrier?$AA@
	lea	ecx, DWORD PTR $T91922[ebp]
	push	ecx
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	cmp	eax, -1
	setne	BYTE PTR $T146073[ebp]
	cmp	DWORD PTR $T91922[ebp+20], 16		; 00000010H
	jb	SHORT $LN647@LoadTxtMap
	mov	edx, DWORD PTR $T91922[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN647@LoadTxtMap:
	cmp	BYTE PTR $T146073[ebp], bl
	je	SHORT $LN7@LoadTxtMap
; Line 204
	lea	eax, DWORD PTR _mapbarrier$[ebp]
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR $T146074[ebp], esp
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], ebx
	mov	edi, OFFSET ??_C@_07PFBBHFFC@barrier?$AA@
	mov	BYTE PTR [ecx], bl
	mov	DWORD PTR tv4827[ebp], edx
$LL1186@LoadTxtMap:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL1186@LoadTxtMap
	sub	eax, DWORD PTR tv4827[ebp]
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, edi
	call	?GetTxtMapValue@CMap@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PADAAV23@@Z ; CMap::GetTxtMapValue
; Line 205
	mov	BYTE PTR _startReadMapBarrier$[ebp], 1
; Line 206
	mov	BYTE PTR _startReadMapBack$[ebp], bl
; Line 208
	jmp	SHORT $LN1174@LoadTxtMap
$LN7@LoadTxtMap:
	cmp	BYTE PTR _startReadMapBarrier$[ebp], 1
	jne	$LN855@LoadTxtMap
$LN1174@LoadTxtMap:
; Line 210
	mov	eax, esi
	mov	DWORD PTR $T91929[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91929[ebp+16], ebx
	mov	BYTE PTR $T91929[ebp], bl
	lea	edx, DWORD PTR [eax+1]
	npad	2
$LL1187@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1187@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T91929[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	or	DWORD PTR $T146094[ebp], 2
	push	1
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	lea	eax, DWORD PTR $T91929[ebp]
	push	eax
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	cmp	eax, -1
	jne	SHORT $LN18@LoadTxtMap
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL1188@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1188@LoadTxtMap
	sub	eax, edx
	mov	BYTE PTR $T146075[ebp], 1
	jne	SHORT $LN19@LoadTxtMap
$LN18@LoadTxtMap:
	mov	BYTE PTR $T146075[ebp], bl
$LN19@LoadTxtMap:
	test	BYTE PTR $T146094[ebp], 2
	je	SHORT $LN733@LoadTxtMap
	and	DWORD PTR $T146094[ebp], -3		; fffffffdH
	cmp	DWORD PTR $T91929[ebp+20], 16		; 00000010H
	jb	SHORT $LN733@LoadTxtMap
	mov	ecx, DWORD PTR $T91929[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN733@LoadTxtMap:
	cmp	BYTE PTR $T146075[ebp], bl
	je	$LN855@LoadTxtMap
; Line 212
	mov	eax, esi
	mov	DWORD PTR $T91932[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91932[ebp+16], ebx
	mov	BYTE PTR $T91932[ebp], bl
	lea	edx, DWORD PTR [eax+1]
	npad	4
$LL1189@LoadTxtMap:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL1189@LoadTxtMap
	sub	eax, edx
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T91932[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T91932[ebp]
	lea	eax, DWORD PTR _mapbarrier$[ebp]
	lea	edi, DWORD PTR $T91933[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	edi, eax
	lea	edx, DWORD PTR _mapbarrier$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	edx, edi
	je	SHORT $LN781@LoadTxtMap
	cmp	DWORD PTR _mapbarrier$[ebp+20], 16	; 00000010H
	jb	SHORT $LN811@LoadTxtMap
	mov	eax, DWORD PTR _mapbarrier$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN811@LoadTxtMap:
	mov	DWORD PTR _mapbarrier$[ebp+20], 15	; 0000000fH
	mov	DWORD PTR _mapbarrier$[ebp+16], ebx
	mov	BYTE PTR _mapbarrier$[ebp], bl
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN780@LoadTxtMap
	mov	eax, DWORD PTR [edi+16]
	inc	eax
	push	eax
	lea	ecx, DWORD PTR _mapbarrier$[ebp]
	push	edi
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN779@LoadTxtMap
$LN780@LoadTxtMap:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR _mapbarrier$[ebp], edx
	mov	DWORD PTR [edi], ebx
$LN779@LoadTxtMap:
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR _mapbarrier$[ebp+16], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR _mapbarrier$[ebp+20], ecx
	mov	DWORD PTR [edi+16], ebx
	mov	DWORD PTR [edi+20], ebx
$LN781@LoadTxtMap:
	mov	edi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T91933[ebp+20], edi
	jb	SHORT $LN833@LoadTxtMap
	mov	edx, DWORD PTR $T91933[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN833@LoadTxtMap:
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	DWORD PTR $T91933[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T91933[ebp+16], ebx
	mov	BYTE PTR $T91933[ebp], bl
	cmp	DWORD PTR $T91932[ebp+20], edi
	jb	SHORT $LN855@LoadTxtMap
	mov	eax, DWORD PTR $T91932[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN855@LoadTxtMap:
; Line 178
	mov	ecx, DWORD PTR _infile$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	test	BYTE PTR _infile$[ebp+eax+12], 1
	je	$LN12@LoadTxtMap
$LN11@LoadTxtMap:
; Line 217
	push	esi
	call	??_V@YAXPAX@Z				; operator delete[]
; Line 219
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	mov	edi, 16					; 00000010H
	add	esp, 4
	cmp	DWORD PTR [ecx+44], edi
	jb	SHORT $LN871@LoadTxtMap
	mov	eax, DWORD PTR [ecx+24]
	jmp	SHORT $LN872@LoadTxtMap
$LN871@LoadTxtMap:
	lea	eax, DWORD PTR [ecx+24]
$LN872@LoadTxtMap:
	lea	esi, DWORD PTR [eax+1]
$LL1190@LoadTxtMap:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL1190@LoadTxtMap
	sub	eax, esi
	je	SHORT $LN4@LoadTxtMap
; Line 221
	cmp	DWORD PTR [ecx+44], edi
	jb	SHORT $LN877@LoadTxtMap
	mov	esi, DWORD PTR [ecx+24]
	jmp	SHORT $LN878@LoadTxtMap
$LN877@LoadTxtMap:
	lea	esi, DWORD PTR [ecx+24]
$LN878@LoadTxtMap:
; Line 222
	push	edi
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN20@LoadTxtMap
	push	esi
	mov	esi, eax
	call	??0CGdiBmp@@QAE@PAD@Z			; CGdiBmp::CGdiBmp
	jmp	SHORT $LN21@LoadTxtMap
$LN20@LoadTxtMap:
	xor	eax, eax
$LN21@LoadTxtMap:
	mov	edx, DWORD PTR _this$GSCopy$[ebp]
	mov	DWORD PTR [edx+20], eax
$LN4@LoadTxtMap:
; Line 225
	mov	esi, DWORD PTR _this$GSCopy$[ebp]
	mov	ecx, DWORD PTR [esi+68]
	mov	ebx, DWORD PTR [esi+64]
	call	?initMapMatrix@CMap@@QAEXHHH@Z		; CMap::initMapMatrix
; Line 226
	mov	eax, esi
	mov	BYTE PTR [eax+12], 1
; Line 229
	xor	eax, eax
	mov	DWORD PTR _t_col$[ebp], eax
; Line 230
	mov	DWORD PTR _t_row$[ebp], eax
	npad	13
$LL3@LoadTxtMap:
; Line 231
	mov	ecx, DWORD PTR _t_row$[ebp]
	mov	edx, DWORD PTR _this$GSCopy$[ebp]
	cmp	ecx, DWORD PTR [edx+68]
	jge	$LN2@LoadTxtMap
; Line 233
	push	1
	lea	eax, DWORD PTR $T149042[ebp]
	push	eax
	lea	ecx, DWORD PTR _mapback$[ebp]
	push	ecx
	mov	BYTE PTR $T149042[ebp], 44		; 0000002cH
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	edi, eax
; Line 234
	push	edi
	xor	ecx, ecx
	lea	esi, DWORD PTR $T91949[ebp]
	lea	edx, DWORD PTR _mapback$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN885@LoadTxtMap
	mov	eax, DWORD PTR [eax]
$LN885@LoadTxtMap:
	push	eax
	call	_atoi
	add	esp, 4
	cmp	DWORD PTR $T91949[ebp+20], 16		; 00000010H
	mov	ebx, eax
	jb	SHORT $LN897@LoadTxtMap
	mov	edx, DWORD PTR $T91949[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN897@LoadTxtMap:
; Line 235
	mov	eax, DWORD PTR _mapback$[ebp+16]
	push	eax
	lea	ecx, DWORD PTR [edi+1]
	lea	esi, DWORD PTR $T91950[ebp]
	lea	edx, DWORD PTR _mapback$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	esi, eax
	lea	ecx, DWORD PTR _mapback$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	ecx, esi
	je	SHORT $LN917@LoadTxtMap
	cmp	DWORD PTR _mapback$[ebp+20], 16		; 00000010H
	jb	SHORT $LN947@LoadTxtMap
	mov	edx, DWORD PTR _mapback$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN947@LoadTxtMap:
	xor	edi, edi
	mov	DWORD PTR _mapback$[ebp+20], 15		; 0000000fH
	mov	DWORD PTR _mapback$[ebp+16], edi
	mov	BYTE PTR _mapback$[ebp], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jae	SHORT $LN916@LoadTxtMap
	mov	eax, DWORD PTR [esi+16]
	inc	eax
	push	eax
	lea	eax, DWORD PTR _mapback$[ebp]
	push	esi
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN915@LoadTxtMap
$LN916@LoadTxtMap:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR _mapback$[ebp], ecx
	mov	DWORD PTR [esi], edi
$LN915@LoadTxtMap:
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR _mapback$[ebp+16], edx
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR _mapback$[ebp+20], eax
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
$LN917@LoadTxtMap:
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T91950[ebp+20], 16		; 00000010H
	jb	SHORT $LN969@LoadTxtMap
	mov	ecx, DWORD PTR $T91950[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN969@LoadTxtMap:
; Line 236
	mov	edx, DWORD PTR _t_row$[ebp]
	mov	edi, DWORD PTR _t_col$[ebp]
	push	ebx
	mov	ebx, DWORD PTR _this$GSCopy$[ebp]
	push	edx
	push	edi
	push	ebx
	call	?setBackMatrix@CMap@@QAEXHHH@Z		; CMap::setBackMatrix
; Line 238
	push	1
	lea	eax, DWORD PTR $T149412[ebp]
	push	eax
	lea	ecx, DWORD PTR _mapbarrier$[ebp]
	push	ecx
	mov	BYTE PTR $T149412[ebp], 44		; 0000002cH
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 239
	push	eax
	xor	ecx, ecx
	lea	esi, DWORD PTR $T91951[ebp]
	lea	edx, DWORD PTR _mapbarrier$[ebp]
	mov	DWORD PTR _pos$[ebp], eax
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN987@LoadTxtMap
	mov	eax, DWORD PTR [eax]
$LN987@LoadTxtMap:
	push	eax
	call	_atoi
	add	esp, 4
	cmp	DWORD PTR $T91951[ebp+20], 16		; 00000010H
	mov	DWORD PTR _gid$91948[ebp], eax
	jb	SHORT $LN999@LoadTxtMap
	mov	edx, DWORD PTR $T91951[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN999@LoadTxtMap:
; Line 240
	mov	eax, DWORD PTR _mapbarrier$[ebp+16]
	mov	ecx, DWORD PTR _pos$[ebp]
	push	eax
	inc	ecx
	lea	esi, DWORD PTR $T91952[ebp]
	lea	edx, DWORD PTR _mapbarrier$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	esi, eax
	lea	ecx, DWORD PTR _mapbarrier$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	ecx, esi
	je	SHORT $LN1019@LoadTxtMap
	cmp	DWORD PTR _mapbarrier$[ebp+20], 16	; 00000010H
	jb	SHORT $LN1049@LoadTxtMap
	mov	edx, DWORD PTR _mapbarrier$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1049@LoadTxtMap:
	xor	eax, eax
	mov	DWORD PTR _mapbarrier$[ebp+20], 15	; 0000000fH
	mov	DWORD PTR _mapbarrier$[ebp+16], eax
	mov	BYTE PTR _mapbarrier$[ebp], al
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jae	SHORT $LN1018@LoadTxtMap
	mov	eax, DWORD PTR [esi+16]
	inc	eax
	push	eax
	lea	eax, DWORD PTR _mapbarrier$[ebp]
	push	esi
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	SHORT $LN1017@LoadTxtMap
$LN1018@LoadTxtMap:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR _mapbarrier$[ebp], ecx
	mov	DWORD PTR [esi], eax
$LN1017@LoadTxtMap:
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR _mapbarrier$[ebp+16], edx
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR _mapbarrier$[ebp+20], ecx
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
$LN1019@LoadTxtMap:
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T91952[ebp+20], 16		; 00000010H
	jb	SHORT $LN1071@LoadTxtMap
	mov	edx, DWORD PTR $T91952[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1071@LoadTxtMap:
; Line 241
	test	edi, edi
	js	$LN1085@LoadTxtMap
	mov	eax, DWORD PTR [ebx+64]
	cmp	edi, eax
	jge	$LN1085@LoadTxtMap
	mov	edx, DWORD PTR _t_row$[ebp]
	test	edx, edx
	js	$LN1085@LoadTxtMap
	mov	ecx, DWORD PTR [ebx+68]
	cmp	edx, ecx
	jge	$LN1085@LoadTxtMap
	mov	esi, DWORD PTR _gid$91948[ebp]
	test	esi, esi
	jle	SHORT $LN1083@LoadTxtMap
	imul	eax, ecx
	cmp	esi, eax
	jge	$LN1172@LoadTxtMap
$LN1083@LoadTxtMap:
	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [ecx+edi*4], esi
; Line 243
	inc	edi
	mov	BYTE PTR [ebx+12], 1
	mov	DWORD PTR _t_col$[ebp], edi
; Line 244
	cmp	edi, DWORD PTR [ebx+64]
	jne	SHORT $LN1@LoadTxtMap
; Line 247
	inc	edx
	mov	DWORD PTR _t_col$[ebp], 0
	mov	DWORD PTR _t_row$[ebp], edx
$LN1@LoadTxtMap:
; Line 231
	cmp	DWORD PTR _pos$[ebp], -1
	jne	$LL3@LoadTxtMap
$LN2@LoadTxtMap:
; Line 251
	mov	edi, DWORD PTR _this$GSCopy$[ebp]
	call	?printMap@CMap@@QAEXXZ			; CMap::printMap
; Line 253
	mov	esi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR _mapbarrier$[ebp+20], esi
	jb	SHORT $LN1100@LoadTxtMap
	mov	ecx, DWORD PTR _mapbarrier$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1100@LoadTxtMap:
	xor	ebx, ebx
	mov	edi, 15					; 0000000fH
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR _mapbarrier$[ebp+20], edi
	mov	DWORD PTR _mapbarrier$[ebp+16], ebx
	mov	BYTE PTR _mapbarrier$[ebp], bl
	cmp	DWORD PTR _mapback$[ebp+20], esi
	jb	SHORT $LN1122@LoadTxtMap
	mov	edx, DWORD PTR _mapback$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1122@LoadTxtMap:
	mov	ecx, DWORD PTR _infile$[ebp]
	mov	DWORD PTR _mapback$[ebp+20], edi
	mov	DWORD PTR _mapback$[ebp+16], ebx
	mov	BYTE PTR _mapback$[ebp], bl
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _infile$[ebp+104]
	mov	DWORD PTR $T149957[ebp], eax
	mov	DWORD PTR _infile$[ebp+edx], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	lea	ecx, DWORD PTR _infile$[ebp+16]
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _infile$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	edx, DWORD PTR _infile$[ebp+104]
	mov	DWORD PTR _infile$[ebp+ecx], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	edx
$LN1202@LoadTxtMap:
	mov	DWORD PTR _infile$[ebp+104], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
$LN1172@LoadTxtMap:
; Line 241
	push	OFFSET __TI2PA_W
	lea	edx, DWORD PTR $T149784[ebp]
	push	edx
	mov	DWORD PTR $T149784[ebp], OFFSET ??_C@_1BC@GLMAJFJM@V?$POWW?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@
	call	__CxxThrowException@8
$LN1203@LoadTxtMap:
$LN1085@LoadTxtMap:
	push	OFFSET __TI2PA_W
	lea	eax, DWORD PTR $T149783[ebp]
	push	eax
	mov	DWORD PTR $T149783[ebp], OFFSET ??_C@_1BC@IOCOMCJD@w?i?$JG5?$HN?$CC_?$BFP?$DMe?$OAeH?$PP?$AB?$AA?$AA@
	call	__CxxThrowException@8
$LN1204@LoadTxtMap:
$LN1201@LoadTxtMap:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$1:
	lea	ecx, DWORD PTR _infile$[ebp]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$24:
	mov	ecx, DWORD PTR $T146233[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$2:
	lea	ecx, DWORD PTR _mapback$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$3:
	lea	ecx, DWORD PTR _mapbarrier$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$27:
	lea	ecx, DWORD PTR $T146581[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$12:
	lea	ecx, DWORD PTR $T91856[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$13:
	lea	ecx, DWORD PTR $T91921[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$17:
	lea	ecx, DWORD PTR $T91932[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$18:
	lea	ecx, DWORD PTR $T91933[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$21:
	lea	ecx, DWORD PTR $T91950[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$23:
	lea	ecx, DWORD PTR $T91952[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadTxtMap@CMap@@QAEXPBD@Z$29:
	mov	ecx, DWORD PTR $T149957[ebp]
	sub	ecx, 88					; 00000058H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$?LoadTxtMap@CMap@@QAEXPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadTxtMap@CMap@@QAEXPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadTxtMap@CMap@@QAEXPBD@Z ENDP			; CMap::LoadTxtMap
PUBLIC	?id@?$codecvt@DDH@std@@2V0locale@2@A		; std::codecvt<char,char,int>::id
;	COMDAT ?id@?$codecvt@DDH@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDH@std@@2V0locale@2@A DD 01H DUP (?)	; std::codecvt<char,char,int>::id
CRT$XCU	ENDS
END
