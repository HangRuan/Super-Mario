; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Administrator\Documents\Visual Studio 2010\Projects\SuperMario__\SuperMario_\SuperMario\CDesktop.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	@__security_check_cookie@4:PROC
EXTRN	__imp__GetVersion@0:PROC
EXTRN	__imp__GetDeviceCaps@8:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
PUBLIC	__$ArrayPad$
PUBLIC	?ChangeMode@CDesktop@@QAE_NHH@Z			; CDesktop::ChangeMode
; Function compile flags: /Ogtp
;	COMDAT ?ChangeMode@CDesktop@@QAE_NHH@Z
_TEXT	SEGMENT
_devmode$ = -160					; size = 156
__$ArrayPad$ = -4					; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?ChangeMode@CDesktop@@QAE_NHH@Z PROC			; CDesktop::ChangeMode, COMDAT
; _this$ = ebx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\cdesktop.cpp
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 56
	mov	eax, DWORD PTR _width$[ebp]
	push	esi
	push	edi
	mov	ecx, 39					; 00000027H
	mov	esi, ebx
	lea	edi, DWORD PTR _devmode$[ebp]
	rep movsd
; Line 57
	mov	ecx, DWORD PTR _height$[ebp]
; Line 61
	push	4
	lea	edx, DWORD PTR _devmode$[ebp]
	push	edx
	mov	DWORD PTR _devmode$[ebp+108], eax
	mov	DWORD PTR _devmode$[ebp+112], ecx
	mov	DWORD PTR _devmode$[ebp+40], 1572864	; 00180000H
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
	pop	edi
	pop	esi
	test	eax, eax
	jne	SHORT $LN1@ChangeMode
; Line 63
	mov	al, 1
	mov	BYTE PTR [ebx+156], al
; Line 67
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
$LN1@ChangeMode:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	xor	al, al
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeMode@CDesktop@@QAE_NHH@Z ENDP			; CDesktop::ChangeMode
_TEXT	ENDS
PUBLIC	?ResetMode@CDesktop@@QAEXXZ			; CDesktop::ResetMode
; Function compile flags: /Ogtp
;	COMDAT ?ResetMode@CDesktop@@QAEXXZ
_TEXT	SEGMENT
?ResetMode@CDesktop@@QAEXXZ PROC			; CDesktop::ResetMode, COMDAT
; _this$ = esi
; Line 42
	cmp	BYTE PTR [esi+156], 0
	je	SHORT $LN1@ResetMode
; Line 44
	push	0
	push	esi
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
; Line 45
	mov	BYTE PTR [esi+156], 0
$LN1@ResetMode:
; Line 47
	ret	0
?ResetMode@CDesktop@@QAEXXZ ENDP			; CDesktop::ResetMode
_TEXT	ENDS
PUBLIC	?SaveMode@CDesktop@@QAEXXZ			; CDesktop::SaveMode
; Function compile flags: /Ogtp
;	COMDAT ?SaveMode@CDesktop@@QAEXXZ
_TEXT	SEGMENT
?SaveMode@CDesktop@@QAEXXZ PROC				; CDesktop::SaveMode, COMDAT
; _this$ = esi
; Line 21
	push	ebx
	push	edi
; Line 22
	push	0
	call	DWORD PTR __imp__GetDC@4
; Line 25
	mov	ebx, DWORD PTR __imp__GetDeviceCaps@8
	mov	edi, eax
	push	8
	push	edi
	mov	DWORD PTR [esi+36], 156			; 0000009cH
	call	ebx
; Line 26
	push	10					; 0000000aH
	push	edi
	mov	DWORD PTR [esi+108], eax
	call	ebx
; Line 27
	push	12					; 0000000cH
	push	edi
	mov	DWORD PTR [esi+112], eax
	call	ebx
	mov	DWORD PTR [esi+104], eax
; Line 28
	mov	DWORD PTR [esi+40], 1835008		; 001c0000H
; Line 30
	call	DWORD PTR __imp__GetVersion@0
	test	eax, eax
	js	SHORT $LN1@SaveMode
; Line 32
	or	DWORD PTR [esi+40], 4194304		; 00400000H
; Line 33
	push	116					; 00000074H
	push	edi
	call	ebx
	mov	DWORD PTR [esi+120], eax
$LN1@SaveMode:
; Line 35
	push	edi
	push	0
	call	DWORD PTR __imp__ReleaseDC@8
	pop	edi
	pop	ebx
; Line 36
	ret	0
?SaveMode@CDesktop@@QAEXXZ ENDP				; CDesktop::SaveMode
_TEXT	ENDS
PUBLIC	??1CDesktop@@QAE@XZ				; CDesktop::~CDesktop
; Function compile flags: /Ogtp
;	COMDAT ??1CDesktop@@QAE@XZ
_TEXT	SEGMENT
??1CDesktop@@QAE@XZ PROC				; CDesktop::~CDesktop, COMDAT
; _this$ = esi
; Line 16
	cmp	BYTE PTR [esi+156], 0
	je	SHORT $LN3@CDesktop
	push	0
	push	esi
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
	mov	BYTE PTR [esi+156], 0
$LN3@CDesktop:
; Line 17
	ret	0
??1CDesktop@@QAE@XZ ENDP				; CDesktop::~CDesktop
_TEXT	ENDS
PUBLIC	??0CDesktop@@QAE@XZ				; CDesktop::CDesktop
; Function compile flags: /Ogtp
;	COMDAT ??0CDesktop@@QAE@XZ
_TEXT	SEGMENT
??0CDesktop@@QAE@XZ PROC				; CDesktop::CDesktop, COMDAT
; _this$ = esi
; Line 9
	push	ebx
	push	edi
; Line 10
	push	0
	mov	BYTE PTR [esi+156], 0
	call	DWORD PTR __imp__GetDC@4
	mov	ebx, DWORD PTR __imp__GetDeviceCaps@8
	mov	edi, eax
	push	8
	push	edi
	mov	DWORD PTR [esi+36], 156			; 0000009cH
	call	ebx
	push	10					; 0000000aH
	push	edi
	mov	DWORD PTR [esi+108], eax
	call	ebx
	push	12					; 0000000cH
	push	edi
	mov	DWORD PTR [esi+112], eax
	call	ebx
	mov	DWORD PTR [esi+104], eax
	mov	DWORD PTR [esi+40], 1835008		; 001c0000H
	call	DWORD PTR __imp__GetVersion@0
	test	eax, eax
	js	SHORT $LN3@CDesktop@2
	or	DWORD PTR [esi+40], 4194304		; 00400000H
	push	116					; 00000074H
	push	edi
	call	ebx
	mov	DWORD PTR [esi+120], eax
$LN3@CDesktop@2:
	push	edi
	push	0
	call	DWORD PTR __imp__ReleaseDC@8
	pop	edi
; Line 11
	mov	eax, esi
	pop	ebx
	ret	0
??0CDesktop@@QAE@XZ ENDP				; CDesktop::CDesktop
END
