; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Administrator\Documents\Visual Studio 2010\Projects\SuperMario__\SuperMario_\SuperMario\CSprite.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?UpdatePosition@CSprite@@UAEXUtagRECT@@_N@Z	; CSprite::UpdatePosition
PUBLIC	?UpdateDirection@CSprite@@UAEXXZ		; CSprite::UpdateDirection
PUBLIC	?isPosBarrier@CSprite@@UAE_NUtagPOINT@@@Z	; CSprite::isPosBarrier
PUBLIC	?CheckMoveBound@CSprite@@UAE_NXZ		; CSprite::CheckMoveBound
PUBLIC	?CheckBound@CSprite@@UAE_NUtagRECT@@H@Z		; CSprite::CheckBound
PUBLIC	?DrawAnimation@CSprite@@UAEXPAUHDC__@@@Z	; CSprite::DrawAnimation
PUBLIC	?UpdateFrame@CSprite@@UAE_N_N@Z			; CSprite::UpdateFrame
PUBLIC	??_R4CSprite@@6B@				; CSprite::`RTTI Complete Object Locator'
PUBLIC	??_R3CSprite@@8					; CSprite::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSprite@@8					; CSprite::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSprite@@8			; CSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCSprite@@@8				; CSprite `RTTI Type Descriptor'
PUBLIC	?getDIB@CSprite@@UAEPAVCGdiBmp@@XZ		; CSprite::getDIB
PUBLIC	?setTransRGB@CSprite@@UAEXK@Z			; CSprite::setTransRGB
PUBLIC	?getTotalFrames@CSprite@@UAEHXZ			; CSprite::getTotalFrames
PUBLIC	?setTotalFrames@CSprite@@UAEXH@Z		; CSprite::setTotalFrames
PUBLIC	?getRowFrames@CSprite@@UAEHXZ			; CSprite::getRowFrames
PUBLIC	?setRowFrames@CSprite@@UAEXH@Z			; CSprite::setRowFrames
PUBLIC	?getFrameSize@CSprite@@UAE?AUtagSIZE@@XZ	; CSprite::getFrameSize
PUBLIC	?setFrameSize@CSprite@@UAEXUtagSIZE@@@Z		; CSprite::setFrameSize
PUBLIC	?getFrameCount@CSprite@@UAEHXZ			; CSprite::getFrameCount
PUBLIC	?getRatio@CSprite@@UAENXZ			; CSprite::getRatio
PUBLIC	?setRatio@CSprite@@UAEXN@Z			; CSprite::setRatio
PUBLIC	?getMirror@CSprite@@UAEHXZ			; CSprite::getMirror
PUBLIC	?setMirror@CSprite@@UAEXH@Z			; CSprite::setMirror
PUBLIC	?getGlobalPos@CSprite@@UAE?AUtagPOINT@@XZ	; CSprite::getGlobalPos
PUBLIC	?setGlobalPos@CSprite@@UAEXUtagPOINT@@@Z	; CSprite::setGlobalPos
PUBLIC	?getPos@CSprite@@UAE?AUtagPOINT@@XZ		; CSprite::getPos
PUBLIC	?setPos@CSprite@@UAEXUtagPOINT@@@Z		; CSprite::setPos
PUBLIC	?getDirection@CSprite@@UAEHXZ			; CSprite::getDirection
PUBLIC	?setDirection@CSprite@@UAEXH@Z			; CSprite::setDirection
PUBLIC	?getLastDir@CSprite@@UAEHXZ			; CSprite::getLastDir
PUBLIC	?setLastDir@CSprite@@UAEXH@Z			; CSprite::setLastDir
PUBLIC	?getActive@CSprite@@UAE_NXZ			; CSprite::getActive
PUBLIC	?setActive@CSprite@@UAEX_N@Z			; CSprite::setActive
PUBLIC	?getVisible@CSprite@@UAE_NXZ			; CSprite::getVisible
PUBLIC	?setVisible@CSprite@@UAEX_N@Z			; CSprite::setVisible
PUBLIC	?getSpeed@CSprite@@UAEHXZ			; CSprite::getSpeed
PUBLIC	?setSpeed@CSprite@@UAEXH@Z			; CSprite::setSpeed
PUBLIC	?getDead@CSprite@@UAE_NXZ			; CSprite::getDead
PUBLIC	?setDead@CSprite@@UAEX_N@Z			; CSprite::setDead
PUBLIC	?getRestLife@CSprite@@UAEHXZ			; CSprite::getRestLife
PUBLIC	?setRestLife@CSprite@@UAEXH@Z			; CSprite::setRestLife
PUBLIC	?getScore@CSprite@@UAEHXZ			; CSprite::getScore
PUBLIC	?setScore@CSprite@@UAEXH@Z			; CSprite::setScore
PUBLIC	?getJumping@CSprite@@UAE_NXZ			; CSprite::getJumping
PUBLIC	?setJumping@CSprite@@UAEX_N@Z			; CSprite::setJumping
PUBLIC	?getFalling@CSprite@@UAE_NXZ			; CSprite::getFalling
PUBLIC	?setFalling@CSprite@@UAEX_N@Z			; CSprite::setFalling
PUBLIC	?abs@@YAJJ@Z					; abs
PUBLIC	?GetShrinkRect@CSprite@@AAE?AUtagRECT@@H@Z	; CSprite::GetShrinkRect
PUBLIC	?CollideWith@CSprite@@UAE_NPAV1@H@Z		; CSprite::CollideWith
PUBLIC	??_GCSprite@@UAEPAXI@Z				; CSprite::`scalar deleting destructor'
PUBLIC	?getRatioSize@CSprite@@AAE?AUtagSIZE@@XZ	; CSprite::getRatioSize
PUBLIC	??_7CSprite@@6B@				; CSprite::`vftable'
EXTRN	__imp__InflateRect@12:PROC
EXTRN	??_ECSprite@@UAEPAXI@Z:PROC			; CSprite::`vector deleting destructor'
EXTRN	_rand:PROC
;	COMDAT ??_7CSprite@@6B@
CONST	SEGMENT
??_7CSprite@@6B@ DD FLAT:??_R4CSprite@@6B@		; CSprite::`vftable'
	DD	FLAT:??_ECSprite@@UAEPAXI@Z
	DD	FLAT:?getDIB@CSprite@@UAEPAVCGdiBmp@@XZ
	DD	FLAT:?setTransRGB@CSprite@@UAEXK@Z
	DD	FLAT:?getTotalFrames@CSprite@@UAEHXZ
	DD	FLAT:?setTotalFrames@CSprite@@UAEXH@Z
	DD	FLAT:?getRowFrames@CSprite@@UAEHXZ
	DD	FLAT:?setRowFrames@CSprite@@UAEXH@Z
	DD	FLAT:?getFrameSize@CSprite@@UAE?AUtagSIZE@@XZ
	DD	FLAT:?setFrameSize@CSprite@@UAEXUtagSIZE@@@Z
	DD	FLAT:?getFrameCount@CSprite@@UAEHXZ
	DD	FLAT:?getRatio@CSprite@@UAENXZ
	DD	FLAT:?setRatio@CSprite@@UAEXN@Z
	DD	FLAT:?getMirror@CSprite@@UAEHXZ
	DD	FLAT:?setMirror@CSprite@@UAEXH@Z
	DD	FLAT:?getGlobalPos@CSprite@@UAE?AUtagPOINT@@XZ
	DD	FLAT:?setGlobalPos@CSprite@@UAEXUtagPOINT@@@Z
	DD	FLAT:?getPos@CSprite@@UAE?AUtagPOINT@@XZ
	DD	FLAT:?setPos@CSprite@@UAEXUtagPOINT@@@Z
	DD	FLAT:?getDirection@CSprite@@UAEHXZ
	DD	FLAT:?setDirection@CSprite@@UAEXH@Z
	DD	FLAT:?getLastDir@CSprite@@UAEHXZ
	DD	FLAT:?setLastDir@CSprite@@UAEXH@Z
	DD	FLAT:?getActive@CSprite@@UAE_NXZ
	DD	FLAT:?setActive@CSprite@@UAEX_N@Z
	DD	FLAT:?getVisible@CSprite@@UAE_NXZ
	DD	FLAT:?setVisible@CSprite@@UAEX_N@Z
	DD	FLAT:?getSpeed@CSprite@@UAEHXZ
	DD	FLAT:?setSpeed@CSprite@@UAEXH@Z
	DD	FLAT:?getDead@CSprite@@UAE_NXZ
	DD	FLAT:?setDead@CSprite@@UAEX_N@Z
	DD	FLAT:?getRestLife@CSprite@@UAEHXZ
	DD	FLAT:?setRestLife@CSprite@@UAEXH@Z
	DD	FLAT:?getScore@CSprite@@UAEHXZ
	DD	FLAT:?setScore@CSprite@@UAEXH@Z
	DD	FLAT:?getJumping@CSprite@@UAE_NXZ
	DD	FLAT:?setJumping@CSprite@@UAEX_N@Z
	DD	FLAT:?getFalling@CSprite@@UAE_NXZ
	DD	FLAT:?setFalling@CSprite@@UAEX_N@Z
	DD	FLAT:?UpdateFrame@CSprite@@UAE_N_N@Z
	DD	FLAT:?DrawAnimation@CSprite@@UAEXPAUHDC__@@@Z
	DD	FLAT:?CheckBound@CSprite@@UAE_NUtagRECT@@H@Z
	DD	FLAT:?CollideWith@CSprite@@UAE_NPAV1@H@Z
	DD	FLAT:?CheckMoveBound@CSprite@@UAE_NXZ
	DD	FLAT:?isPosBarrier@CSprite@@UAE_NUtagPOINT@@@Z
	DD	FLAT:?UpdateDirection@CSprite@@UAEXXZ
	DD	FLAT:?UpdatePosition@CSprite@@UAEXUtagRECT@@_N@Z
CONST	ENDS
;	COMDAT ??_R4CSprite@@6B@
rdata$r	SEGMENT
??_R4CSprite@@6B@ DD 00H				; CSprite::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSprite@@@8
	DD	FLAT:??_R3CSprite@@8
rdata$r	ENDS
;	COMDAT ??_R3CSprite@@8
rdata$r	SEGMENT
??_R3CSprite@@8 DD 00H					; CSprite::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSprite@@8
rdata$r	ENDS
;	COMDAT ??_R2CSprite@@8
rdata$r	SEGMENT
??_R2CSprite@@8 DD FLAT:??_R1A@?0A@EA@CSprite@@8	; CSprite::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSprite@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSprite@@8 DD FLAT:??_R0?AVCSprite@@@8	; CSprite::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSprite@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSprite@@@8
_DATA	SEGMENT
??_R0?AVCSprite@@@8 DD FLAT:??_7type_info@@6B@		; CSprite `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSprite@@', 00H
; Function compile flags: /Ogtp
;	COMDAT ?UpdateFrame@CSprite@@UAE_N_N@Z
_TEXT	SEGMENT
_isLoop$ = 8						; size = 1
?UpdateFrame@CSprite@@UAE_N_N@Z PROC			; CSprite::UpdateFrame, COMDAT
; _this$ = ecx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\csprite.cpp
; Line 270
	push	ebp
	mov	ebp, esp
; Line 273
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, 1
	add	DWORD PTR [ecx+36], eax
	dec	edx
	push	esi
	pop	esi
	cmp	DWORD PTR [ecx+36], edx
	jle	SHORT $LN1@UpdateFram
; Line 275
	cmp	BYTE PTR _isLoop$[ebp], 0
	je	SHORT $LN6@UpdateFram
; Line 277
	mov	DWORD PTR [ecx+36], 0
; Line 287
	pop	ebp
	ret	4
$LN6@UpdateFram:
; Line 282
	mov	DWORD PTR [ecx+36], edx
; Line 283
	xor	al, al
$LN1@UpdateFram:
; Line 287
	pop	ebp
	ret	4
?UpdateFrame@CSprite@@UAE_N_N@Z ENDP			; CSprite::UpdateFrame
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CheckMoveBound@CSprite@@UAE_NXZ
_TEXT	SEGMENT
?CheckMoveBound@CSprite@@UAE_NXZ PROC			; CSprite::CheckMoveBound, COMDAT
; _this$ = ecx
; Line 259
	mov	al, 1
; Line 260
	ret	0
?CheckMoveBound@CSprite@@UAE_NXZ ENDP			; CSprite::CheckMoveBound
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?isPosBarrier@CSprite@@UAE_NUtagPOINT@@@Z
_TEXT	SEGMENT
_aPos$ = 8						; size = 8
?isPosBarrier@CSprite@@UAE_NUtagPOINT@@@Z PROC		; CSprite::isPosBarrier, COMDAT
; _this$ = ecx
; Line 212
	xor	al, al
; Line 213
	ret	8
?isPosBarrier@CSprite@@UAE_NUtagPOINT@@@Z ENDP		; CSprite::isPosBarrier
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?UpdatePosition@CSprite@@UAEXUtagRECT@@_N@Z
_TEXT	SEGMENT
_bound$ = 8						; size = 16
_keyPressed$ = 24					; size = 1
?UpdatePosition@CSprite@@UAEXUtagRECT@@_N@Z PROC	; CSprite::UpdatePosition, COMDAT
; _this$ = ecx
; Line 183
	ret	20					; 00000014H
?UpdatePosition@CSprite@@UAEXUtagRECT@@_N@Z ENDP	; CSprite::UpdatePosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?UpdateDirection@CSprite@@UAEXXZ
_TEXT	SEGMENT
?UpdateDirection@CSprite@@UAEXXZ PROC			; CSprite::UpdateDirection, COMDAT
; _this$ = ecx
; Line 40
	push	esi
	mov	esi, ecx
; Line 41
	mov	eax, DWORD PTR [esi+68]
	mov	DWORD PTR [esi+72], eax
	npad	7
$LL3@UpdateDire:
; Line 43
	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN7@UpdateDire
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN7@UpdateDire:
	mov	DWORD PTR [esi+68], eax
; Line 45
	cmp	eax, DWORD PTR [esi+72]
	je	SHORT $LL3@UpdateDire
	pop	esi
; Line 46
	ret	0
?UpdateDirection@CSprite@@UAEXXZ ENDP			; CSprite::UpdateDirection
_TEXT	ENDS
PUBLIC	??1CSprite@@UAE@XZ				; CSprite::~CSprite
; Function compile flags: /Ogtp
;	COMDAT ??1CSprite@@UAE@XZ
_TEXT	SEGMENT
??1CSprite@@UAE@XZ PROC					; CSprite::~CSprite, COMDAT
; _this$ = ecx
; Line 31
	mov	DWORD PTR [ecx], OFFSET ??_7CSprite@@6B@
; Line 32
	ret	0
??1CSprite@@UAE@XZ ENDP					; CSprite::~CSprite
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCSprite@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSprite@@UAEPAXI@Z PROC				; CSprite::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CSprite@@6B@
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GCSprite@@UAEPAXI@Z ENDP				; CSprite::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@3fe0000000000000
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\csprite.h
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?getRatioSize@CSprite@@AAE?AUtagSIZE@@XZ
_TEXT	SEGMENT
?getRatioSize@CSprite@@AAE?AUtagSIZE@@XZ PROC		; CSprite::getRatioSize, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = edi
; Line 200
	fild	DWORD PTR [esi+28]
	fmul	QWORD PTR [esi+40]
	fld	QWORD PTR __real@3fe0000000000000
	fadd	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse
; Line 201
	fild	DWORD PTR [esi+32]
	mov	DWORD PTR [edi], eax
	fmul	QWORD PTR [esi+40]
	faddp	ST(1), ST(0)
	call	__ftol2_sse
	mov	DWORD PTR [edi+4], eax
; Line 202
	mov	eax, edi
; Line 203
	ret	0
?getRatioSize@CSprite@@AAE?AUtagSIZE@@XZ ENDP		; CSprite::getRatioSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setFalling@CSprite@@UAEX_N@Z
_TEXT	SEGMENT
_f$ = 8							; size = 1
?setFalling@CSprite@@UAEX_N@Z PROC			; CSprite::setFalling, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _f$[ebp]
	mov	BYTE PTR [ecx+97], al
	pop	ebp
	ret	4
?setFalling@CSprite@@UAEX_N@Z ENDP			; CSprite::setFalling
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getFalling@CSprite@@UAE_NXZ
_TEXT	SEGMENT
?getFalling@CSprite@@UAE_NXZ PROC			; CSprite::getFalling, COMDAT
; _this$ = ecx
; Line 156
	mov	al, BYTE PTR [ecx+97]
	ret	0
?getFalling@CSprite@@UAE_NXZ ENDP			; CSprite::getFalling
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setJumping@CSprite@@UAEX_N@Z
_TEXT	SEGMENT
_j$ = 8							; size = 1
?setJumping@CSprite@@UAEX_N@Z PROC			; CSprite::setJumping, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _j$[ebp]
	mov	BYTE PTR [ecx+96], al
	pop	ebp
	ret	4
?setJumping@CSprite@@UAEX_N@Z ENDP			; CSprite::setJumping
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getJumping@CSprite@@UAE_NXZ
_TEXT	SEGMENT
?getJumping@CSprite@@UAE_NXZ PROC			; CSprite::getJumping, COMDAT
; _this$ = ecx
; Line 153
	mov	al, BYTE PTR [ecx+96]
	ret	0
?getJumping@CSprite@@UAE_NXZ ENDP			; CSprite::getJumping
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setScore@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_sValue$ = 8						; size = 4
?setScore@CSprite@@UAEXH@Z PROC				; CSprite::setScore, COMDAT
; _this$ = ecx
; Line 151
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _sValue$[ebp]
	mov	DWORD PTR [ecx+92], eax
	pop	ebp
	ret	4
?setScore@CSprite@@UAEXH@Z ENDP				; CSprite::setScore
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getScore@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getScore@CSprite@@UAEHXZ PROC				; CSprite::getScore, COMDAT
; _this$ = ecx
; Line 150
	mov	eax, DWORD PTR [ecx+92]
	ret	0
?getScore@CSprite@@UAEHXZ ENDP				; CSprite::getScore
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setRestLife@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_rL$ = 8						; size = 4
?setRestLife@CSprite@@UAEXH@Z PROC			; CSprite::setRestLife, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _rL$[ebp]
	mov	DWORD PTR [ecx+88], eax
	pop	ebp
	ret	4
?setRestLife@CSprite@@UAEXH@Z ENDP			; CSprite::setRestLife
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getRestLife@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getRestLife@CSprite@@UAEHXZ PROC			; CSprite::getRestLife, COMDAT
; _this$ = ecx
; Line 147
	mov	eax, DWORD PTR [ecx+88]
	ret	0
?getRestLife@CSprite@@UAEHXZ ENDP			; CSprite::getRestLife
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setDead@CSprite@@UAEX_N@Z
_TEXT	SEGMENT
_Dead$ = 8						; size = 1
?setDead@CSprite@@UAEX_N@Z PROC				; CSprite::setDead, COMDAT
; _this$ = ecx
; Line 145
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _Dead$[ebp]
	mov	BYTE PTR [ecx+84], al
	pop	ebp
	ret	4
?setDead@CSprite@@UAEX_N@Z ENDP				; CSprite::setDead
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getDead@CSprite@@UAE_NXZ
_TEXT	SEGMENT
?getDead@CSprite@@UAE_NXZ PROC				; CSprite::getDead, COMDAT
; _this$ = ecx
; Line 144
	mov	al, BYTE PTR [ecx+84]
	ret	0
?getDead@CSprite@@UAE_NXZ ENDP				; CSprite::getDead
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setSpeed@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_speedval$ = 8						; size = 4
?setSpeed@CSprite@@UAEXH@Z PROC				; CSprite::setSpeed, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _speedval$[ebp]
	mov	DWORD PTR [ecx+80], eax
	pop	ebp
	ret	4
?setSpeed@CSprite@@UAEXH@Z ENDP				; CSprite::setSpeed
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getSpeed@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getSpeed@CSprite@@UAEHXZ PROC				; CSprite::getSpeed, COMDAT
; _this$ = ecx
; Line 141
	mov	eax, DWORD PTR [ecx+80]
	ret	0
?getSpeed@CSprite@@UAEHXZ ENDP				; CSprite::getSpeed
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setVisible@CSprite@@UAEX_N@Z
_TEXT	SEGMENT
_Visible$ = 8						; size = 1
?setVisible@CSprite@@UAEX_N@Z PROC			; CSprite::setVisible, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _Visible$[ebp]
	mov	BYTE PTR [ecx+77], al
	pop	ebp
	ret	4
?setVisible@CSprite@@UAEX_N@Z ENDP			; CSprite::setVisible
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getVisible@CSprite@@UAE_NXZ
_TEXT	SEGMENT
?getVisible@CSprite@@UAE_NXZ PROC			; CSprite::getVisible, COMDAT
; _this$ = ecx
; Line 138
	mov	al, BYTE PTR [ecx+77]
	ret	0
?getVisible@CSprite@@UAE_NXZ ENDP			; CSprite::getVisible
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setActive@CSprite@@UAEX_N@Z
_TEXT	SEGMENT
_spActive$ = 8						; size = 1
?setActive@CSprite@@UAEX_N@Z PROC			; CSprite::setActive, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _spActive$[ebp]
	mov	BYTE PTR [ecx+76], al
	pop	ebp
	ret	4
?setActive@CSprite@@UAEX_N@Z ENDP			; CSprite::setActive
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getActive@CSprite@@UAE_NXZ
_TEXT	SEGMENT
?getActive@CSprite@@UAE_NXZ PROC			; CSprite::getActive, COMDAT
; _this$ = ecx
; Line 135
	mov	al, BYTE PTR [ecx+76]
	ret	0
?getActive@CSprite@@UAE_NXZ ENDP			; CSprite::getActive
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setLastDir@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_dir$ = 8						; size = 4
?setLastDir@CSprite@@UAEXH@Z PROC			; CSprite::setLastDir, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _dir$[ebp]
	mov	DWORD PTR [ecx+72], eax
	pop	ebp
	ret	4
?setLastDir@CSprite@@UAEXH@Z ENDP			; CSprite::setLastDir
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getLastDir@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getLastDir@CSprite@@UAEHXZ PROC			; CSprite::getLastDir, COMDAT
; _this$ = ecx
; Line 132
	mov	eax, DWORD PTR [ecx+72]
	ret	0
?getLastDir@CSprite@@UAEHXZ ENDP			; CSprite::getLastDir
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setDirection@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_Dir$ = 8						; size = 4
?setDirection@CSprite@@UAEXH@Z PROC			; CSprite::setDirection, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _Dir$[ebp]
	mov	DWORD PTR [ecx+68], eax
	pop	ebp
	ret	4
?setDirection@CSprite@@UAEXH@Z ENDP			; CSprite::setDirection
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getDirection@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getDirection@CSprite@@UAEHXZ PROC			; CSprite::getDirection, COMDAT
; _this$ = ecx
; Line 129
	mov	eax, DWORD PTR [ecx+68]
	ret	0
?getDirection@CSprite@@UAEHXZ ENDP			; CSprite::getDirection
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setPos@CSprite@@UAEXUtagPOINT@@@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 8
?setPos@CSprite@@UAEXUtagPOINT@@@Z PROC			; CSprite::setPos, COMDAT
; _this$ = ecx
; Line 127
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR _pt$[ebp+4]
	mov	DWORD PTR [ecx+60], eax
	mov	DWORD PTR [ecx+64], edx
	pop	ebp
	ret	8
?setPos@CSprite@@UAEXUtagPOINT@@@Z ENDP			; CSprite::setPos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getPos@CSprite@@UAE?AUtagPOINT@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?getPos@CSprite@@UAE?AUtagPOINT@@XZ PROC		; CSprite::getPos, COMDAT
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR [ecx+60]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebp
	ret	4
?getPos@CSprite@@UAE?AUtagPOINT@@XZ ENDP		; CSprite::getPos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setGlobalPos@CSprite@@UAEXUtagPOINT@@@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 8
?setGlobalPos@CSprite@@UAEXUtagPOINT@@@Z PROC		; CSprite::setGlobalPos, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR [ecx+52], eax
	mov	DWORD PTR [ecx+56], edx
	pop	ebp
	ret	8
?setGlobalPos@CSprite@@UAEXUtagPOINT@@@Z ENDP		; CSprite::setGlobalPos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getGlobalPos@CSprite@@UAE?AUtagPOINT@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?getGlobalPos@CSprite@@UAE?AUtagPOINT@@XZ PROC		; CSprite::getGlobalPos, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebp
	ret	4
?getGlobalPos@CSprite@@UAE?AUtagPOINT@@XZ ENDP		; CSprite::getGlobalPos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setMirror@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
?setMirror@CSprite@@UAEXH@Z PROC			; CSprite::setMirror, COMDAT
; _this$ = ecx
; Line 115
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _m$[ebp]
	mov	DWORD PTR [ecx+48], eax
	pop	ebp
	ret	4
?setMirror@CSprite@@UAEXH@Z ENDP			; CSprite::setMirror
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getMirror@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getMirror@CSprite@@UAEHXZ PROC				; CSprite::getMirror, COMDAT
; _this$ = ecx
; Line 114
	mov	eax, DWORD PTR [ecx+48]
	ret	0
?getMirror@CSprite@@UAEHXZ ENDP				; CSprite::getMirror
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setRatio@CSprite@@UAEXN@Z
_TEXT	SEGMENT
_r$ = 8							; size = 8
?setRatio@CSprite@@UAEXN@Z PROC				; CSprite::setRatio, COMDAT
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _r$[ebp]
	fstp	QWORD PTR [ecx+40]
	pop	ebp
	ret	8
?setRatio@CSprite@@UAEXN@Z ENDP				; CSprite::setRatio
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getRatio@CSprite@@UAENXZ
_TEXT	SEGMENT
?getRatio@CSprite@@UAENXZ PROC				; CSprite::getRatio, COMDAT
; _this$ = ecx
; Line 111
	fld	QWORD PTR [ecx+40]
	ret	0
?getRatio@CSprite@@UAENXZ ENDP				; CSprite::getRatio
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getFrameCount@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getFrameCount@CSprite@@UAEHXZ PROC			; CSprite::getFrameCount, COMDAT
; _this$ = ecx
; Line 109
	mov	eax, DWORD PTR [ecx+36]
	ret	0
?getFrameCount@CSprite@@UAEHXZ ENDP			; CSprite::getFrameCount
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setFrameSize@CSprite@@UAEXUtagSIZE@@@Z
_TEXT	SEGMENT
_frmSize$ = 8						; size = 8
?setFrameSize@CSprite@@UAEXUtagSIZE@@@Z PROC		; CSprite::setFrameSize, COMDAT
; _this$ = ecx
; Line 107
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _frmSize$[ebp]
	mov	edx, DWORD PTR _frmSize$[ebp+4]
	mov	DWORD PTR [ecx+28], eax
	mov	DWORD PTR [ecx+32], edx
	pop	ebp
	ret	8
?setFrameSize@CSprite@@UAEXUtagSIZE@@@Z ENDP		; CSprite::setFrameSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getFrameSize@CSprite@@UAE?AUtagSIZE@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?getFrameSize@CSprite@@UAE?AUtagSIZE@@XZ PROC		; CSprite::getFrameSize, COMDAT
; _this$ = ecx
; Line 106
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebp
	ret	4
?getFrameSize@CSprite@@UAE?AUtagSIZE@@XZ ENDP		; CSprite::getFrameSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setRowFrames@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_rowFrameNum$ = 8					; size = 4
?setRowFrames@CSprite@@UAEXH@Z PROC			; CSprite::setRowFrames, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _rowFrameNum$[ebp]
	mov	DWORD PTR [ecx+24], eax
	pop	ebp
	ret	4
?setRowFrames@CSprite@@UAEXH@Z ENDP			; CSprite::setRowFrames
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getRowFrames@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getRowFrames@CSprite@@UAEHXZ PROC			; CSprite::getRowFrames, COMDAT
; _this$ = ecx
; Line 103
	mov	eax, DWORD PTR [ecx+24]
	ret	0
?getRowFrames@CSprite@@UAEHXZ ENDP			; CSprite::getRowFrames
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setTotalFrames@CSprite@@UAEXH@Z
_TEXT	SEGMENT
_totalFrameNum$ = 8					; size = 4
?setTotalFrames@CSprite@@UAEXH@Z PROC			; CSprite::setTotalFrames, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _totalFrameNum$[ebp]
	mov	DWORD PTR [ecx+20], eax
	pop	ebp
	ret	4
?setTotalFrames@CSprite@@UAEXH@Z ENDP			; CSprite::setTotalFrames
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getTotalFrames@CSprite@@UAEHXZ
_TEXT	SEGMENT
?getTotalFrames@CSprite@@UAEHXZ PROC			; CSprite::getTotalFrames, COMDAT
; _this$ = ecx
; Line 100
	mov	eax, DWORD PTR [ecx+20]
	ret	0
?getTotalFrames@CSprite@@UAEHXZ ENDP			; CSprite::getTotalFrames
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?setTransRGB@CSprite@@UAEXK@Z
_TEXT	SEGMENT
_TransColor$ = 8					; size = 4
?setTransRGB@CSprite@@UAEXK@Z PROC			; CSprite::setTransRGB, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _TransColor$[ebp]
	mov	DWORD PTR [ecx+16], eax
	pop	ebp
	ret	4
?setTransRGB@CSprite@@UAEXK@Z ENDP			; CSprite::setTransRGB
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?getDIB@CSprite@@UAEPAVCGdiBmp@@XZ
_TEXT	SEGMENT
?getDIB@CSprite@@UAEPAVCGdiBmp@@XZ PROC			; CSprite::getDIB, COMDAT
; _this$ = ecx
; Line 96
	mov	eax, DWORD PTR [ecx+12]
	ret	0
?getDIB@CSprite@@UAEPAVCGdiBmp@@XZ ENDP			; CSprite::getDIB
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?abs@@YAJJ@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?abs@@YAJJ@Z PROC					; abs, COMDAT
; File d:\microsoft visual studio 10.0\vc\include\stdlib.h
; Line 468
	push	ebp
	mov	ebp, esp
; Line 469
	mov	eax, DWORD PTR __X$[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
; Line 470
	pop	ebp
	ret	0
?abs@@YAJJ@Z ENDP					; abs
; Function compile flags: /Ogtp
;	COMDAT ?CheckBound@CSprite@@UAE_NUtagRECT@@H@Z
_TEXT	SEGMENT
_bound$ = 8						; size = 16
_Dir$ = 24						; size = 4
?CheckBound@CSprite@@UAE_NUtagRECT@@H@Z PROC		; CSprite::CheckBound, COMDAT
; _this$ = ecx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\csprite.cpp
; Line 221
	push	ebp
	mov	ebp, esp
; Line 225
	mov	eax, DWORD PTR _Dir$[ebp]
	push	ebx
	xor	bl, bl
	push	esi
	mov	esi, ecx
	cmp	eax, -1
; Line 227
	jne	SHORT $LN8@CheckBound
; Line 228
	mov	eax, DWORD PTR [esi+68]
$LN8@CheckBound:
; Line 234
	sub	eax, 0
	je	SHORT $LN5@CheckBound
	dec	eax
	je	SHORT $LN3@CheckBound
; Line 247
	pop	esi
	xor	al, al
	pop	ebx
; Line 250
	pop	ebp
	ret	20					; 00000014H
$LN3@CheckBound:
; Line 242
	fild	DWORD PTR [esi+28]
	fmul	QWORD PTR [esi+40]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	ecx, DWORD PTR [esi+60]
	sub	ecx, eax
	cmp	ecx, DWORD PTR _bound$[ebp+8]
	jl	SHORT $LN15@CheckBound
; Line 243
	pop	esi
	mov	al, 1
	pop	ebx
; Line 250
	pop	ebp
	ret	20					; 00000014H
$LN5@CheckBound:
; Line 237
	mov	edx, DWORD PTR [esi+60]
; Line 238
	mov	al, 1
	cmp	edx, DWORD PTR _bound$[ebp]
	jle	SHORT $LN4@CheckBound
$LN15@CheckBound:
; Line 249
	mov	al, bl
$LN4@CheckBound:
	pop	esi
	pop	ebx
; Line 250
	pop	ebp
	ret	20					; 00000014H
?CheckBound@CSprite@@UAE_NUtagRECT@@H@Z ENDP		; CSprite::CheckBound
_TEXT	ENDS
PUBLIC	??0CSprite@@QAE@PAD@Z				; CSprite::CSprite
; Function compile flags: /Ogtp
;	COMDAT ??0CSprite@@QAE@PAD@Z
_TEXT	SEGMENT
_fileName$ = 8						; size = 4
??0CSprite@@QAE@PAD@Z PROC				; CSprite::CSprite, COMDAT
; _this$ = edi
; Line 14
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 15
	xor	ebx, ebx
; Line 22
	push	16					; 00000010H
	mov	DWORD PTR [edi], OFFSET ??_7CSprite@@6B@
	mov	DWORD PTR [edi+72], ebx
	mov	DWORD PTR [edi+68], ebx
	mov	DWORD PTR [edi+80], 10			; 0000000aH
	mov	DWORD PTR [edi+36], ebx
	mov	DWORD PTR [edi+88], ebx
	mov	BYTE PTR [edi+77], 1
	mov	BYTE PTR [edi+84], bl
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN3@CSprite
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	esi
	push	ecx
	mov	esi, eax
	call	??0CGdiBmp@@QAE@PAD@Z			; CGdiBmp::CGdiBmp
	pop	esi
	jmp	SHORT $LN4@CSprite
$LN3@CSprite:
	xor	eax, eax
$LN4@CSprite:
	mov	DWORD PTR [edi+12], eax
; Line 23
	mov	DWORD PTR [edi+16], ebx
; Line 24
	mov	DWORD PTR [edi+8], ebx
; Line 25
	mov	WORD PTR [edi+96], bx
; Line 27
	mov	DWORD PTR [edi+100], ebx
; Line 28
	mov	eax, edi
	pop	ebx
	pop	ebp
	ret	4
??0CSprite@@QAE@PAD@Z ENDP				; CSprite::CSprite
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetShrinkRect@CSprite@@AAE?AUtagRECT@@H@Z
_TEXT	SEGMENT
?GetShrinkRect@CSprite@@AAE?AUtagRECT@@H@Z PROC		; CSprite::GetShrinkRect, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\csprite.h
; Line 213
	fild	DWORD PTR [edi+28]
	push	ebx
	fmul	QWORD PTR [edi+40]
	fld	QWORD PTR __real@3fe0000000000000
	fadd	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse
	fild	DWORD PTR [edi+32]
	mov	ebx, eax
	fmul	QWORD PTR [edi+40]
	faddp	ST(1), ST(0)
	call	__ftol2_sse
; Line 215
	mov	ecx, DWORD PTR [edi+60]
	mov	DWORD PTR [esi], ecx
; Line 216
	mov	edx, DWORD PTR [edi+64]
	mov	DWORD PTR [esi+4], edx
; Line 217
	mov	ecx, DWORD PTR [edi+60]
	add	ecx, ebx
	mov	DWORD PTR [esi+8], ecx
; Line 218
	add	eax, DWORD PTR [edi+64]
; Line 221
	mov	ecx, edx
	sub	ecx, eax
	mov	DWORD PTR [esi+12], eax
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [esi+8]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 222
	push	eax
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__InflateRect@12
; Line 223
	mov	eax, esi
	pop	ebx
; Line 224
	ret	0
?GetShrinkRect@CSprite@@AAE?AUtagRECT@@H@Z ENDP		; CSprite::GetShrinkRect
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtp
;	COMDAT ?CollideWith@CSprite@@UAE_NPAV1@H@Z
_TEXT	SEGMENT
_tw$ = -48						; size = 4
_th$ = -44						; size = 4
_ch$ = -40						; size = 4
_tmpRect$ = -36						; size = 16
_rcThis$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_target$ = 8						; size = 4
_distance$ = 12						; size = 4
?CollideWith@CSprite@@UAE_NPAV1@H@Z PROC		; CSprite::CollideWith, COMDAT
; _this$ = ecx
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	mov	ebx, DWORD PTR _target$[ebp]
	push	esi
	push	edi
; Line 234
	lea	esi, DWORD PTR _rcThis$[ebp]
	mov	edi, ecx
	call	?GetShrinkRect@CSprite@@AAE?AUtagRECT@@H@Z ; CSprite::GetShrinkRect
; Line 235
	lea	esi, DWORD PTR _tmpRect$[ebp]
	mov	edi, ebx
	call	?GetShrinkRect@CSprite@@AAE?AUtagRECT@@H@Z ; CSprite::GetShrinkRect
; Line 237
	mov	eax, DWORD PTR _distance$[ebp]
	mov	ecx, DWORD PTR _tmpRect$[ebp]
; Line 238
	mov	edi, DWORD PTR _tmpRect$[ebp+4]
; Line 239
	mov	edx, DWORD PTR _tmpRect$[ebp+8]
; Line 240
	mov	ebx, DWORD PTR _tmpRect$[ebp+12]
	sub	ecx, eax
; Line 250
	mov	esi, DWORD PTR _rcThis$[ebp+8]
	sub	esi, DWORD PTR _rcThis$[ebp]
	add	ebx, eax
	add	edx, eax
	sub	edi, eax
; Line 252
	mov	eax, DWORD PTR _rcThis$[ebp+12]
	sub	eax, DWORD PTR _rcThis$[ebp+4]
	sub	edx, ecx
	mov	DWORD PTR _ch$[ebp], eax
	mov	DWORD PTR _tw$[ebp], edx
; Line 257
	mov	eax, edx
	cdq
	sub	eax, edx
	sub	ebx, edi
	mov	DWORD PTR _th$[ebp], ebx
	mov	ebx, eax
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	sar	ebx, 1
	sub	eax, ebx
	sub	eax, ecx
	add	eax, DWORD PTR _rcThis$[ebp]
	cdq
	mov	ecx, eax
	mov	eax, DWORD PTR _tw$[ebp]
	xor	ecx, edx
	lea	eax, DWORD PTR [eax+esi]
	sub	ecx, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	ecx, eax
	jge	SHORT $LN3@CollideWit
	mov	esi, DWORD PTR _th$[ebp]
	mov	ecx, DWORD PTR _ch$[ebp]
	mov	eax, esi
	cdq
	sub	eax, edx
	mov	ebx, eax
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	sar	ebx, 1
	sub	eax, ebx
	sub	eax, edi
	add	eax, DWORD PTR _rcThis$[ebp+4]
	cdq
	mov	edi, eax
	xor	edi, edx
	sub	edi, edx
	lea	eax, DWORD PTR [esi+ecx]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	edi, eax
	jge	SHORT $LN3@CollideWit
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 258
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
$LN3@CollideWit:
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	pop	esi
	xor	ecx, ebp
	xor	eax, eax
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?CollideWith@CSprite@@UAE_NPAV1@H@Z ENDP		; CSprite::CollideWith
; Function compile flags: /Ogtp
;	COMDAT ?DrawAnimation@CSprite@@UAEXPAUHDC__@@@Z
_TEXT	SEGMENT
$T138466 = -4						; size = 4
_hDC$ = 8						; size = 4
?DrawAnimation@CSprite@@UAEXPAUHDC__@@@Z PROC		; CSprite::DrawAnimation, COMDAT
; _this$ = ecx
; File c:\users\administrator\documents\visual studio 2010\projects\supermario__\supermario_\supermario\csprite.cpp
; Line 290
	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	sub	esp, 52					; 00000034H
	push	ebx
	push	esi
	mov	esi, ecx
; Line 291
	cmp	DWORD PTR [esi+12], 0
	push	edi
	je	$LN10@DrawAnimat
; Line 293
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+96]
	call	edx
	test	al, al
	je	SHORT $LN10@DrawAnimat
; Line 295
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+72]
	mov	ecx, esi
	call	edx
	sub	eax, 0
; Line 303
	mov	ecx, esi
	je	SHORT $LN3@DrawAnimat
	dec	eax
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+52]
; Line 304
	jne	SHORT $LN12@DrawAnimat
; Line 300
	push	1
; Line 301
	jmp	SHORT $LN13@DrawAnimat
$LN3@DrawAnimat:
; Line 297
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+52]
$LN12@DrawAnimat:
	push	0
$LN13@DrawAnimat:
	call	edx
; Line 309
	fld	QWORD PTR [esi+40]
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR $T138466[esp+64], eax
	mov	eax, DWORD PTR [esi+36]
	cdq
	idiv	DWORD PTR $T138466[esp+64]
	mov	eax, DWORD PTR [esi+48]
	sub	esp, 8
	mov	edi, DWORD PTR [esi+32]
	mov	ebx, DWORD PTR [esi+28]
	fstp	QWORD PTR [esp]
	mov	ecx, edx
	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	eax
	mov	eax, DWORD PTR [esi+36]
	sub	eax, ecx
	imul	ecx, ebx
	cdq
	idiv	DWORD PTR $T138466[esp+80]
	mov	edx, DWORD PTR [esi+60]
	push	edi
	push	ebx
	imul	eax, edi
	push	eax
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	ecx, DWORD PTR [esi+64]
	push	ecx
	push	edx
	push	eax
	mov	eax, DWORD PTR _hDC$[ebp]
	call	?DrawSingleFrame@CGdiBmp@@QAEXPAUHDC__@@HHHHHHNHK@Z ; CGdiBmp::DrawSingleFrame
$LN10@DrawAnimat:
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?DrawAnimation@CSprite@@UAEXPAUHDC__@@@Z ENDP		; CSprite::DrawAnimation
END
